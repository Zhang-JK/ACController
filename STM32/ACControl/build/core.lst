ARM GAS  /tmp/ccWcQ1w7.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"core.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.init_system,"ax",%progbits
  16              		.align	1
  17              		.global	init_system
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	init_system:
  25              	.LFB68:
  26              		.file 1 "Src/core.c"
   1:Src/core.c    **** #include "core.h"
   2:Src/core.c    **** #include <string.h>
   3:Src/core.c    **** #include "timer.h"
   4:Src/core.c    **** #include <stdio.h>
   5:Src/core.c    **** 
   6:Src/core.c    **** // int _write(int fd, char *ptr, int len) {
   7:Src/core.c    **** //   HAL_UART_Transmit(&huart1, (uint8_t *)ptr, len, 0xFFFF);
   8:Src/core.c    **** //   return len;
   9:Src/core.c    **** // }
  10:Src/core.c    **** 
  11:Src/core.c    **** int servo1_up = 1900;
  12:Src/core.c    **** int servo1_down = 1300;
  13:Src/core.c    **** int servo2_up = 1950;
  14:Src/core.c    **** int servo2_down = 1370;
  15:Src/core.c    **** 
  16:Src/core.c    **** struct State state;
  17:Src/core.c    **** 
  18:Src/core.c    **** char RxBuffer[RXBUFFERSIZE]; //接收数据
  19:Src/core.c    **** uint8_t aRxBuffer;           //接收中断缓冲
  20:Src/core.c    **** uint8_t Uart1_Rx_Cnt = 0;    //接收缓冲计数
  21:Src/core.c    **** 
  22:Src/core.c    **** int init_system() {
  27              		.loc 1 22 19 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 70B5     		push	{r4, r5, r6, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
ARM GAS  /tmp/ccWcQ1w7.s 			page 2


  37              		.cfi_offset 14, -4
  23:Src/core.c    ****     state.sw = HAL_GPIO_ReadPin(MAIN_SWITCH_GPIO_Port, MAIN_SWITCH_Pin) == GPIO_PIN_RESET ? SYS_ON 
  38              		.loc 1 23 5 view .LVU1
  39              		.loc 1 23 16 is_stmt 0 view .LVU2
  40 0002 474D     		ldr	r5, .L9
  41 0004 0121     		movs	r1, #1
  42 0006 2846     		mov	r0, r5
  43 0008 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  44              	.LVL0:
  45              		.loc 1 23 100 view .LVU3
  46 000c B0FA80F0 		clz	r0, r0
  47 0010 4009     		lsrs	r0, r0, #5
  48              		.loc 1 23 14 view .LVU4
  49 0012 444C     		ldr	r4, .L9+4
  50 0014 2070     		strb	r0, [r4]
  24:Src/core.c    ****     state.re_sw = HAL_GPIO_ReadPin(REMOTE_SWITCH_GPIO_Port, REMOTE_SWITCH_Pin) == GPIO_PIN_RESET ? 
  51              		.loc 1 24 5 is_stmt 1 view .LVU5
  52              		.loc 1 24 19 is_stmt 0 view .LVU6
  53 0016 0221     		movs	r1, #2
  54 0018 2846     		mov	r0, r5
  55 001a FFF7FEFF 		bl	HAL_GPIO_ReadPin
  56              	.LVL1:
  57              		.loc 1 24 110 view .LVU7
  58 001e 0038     		subs	r0, r0, #0
  59 0020 18BF     		it	ne
  60 0022 0120     		movne	r0, #1
  61              		.loc 1 24 17 view .LVU8
  62 0024 E070     		strb	r0, [r4, #3]
  25:Src/core.c    ****     state.mode = ONOFF_MODE;
  63              		.loc 1 25 5 is_stmt 1 view .LVU9
  64              		.loc 1 25 16 is_stmt 0 view .LVU10
  65 0026 0025     		movs	r5, #0
  66 0028 2571     		strb	r5, [r4, #4]
  26:Src/core.c    ****     state.lightOff = 0;
  67              		.loc 1 26 5 is_stmt 1 view .LVU11
  68              		.loc 1 26 20 is_stmt 0 view .LVU12
  69 002a 6561     		str	r5, [r4, #20]
  27:Src/core.c    ****     state.tarTemp = 26;
  70              		.loc 1 27 5 is_stmt 1 view .LVU13
  71              		.loc 1 27 19 is_stmt 0 view .LVU14
  72 002c 3E4B     		ldr	r3, .L9+8
  73 002e A360     		str	r3, [r4, #8]	@ float
  28:Src/core.c    ****     state.tarTime[0] = 30;
  74              		.loc 1 28 5 is_stmt 1 view .LVU15
  75              		.loc 1 28 22 is_stmt 0 view .LVU16
  76 0030 1E23     		movs	r3, #30
  77 0032 E360     		str	r3, [r4, #12]
  29:Src/core.c    ****     state.tarTime[1] = 30;
  78              		.loc 1 29 5 is_stmt 1 view .LVU17
  79              		.loc 1 29 22 is_stmt 0 view .LVU18
  80 0034 2361     		str	r3, [r4, #16]
  30:Src/core.c    ****     state.startTime = 0;
  81              		.loc 1 30 5 is_stmt 1 view .LVU19
  82              		.loc 1 30 21 is_stmt 0 view .LVU20
  83 0036 E561     		str	r5, [r4, #28]
  31:Src/core.c    ****     state.shutDownTime = 0;
  84              		.loc 1 31 5 is_stmt 1 view .LVU21
ARM GAS  /tmp/ccWcQ1w7.s 			page 3


  85              		.loc 1 31 24 is_stmt 0 view .LVU22
  86 0038 2562     		str	r5, [r4, #32]
  32:Src/core.c    ****     state.tempAchieveCounter = 0;
  87              		.loc 1 32 5 is_stmt 1 view .LVU23
  88              		.loc 1 32 30 is_stmt 0 view .LVU24
  89 003a 6562     		str	r5, [r4, #36]
  33:Src/core.c    **** 
  34:Src/core.c    ****     // usDelayInit();
  35:Src/core.c    ****     timerInit();
  90              		.loc 1 35 5 is_stmt 1 view .LVU25
  91 003c FFF7FEFF 		bl	timerInit
  92              	.LVL2:
  36:Src/core.c    ****     HAL_ADCEx_Calibration_Start(&hadc1);
  93              		.loc 1 36 5 view .LVU26
  94 0040 3A4E     		ldr	r6, .L9+12
  95 0042 3046     		mov	r0, r6
  96 0044 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
  97              	.LVL3:
  37:Src/core.c    ****     HAL_Delay(500);
  98              		.loc 1 37 5 view .LVU27
  99 0048 4FF4FA70 		mov	r0, #500
 100 004c FFF7FEFF 		bl	HAL_Delay
 101              	.LVL4:
  38:Src/core.c    **** 
  39:Src/core.c    ****     HAL_ADC_Start(&hadc1);
 102              		.loc 1 39 5 view .LVU28
 103 0050 3046     		mov	r0, r6
 104 0052 FFF7FEFF 		bl	HAL_ADC_Start
 105              	.LVL5:
  40:Src/core.c    ****     HAL_UART_Receive_IT(&huart1, (uint8_t *)&aRxBuffer, 1);
 106              		.loc 1 40 5 view .LVU29
 107 0056 0122     		movs	r2, #1
 108 0058 3549     		ldr	r1, .L9+16
 109 005a 3648     		ldr	r0, .L9+20
 110 005c FFF7FEFF 		bl	HAL_UART_Receive_IT
 111              	.LVL6:
  41:Src/core.c    ****     HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 112              		.loc 1 41 5 view .LVU30
 113 0060 2946     		mov	r1, r5
 114 0062 3548     		ldr	r0, .L9+24
 115 0064 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 116              	.LVL7:
  42:Src/core.c    ****     HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 117              		.loc 1 42 5 view .LVU31
 118 0068 2946     		mov	r1, r5
 119 006a 3448     		ldr	r0, .L9+28
 120 006c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 121              	.LVL8:
  43:Src/core.c    ****     if(state.sw == SYS_OFF) {
 122              		.loc 1 43 5 view .LVU32
 123              		.loc 1 43 13 is_stmt 0 view .LVU33
 124 0070 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 125              		.loc 1 43 7 view .LVU34
 126 0072 D3B9     		cbnz	r3, .L2
  44:Src/core.c    ****         __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, servo2_down);
 127              		.loc 1 44 9 is_stmt 1 view .LVU35
 128 0074 314B     		ldr	r3, .L9+28
ARM GAS  /tmp/ccWcQ1w7.s 			page 4


 129 0076 1B68     		ldr	r3, [r3]
 130 0078 314A     		ldr	r2, .L9+32
 131 007a 1268     		ldr	r2, [r2]
 132 007c 5A63     		str	r2, [r3, #52]
  45:Src/core.c    ****         __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_1, servo1_down);
 133              		.loc 1 45 9 view .LVU36
 134 007e 2E4B     		ldr	r3, .L9+24
 135 0080 1B68     		ldr	r3, [r3]
 136 0082 304A     		ldr	r2, .L9+36
 137 0084 1268     		ldr	r2, [r2]
 138 0086 5A63     		str	r2, [r3, #52]
  46:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_SET);
 139              		.loc 1 46 9 view .LVU37
 140 0088 0122     		movs	r2, #1
 141 008a 4FF40051 		mov	r1, #8192
 142 008e 2E48     		ldr	r0, .L9+40
 143 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 144              	.LVL9:
  47:Src/core.c    **** 
  48:Src/core.c    ****         while(HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_SET) {
 145              		.loc 1 48 9 view .LVU38
 146              	.L3:
 147              		.loc 1 48 14 view .LVU39
 148              		.loc 1 48 15 is_stmt 0 view .LVU40
 149 0094 4FF40061 		mov	r1, #2048
 150 0098 2148     		ldr	r0, .L9
 151 009a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 152              	.LVL10:
 153              		.loc 1 48 14 view .LVU41
 154 009e 0128     		cmp	r0, #1
 155 00a0 1DD1     		bne	.L5
  49:Src/core.c    ****             HAL_Delay(100);
 156              		.loc 1 49 13 is_stmt 1 view .LVU42
 157 00a2 6420     		movs	r0, #100
 158 00a4 FFF7FEFF 		bl	HAL_Delay
 159              	.LVL11:
 160 00a8 F4E7     		b	.L3
 161              	.L2:
  50:Src/core.c    ****         }
  51:Src/core.c    ****     }
  52:Src/core.c    ****     else {
  53:Src/core.c    ****         __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, servo2_up);
 162              		.loc 1 53 9 view .LVU43
 163 00aa 244B     		ldr	r3, .L9+28
 164 00ac 1B68     		ldr	r3, [r3]
 165 00ae 274A     		ldr	r2, .L9+44
 166 00b0 1268     		ldr	r2, [r2]
 167 00b2 5A63     		str	r2, [r3, #52]
  54:Src/core.c    ****         __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_1, servo1_up);
 168              		.loc 1 54 9 view .LVU44
 169 00b4 204B     		ldr	r3, .L9+24
 170 00b6 1B68     		ldr	r3, [r3]
 171 00b8 254A     		ldr	r2, .L9+48
 172 00ba 1268     		ldr	r2, [r2]
 173 00bc 5A63     		str	r2, [r3, #52]
  55:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_RESET);
 174              		.loc 1 55 9 view .LVU45
ARM GAS  /tmp/ccWcQ1w7.s 			page 5


 175 00be 0022     		movs	r2, #0
 176 00c0 4FF40051 		mov	r1, #8192
 177 00c4 2048     		ldr	r0, .L9+40
 178 00c6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 179              	.LVL12:
  56:Src/core.c    **** 
  57:Src/core.c    ****         while(HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET) {
 180              		.loc 1 57 9 view .LVU46
 181              	.L6:
 182              		.loc 1 57 14 view .LVU47
 183              		.loc 1 57 15 is_stmt 0 view .LVU48
 184 00ca 4FF40061 		mov	r1, #2048
 185 00ce 1448     		ldr	r0, .L9
 186 00d0 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 187              	.LVL13:
 188              		.loc 1 57 14 view .LVU49
 189 00d4 18B9     		cbnz	r0, .L5
  58:Src/core.c    ****             HAL_Delay(100);
 190              		.loc 1 58 13 is_stmt 1 view .LVU50
 191 00d6 6420     		movs	r0, #100
 192 00d8 FFF7FEFF 		bl	HAL_Delay
 193              	.LVL14:
 194 00dc F5E7     		b	.L6
 195              	.L5:
  59:Src/core.c    ****         }
  60:Src/core.c    ****     }
  61:Src/core.c    **** 
  62:Src/core.c    ****     HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, state.mode == ONOFF_MODE ? GPIO_PIN_RESET : GPIO_PI
 196              		.loc 1 62 5 view .LVU51
 197              		.loc 1 62 54 is_stmt 0 view .LVU52
 198 00de 114D     		ldr	r5, .L9+4
 199 00e0 2A79     		ldrb	r2, [r5, #4]	@ zero_extendqisi2
 200              		.loc 1 62 5 view .LVU53
 201 00e2 1C4C     		ldr	r4, .L9+52
 202 00e4 003A     		subs	r2, r2, #0
 203 00e6 18BF     		it	ne
 204 00e8 0122     		movne	r2, #1
 205 00ea 0821     		movs	r1, #8
 206 00ec 2046     		mov	r0, r4
 207 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 208              	.LVL15:
  63:Src/core.c    ****     HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, state.mode == TIME_MODE  ? GPIO_PIN_RESET : GPIO_PI
 209              		.loc 1 63 5 is_stmt 1 view .LVU54
 210              		.loc 1 63 54 is_stmt 0 view .LVU55
 211 00f2 2A79     		ldrb	r2, [r5, #4]	@ zero_extendqisi2
 212              		.loc 1 63 5 view .LVU56
 213 00f4 013A     		subs	r2, r2, #1
 214 00f6 18BF     		it	ne
 215 00f8 0122     		movne	r2, #1
 216 00fa 1021     		movs	r1, #16
 217 00fc 2046     		mov	r0, r4
 218 00fe FFF7FEFF 		bl	HAL_GPIO_WritePin
 219              	.LVL16:
  64:Src/core.c    ****     HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, state.mode == TEMP_MODE  ? GPIO_PIN_RESET : GPIO_PI
 220              		.loc 1 64 5 is_stmt 1 view .LVU57
 221              		.loc 1 64 54 is_stmt 0 view .LVU58
 222 0102 2A79     		ldrb	r2, [r5, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccWcQ1w7.s 			page 6


 223              		.loc 1 64 5 view .LVU59
 224 0104 023A     		subs	r2, r2, #2
 225 0106 18BF     		it	ne
 226 0108 0122     		movne	r2, #1
 227 010a 2021     		movs	r1, #32
 228 010c 2046     		mov	r0, r4
 229 010e FFF7FEFF 		bl	HAL_GPIO_WritePin
 230              	.LVL17:
  65:Src/core.c    **** 
  66:Src/core.c    ****     HAL_Delay(500);
 231              		.loc 1 66 5 is_stmt 1 view .LVU60
 232 0112 4FF4FA70 		mov	r0, #500
 233 0116 FFF7FEFF 		bl	HAL_Delay
 234              	.LVL18:
  67:Src/core.c    **** 
  68:Src/core.c    ****     return 1;    
 235              		.loc 1 68 5 view .LVU61
  69:Src/core.c    **** }
 236              		.loc 1 69 1 is_stmt 0 view .LVU62
 237 011a 0120     		movs	r0, #1
 238 011c 70BD     		pop	{r4, r5, r6, pc}
 239              	.L10:
 240 011e 00BF     		.align	2
 241              	.L9:
 242 0120 000C0140 		.word	1073810432
 243 0124 00000000 		.word	state
 244 0128 0000D041 		.word	1104150528
 245 012c 00000000 		.word	hadc1
 246 0130 00000000 		.word	aRxBuffer
 247 0134 00000000 		.word	huart1
 248 0138 00000000 		.word	htim1
 249 013c 00000000 		.word	htim2
 250 0140 00000000 		.word	.LANCHOR0
 251 0144 00000000 		.word	.LANCHOR1
 252 0148 00100140 		.word	1073811456
 253 014c 00000000 		.word	.LANCHOR2
 254 0150 00000000 		.word	.LANCHOR3
 255 0154 00080140 		.word	1073809408
 256              		.cfi_endproc
 257              	.LFE68:
 259              		.section	.text.string2int,"ax",%progbits
 260              		.align	1
 261              		.global	string2int
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu softvfp
 267              	string2int:
 268              	.LVL19:
 269              	.LFB69:
  70:Src/core.c    **** 
  71:Src/core.c    **** int string2int(char* array, int start, int end) {
 270              		.loc 1 71 49 is_stmt 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              		@ link register save eliminated.
ARM GAS  /tmp/ccWcQ1w7.s 			page 7


  72:Src/core.c    **** 	if(start > end) return 0;
 275              		.loc 1 72 2 view .LVU64
 276              		.loc 1 72 4 is_stmt 0 view .LVU65
 277 0000 9142     		cmp	r1, r2
 278 0002 12DC     		bgt	.L17
  71:Src/core.c    **** 	if(start > end) return 0;
 279              		.loc 1 71 49 view .LVU66
 280 0004 70B4     		push	{r4, r5, r6}
 281              	.LCFI1:
 282              		.cfi_def_cfa_offset 12
 283              		.cfi_offset 4, -12
 284              		.cfi_offset 5, -8
 285              		.cfi_offset 6, -4
 286 0006 0646     		mov	r6, r0
 287              	.LBB2:
  73:Src/core.c    ****     int result = 0;
  74:Src/core.c    ****     for(int i = end; i >= start; i--) {
 288              		.loc 1 74 13 view .LVU67
 289 0008 1546     		mov	r5, r2
 290              	.LBE2:
  73:Src/core.c    ****     int result = 0;
 291              		.loc 1 73 9 view .LVU68
 292 000a 0020     		movs	r0, #0
 293              	.LVL20:
  73:Src/core.c    ****     int result = 0;
 294              		.loc 1 73 9 view .LVU69
 295 000c 07E0     		b	.L13
 296              	.LVL21:
 297              	.L15:
 298              	.LBB7:
 299              	.LBB3:
 300              	.LBB4:
  75:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
  76:Src/core.c    ****         for(int j = end - i; j > 0; j--) num *= 10;
 301              		.loc 1 76 42 is_stmt 1 discriminator 3 view .LVU70
 302              		.loc 1 76 46 is_stmt 0 discriminator 3 view .LVU71
 303 000e 03EB8303 		add	r3, r3, r3, lsl #2
 304              	.LVL22:
 305              		.loc 1 76 46 discriminator 3 view .LVU72
 306 0012 5B00     		lsls	r3, r3, #1
 307              	.LVL23:
 308              		.loc 1 76 37 is_stmt 1 discriminator 3 view .LVU73
 309              		.loc 1 76 38 is_stmt 0 discriminator 3 view .LVU74
 310 0014 013C     		subs	r4, r4, #1
 311              	.LVL24:
 312              	.L14:
 313              		.loc 1 76 30 is_stmt 1 discriminator 1 view .LVU75
 314              		.loc 1 76 9 is_stmt 0 discriminator 1 view .LVU76
 315 0016 002C     		cmp	r4, #0
 316 0018 F9DC     		bgt	.L15
 317              		.loc 1 76 9 discriminator 1 view .LVU77
 318              	.LBE4:
  77:Src/core.c    **** 		// printf("%d\n", num);
  78:Src/core.c    ****         result += num;
 319              		.loc 1 78 9 is_stmt 1 discriminator 2 view .LVU78
 320              		.loc 1 78 16 is_stmt 0 discriminator 2 view .LVU79
 321 001a 1844     		add	r0, r0, r3
ARM GAS  /tmp/ccWcQ1w7.s 			page 8


 322              	.LVL25:
 323              		.loc 1 78 16 discriminator 2 view .LVU80
 324              	.LBE3:
  74:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 325              		.loc 1 74 34 is_stmt 1 discriminator 2 view .LVU81
  74:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 326              		.loc 1 74 35 is_stmt 0 discriminator 2 view .LVU82
 327 001c 013D     		subs	r5, r5, #1
 328              	.LVL26:
 329              	.L13:
  74:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 330              		.loc 1 74 22 is_stmt 1 discriminator 1 view .LVU83
  74:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 331              		.loc 1 74 5 is_stmt 0 discriminator 1 view .LVU84
 332 001e 8D42     		cmp	r5, r1
 333 0020 05DB     		blt	.L22
 334              	.LBB6:
  75:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 335              		.loc 1 75 9 is_stmt 1 view .LVU85
  75:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 336              		.loc 1 75 30 is_stmt 0 view .LVU86
 337 0022 735D     		ldrb	r3, [r6, r5]	@ zero_extendqisi2
  75:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 338              		.loc 1 75 13 view .LVU87
 339 0024 303B     		subs	r3, r3, #48
 340              	.LVL27:
  76:Src/core.c    **** 		// printf("%d\n", num);
 341              		.loc 1 76 9 is_stmt 1 view .LVU88
 342              	.LBB5:
  76:Src/core.c    **** 		// printf("%d\n", num);
 343              		.loc 1 76 13 view .LVU89
  76:Src/core.c    **** 		// printf("%d\n", num);
 344              		.loc 1 76 17 is_stmt 0 view .LVU90
 345 0026 541B     		subs	r4, r2, r5
 346              	.LVL28:
  76:Src/core.c    **** 		// printf("%d\n", num);
 347              		.loc 1 76 9 view .LVU91
 348 0028 F5E7     		b	.L14
 349              	.LVL29:
 350              	.L17:
 351              	.LCFI2:
 352              		.cfi_def_cfa_offset 0
 353              		.cfi_restore 4
 354              		.cfi_restore 5
 355              		.cfi_restore 6
  76:Src/core.c    **** 		// printf("%d\n", num);
 356              		.loc 1 76 9 view .LVU92
 357              	.LBE5:
 358              	.LBE6:
 359              	.LBE7:
  72:Src/core.c    ****     int result = 0;
 360              		.loc 1 72 25 view .LVU93
 361 002a 0020     		movs	r0, #0
 362              	.LVL30:
  79:Src/core.c    ****     }
  80:Src/core.c    ****     return result;
  81:Src/core.c    **** }
ARM GAS  /tmp/ccWcQ1w7.s 			page 9


 363              		.loc 1 81 1 view .LVU94
 364 002c 7047     		bx	lr
 365              	.LVL31:
 366              	.L22:
 367              	.LCFI3:
 368              		.cfi_def_cfa_offset 12
 369              		.cfi_offset 4, -12
 370              		.cfi_offset 5, -8
 371              		.cfi_offset 6, -4
 372              		.loc 1 81 1 view .LVU95
 373 002e 70BC     		pop	{r4, r5, r6}
 374              	.LCFI4:
 375              		.cfi_restore 6
 376              		.cfi_restore 5
 377              		.cfi_restore 4
 378              		.cfi_def_cfa_offset 0
 379              	.LVL32:
 380              		.loc 1 81 1 view .LVU96
 381 0030 7047     		bx	lr
 382              		.cfi_endproc
 383              	.LFE69:
 385              		.section	.rodata.bluetooth_decode.str1.4,"aMS",%progbits,1
 386              		.align	2
 387              	.LC0:
 388 0000 4368616E 		.ascii	"Changed the time to %d mins ON and %d mins OFF\012\000"
 388      67656420 
 388      74686520 
 388      74696D65 
 388      20746F20 
 389              		.global	__aeabi_i2f
 390              		.global	__aeabi_f2d
 391              		.align	2
 392              	.LC1:
 393 0030 4368616E 		.ascii	"Changed the target temp to %3.1f\012\000"
 393      67656420 
 393      74686520 
 393      74617267 
 393      65742074 
 394              		.section	.text.bluetooth_decode,"ax",%progbits
 395              		.align	1
 396              		.global	bluetooth_decode
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 400              		.fpu softvfp
 402              	bluetooth_decode:
 403              	.LVL33:
 404              	.LFB70:
  82:Src/core.c    **** 
  83:Src/core.c    **** void bluetooth_decode(char* msg) {
 405              		.loc 1 83 34 is_stmt 1 view -0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409              		.loc 1 83 34 is_stmt 0 view .LVU98
 410 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 411              	.LCFI5:
ARM GAS  /tmp/ccWcQ1w7.s 			page 10


 412              		.cfi_def_cfa_offset 24
 413              		.cfi_offset 3, -24
 414              		.cfi_offset 4, -20
 415              		.cfi_offset 5, -16
 416              		.cfi_offset 6, -12
 417              		.cfi_offset 7, -8
 418              		.cfi_offset 14, -4
  84:Src/core.c    ****     int startInd = -1, endInd = -1;
 419              		.loc 1 84 5 is_stmt 1 view .LVU99
 420              	.LVL34:
  85:Src/core.c    ****     int count = 0;
 421              		.loc 1 85 5 view .LVU100
  86:Src/core.c    ****     while((startInd == -1 || endInd == -1) && count < Uart1_Rx_Cnt) {
 422              		.loc 1 86 5 view .LVU101
  85:Src/core.c    ****     int count = 0;
 423              		.loc 1 85 9 is_stmt 0 view .LVU102
 424 0002 0023     		movs	r3, #0
  84:Src/core.c    ****     int startInd = -1, endInd = -1;
 425              		.loc 1 84 24 view .LVU103
 426 0004 4FF0FF34 		mov	r4, #-1
  84:Src/core.c    ****     int startInd = -1, endInd = -1;
 427              		.loc 1 84 9 view .LVU104
 428 0008 2146     		mov	r1, r4
 429              		.loc 1 86 10 view .LVU105
 430 000a 04E0     		b	.L24
 431              	.LVL35:
 432              	.L51:
  87:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 433              		.loc 1 87 29 is_stmt 1 discriminator 1 view .LVU106
 434              		.loc 1 87 40 is_stmt 0 discriminator 1 view .LVU107
 435 000c 544A     		ldr	r2, .L57
 436 000e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 437              		.loc 1 87 31 discriminator 1 view .LVU108
 438 0010 262A     		cmp	r2, #38
 439 0012 13D0     		beq	.L50
 440              	.LVL36:
 441              	.L26:
  88:Src/core.c    ****         else {if(RxBuffer[count] == '.') endInd = count;}
  89:Src/core.c    ****         count++;
 442              		.loc 1 89 9 is_stmt 1 view .LVU109
 443              		.loc 1 89 14 is_stmt 0 view .LVU110
 444 0014 0133     		adds	r3, r3, #1
 445              	.LVL37:
 446              	.L24:
  86:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 447              		.loc 1 86 10 is_stmt 1 view .LVU111
 448 0016 B1F1FF3F 		cmp	r1, #-1
 449 001a 02D0     		beq	.L27
  86:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 450              		.loc 1 86 27 is_stmt 0 discriminator 2 view .LVU112
 451 001c B4F1FF3F 		cmp	r4, #-1
 452 0020 0ED1     		bne	.L28
 453              	.L27:
  86:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 454              		.loc 1 86 53 discriminator 3 view .LVU113
 455 0022 504A     		ldr	r2, .L57+4
 456 0024 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  /tmp/ccWcQ1w7.s 			page 11


  86:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 457              		.loc 1 86 44 discriminator 3 view .LVU114
 458 0026 9A42     		cmp	r2, r3
 459 0028 0ADD     		ble	.L28
  87:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 460              		.loc 1 87 9 is_stmt 1 view .LVU115
  87:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 461              		.loc 1 87 11 is_stmt 0 view .LVU116
 462 002a B1F1FF3F 		cmp	r1, #-1
 463 002e EDD0     		beq	.L51
  88:Src/core.c    ****         else {if(RxBuffer[count] == '.') endInd = count;}
 464              		.loc 1 88 15 is_stmt 1 view .LVU117
  88:Src/core.c    ****         else {if(RxBuffer[count] == '.') endInd = count;}
 465              		.loc 1 88 26 is_stmt 0 view .LVU118
 466 0030 4B4A     		ldr	r2, .L57
 467 0032 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
  88:Src/core.c    ****         else {if(RxBuffer[count] == '.') endInd = count;}
 468              		.loc 1 88 17 view .LVU119
 469 0034 2E2A     		cmp	r2, #46
 470 0036 EDD1     		bne	.L26
  88:Src/core.c    ****         else {if(RxBuffer[count] == '.') endInd = count;}
 471              		.loc 1 88 49 view .LVU120
 472 0038 1C46     		mov	r4, r3
 473              	.LVL38:
  88:Src/core.c    ****         else {if(RxBuffer[count] == '.') endInd = count;}
 474              		.loc 1 88 49 view .LVU121
 475 003a EBE7     		b	.L26
 476              	.LVL39:
 477              	.L50:
  87:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 478              		.loc 1 87 65 view .LVU122
 479 003c 1946     		mov	r1, r3
 480              	.LVL40:
  87:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 481              		.loc 1 87 65 view .LVU123
 482 003e E9E7     		b	.L26
 483              	.LVL41:
 484              	.L28:
  90:Src/core.c    ****     }
  91:Src/core.c    **** 
  92:Src/core.c    ****     if(startInd == -1 || endInd == -1) return ;
 485              		.loc 1 92 5 is_stmt 1 view .LVU124
 486              		.loc 1 92 7 is_stmt 0 view .LVU125
 487 0040 B1F1FF3F 		cmp	r1, #-1
 488 0044 00F08A80 		beq	.L23
 489              		.loc 1 92 23 discriminator 2 view .LVU126
 490 0048 B4F1FF3F 		cmp	r4, #-1
 491 004c 00F08680 		beq	.L23
 492              	.LBB8:
  93:Src/core.c    ****     else {
  94:Src/core.c    ****         int middleInd = 0;
 493              		.loc 1 94 9 is_stmt 1 view .LVU127
 494              	.LVL42:
  95:Src/core.c    ****         int input_temp = 0;
 495              		.loc 1 95 9 view .LVU128
  96:Src/core.c    ****         switch(RxBuffer[startInd+1]) {
 496              		.loc 1 96 9 view .LVU129
ARM GAS  /tmp/ccWcQ1w7.s 			page 12


 497              		.loc 1 96 33 is_stmt 0 view .LVU130
 498 0050 4B1C     		adds	r3, r1, #1
 499              	.LVL43:
 500              		.loc 1 96 24 view .LVU131
 501 0052 434A     		ldr	r2, .L57
 502 0054 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 503 0056 303B     		subs	r3, r3, #48
 504 0058 032B     		cmp	r3, #3
 505 005a 77D8     		bhi	.L31
 506 005c DFE803F0 		tbb	[pc, r3]
 507              	.L33:
 508 0060 02       		.byte	(.L36-.L33)/2
 509 0061 13       		.byte	(.L35-.L33)/2
 510 0062 43       		.byte	(.L47-.L33)/2
 511 0063 60       		.byte	(.L32-.L33)/2
 512              		.p2align 1
 513              	.L36:
  97:Src/core.c    ****             case '0':
  98:Src/core.c    ****             if(RxBuffer[endInd - 1] == '2') {
 514              		.loc 1 98 13 is_stmt 1 view .LVU132
 515              		.loc 1 98 32 is_stmt 0 view .LVU133
 516 0064 013C     		subs	r4, r4, #1
 517              	.LVL44:
 518              		.loc 1 98 24 view .LVU134
 519 0066 3E4B     		ldr	r3, .L57
 520 0068 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 521              		.loc 1 98 15 view .LVU135
 522 006a 322B     		cmp	r3, #50
 523 006c 6ED1     		bne	.L31
  99:Src/core.c    ****                 if(state.sw == SYS_ON) state.sw = SYS_OFF;
 524              		.loc 1 99 17 is_stmt 1 view .LVU136
 525              		.loc 1 99 25 is_stmt 0 view .LVU137
 526 006e 3E4B     		ldr	r3, .L57+8
 527 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 528              		.loc 1 99 19 view .LVU138
 529 0072 012B     		cmp	r3, #1
 530 0074 03D0     		beq	.L52
 100:Src/core.c    ****                 else state.sw = SYS_ON;
 531              		.loc 1 100 22 is_stmt 1 view .LVU139
 532              		.loc 1 100 31 is_stmt 0 view .LVU140
 533 0076 3C4B     		ldr	r3, .L57+8
 534 0078 0122     		movs	r2, #1
 535 007a 1A70     		strb	r2, [r3]
 536 007c 66E0     		b	.L31
 537              	.L52:
  99:Src/core.c    ****                 if(state.sw == SYS_ON) state.sw = SYS_OFF;
 538              		.loc 1 99 40 is_stmt 1 discriminator 1 view .LVU141
  99:Src/core.c    ****                 if(state.sw == SYS_ON) state.sw = SYS_OFF;
 539              		.loc 1 99 49 is_stmt 0 discriminator 1 view .LVU142
 540 007e 3A4B     		ldr	r3, .L57+8
 541 0080 0022     		movs	r2, #0
 542 0082 1A70     		strb	r2, [r3]
 543 0084 62E0     		b	.L31
 544              	.LVL45:
 545              	.L35:
 101:Src/core.c    ****                 // strcpy(msg, "Change the system to ");
 102:Src/core.c    ****                 // strcat(msg, state.sw == SYS_ON ? "ON\n" : "OFF\n");
ARM GAS  /tmp/ccWcQ1w7.s 			page 13


 103:Src/core.c    ****             }
 104:Src/core.c    ****             break;
 105:Src/core.c    ****             case '1': 
 106:Src/core.c    ****             if(RxBuffer[endInd - 2] == ',') {
 546              		.loc 1 106 13 is_stmt 1 view .LVU143
 547              		.loc 1 106 32 is_stmt 0 view .LVU144
 548 0086 A31E     		subs	r3, r4, #2
 549              		.loc 1 106 24 view .LVU145
 550 0088 354A     		ldr	r2, .L57
 551 008a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 552              		.loc 1 106 15 view .LVU146
 553 008c 2C2B     		cmp	r3, #44
 554 008e 5DD1     		bne	.L31
 107:Src/core.c    ****                 if(RxBuffer[startInd + 3] == '0') state.mode = ONOFF_MODE;
 555              		.loc 1 107 17 is_stmt 1 view .LVU147
 556              		.loc 1 107 38 is_stmt 0 view .LVU148
 557 0090 0331     		adds	r1, r1, #3
 558              	.LVL46:
 559              		.loc 1 107 28 view .LVU149
 560 0092 535C     		ldrb	r3, [r2, r1]	@ zero_extendqisi2
 561              		.loc 1 107 19 view .LVU150
 562 0094 302B     		cmp	r3, #48
 563 0096 07D0     		beq	.L53
 108:Src/core.c    ****                 else if(RxBuffer[startInd + 3] == '1') state.mode = TIME_MODE;
 564              		.loc 1 108 22 is_stmt 1 view .LVU151
 565              		.loc 1 108 24 is_stmt 0 view .LVU152
 566 0098 312B     		cmp	r3, #49
 567 009a 13D0     		beq	.L54
 109:Src/core.c    ****                 else if(RxBuffer[startInd + 3] == '2') state.mode = TEMP_MODE;
 568              		.loc 1 109 22 is_stmt 1 view .LVU153
 569              		.loc 1 109 24 is_stmt 0 view .LVU154
 570 009c 322B     		cmp	r3, #50
 571 009e 06D1     		bne	.L39
 572              		.loc 1 109 56 is_stmt 1 discriminator 1 view .LVU155
 573              		.loc 1 109 67 is_stmt 0 discriminator 1 view .LVU156
 574 00a0 314B     		ldr	r3, .L57+8
 575 00a2 0222     		movs	r2, #2
 576 00a4 1A71     		strb	r2, [r3, #4]
 577 00a6 02E0     		b	.L39
 578              	.L53:
 107:Src/core.c    ****                 if(RxBuffer[startInd + 3] == '0') state.mode = ONOFF_MODE;
 579              		.loc 1 107 51 is_stmt 1 discriminator 1 view .LVU157
 107:Src/core.c    ****                 if(RxBuffer[startInd + 3] == '0') state.mode = ONOFF_MODE;
 580              		.loc 1 107 62 is_stmt 0 discriminator 1 view .LVU158
 581 00a8 2F4B     		ldr	r3, .L57+8
 582 00aa 0022     		movs	r2, #0
 583 00ac 1A71     		strb	r2, [r3, #4]
 584              	.L39:
 110:Src/core.c    ****                 if(RxBuffer[endInd - 1] == '0') state.lightOff = 0;
 585              		.loc 1 110 17 is_stmt 1 view .LVU159
 586              		.loc 1 110 36 is_stmt 0 view .LVU160
 587 00ae 013C     		subs	r4, r4, #1
 588              	.LVL47:
 589              		.loc 1 110 28 view .LVU161
 590 00b0 2B4B     		ldr	r3, .L57
 591 00b2 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 592              		.loc 1 110 19 view .LVU162
ARM GAS  /tmp/ccWcQ1w7.s 			page 14


 593 00b4 302B     		cmp	r3, #48
 594 00b6 09D0     		beq	.L55
 111:Src/core.c    ****                 else if(RxBuffer[endInd - 1] == '1') state.lightOff = 1;
 595              		.loc 1 111 22 is_stmt 1 view .LVU163
 596              		.loc 1 111 24 is_stmt 0 view .LVU164
 597 00b8 312B     		cmp	r3, #49
 598 00ba 47D1     		bne	.L31
 599              		.loc 1 111 54 is_stmt 1 discriminator 1 view .LVU165
 600              		.loc 1 111 69 is_stmt 0 discriminator 1 view .LVU166
 601 00bc 2A4B     		ldr	r3, .L57+8
 602 00be 0122     		movs	r2, #1
 603 00c0 5A61     		str	r2, [r3, #20]
 604 00c2 43E0     		b	.L31
 605              	.LVL48:
 606              	.L54:
 108:Src/core.c    ****                 else if(RxBuffer[startInd + 3] == '2') state.mode = TEMP_MODE;
 607              		.loc 1 108 56 is_stmt 1 discriminator 1 view .LVU167
 108:Src/core.c    ****                 else if(RxBuffer[startInd + 3] == '2') state.mode = TEMP_MODE;
 608              		.loc 1 108 67 is_stmt 0 discriminator 1 view .LVU168
 609 00c4 284B     		ldr	r3, .L57+8
 610 00c6 0122     		movs	r2, #1
 611 00c8 1A71     		strb	r2, [r3, #4]
 612 00ca F0E7     		b	.L39
 613              	.LVL49:
 614              	.L55:
 110:Src/core.c    ****                 if(RxBuffer[endInd - 1] == '0') state.lightOff = 0;
 615              		.loc 1 110 49 is_stmt 1 discriminator 1 view .LVU169
 110:Src/core.c    ****                 if(RxBuffer[endInd - 1] == '0') state.lightOff = 0;
 616              		.loc 1 110 64 is_stmt 0 discriminator 1 view .LVU170
 617 00cc 264B     		ldr	r3, .L57+8
 618 00ce 0022     		movs	r2, #0
 619 00d0 5A61     		str	r2, [r3, #20]
 620 00d2 3BE0     		b	.L31
 621              	.LVL50:
 622              	.L42:
 623              	.LBB9:
 112:Src/core.c    ****             }
 113:Src/core.c    ****             break;
 114:Src/core.c    ****             case '2':
 115:Src/core.c    ****             
 116:Src/core.c    ****             for(int i = startInd; i < endInd; i++) 
 624              		.loc 1 116 47 is_stmt 1 discriminator 2 view .LVU171
 625              		.loc 1 116 48 is_stmt 0 discriminator 2 view .LVU172
 626 00d4 0133     		adds	r3, r3, #1
 627              	.LVL51:
 628              	.L34:
 629              		.loc 1 116 35 is_stmt 1 discriminator 1 view .LVU173
 630              		.loc 1 116 13 is_stmt 0 discriminator 1 view .LVU174
 631 00d6 9C42     		cmp	r4, r3
 632 00d8 08DD     		ble	.L56
 117:Src/core.c    ****                 if(RxBuffer[i] == ',')
 633              		.loc 1 117 17 is_stmt 1 view .LVU175
 634              		.loc 1 117 28 is_stmt 0 view .LVU176
 635 00da 214A     		ldr	r2, .L57
 636 00dc D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 637              		.loc 1 117 19 view .LVU177
 638 00de 2C2A     		cmp	r2, #44
ARM GAS  /tmp/ccWcQ1w7.s 			page 15


 639 00e0 F8D1     		bne	.L42
 118:Src/core.c    ****                     middleInd = i;
 640              		.loc 1 118 31 view .LVU178
 641 00e2 1D46     		mov	r5, r3
 642              	.LVL52:
 643              		.loc 1 118 31 view .LVU179
 644 00e4 F6E7     		b	.L42
 645              	.LVL53:
 646              	.L47:
 647              		.loc 1 118 31 view .LVU180
 648              	.LBE9:
  96:Src/core.c    ****             case '0':
 649              		.loc 1 96 24 view .LVU181
 650 00e6 0B46     		mov	r3, r1
 651 00e8 0025     		movs	r5, #0
 652 00ea F4E7     		b	.L34
 653              	.LVL54:
 654              	.L56:
 119:Src/core.c    ****             if(middleInd != 0) {
 655              		.loc 1 119 13 is_stmt 1 view .LVU182
 656              		.loc 1 119 15 is_stmt 0 view .LVU183
 657 00ec 75B3     		cbz	r5, .L31
 658              	.LBB10:
 120:Src/core.c    ****                 int on_time = string2int(RxBuffer, startInd + 3, middleInd - 1);
 659              		.loc 1 120 17 is_stmt 1 view .LVU184
 660              		.loc 1 120 31 is_stmt 0 view .LVU185
 661 00ee 1C4F     		ldr	r7, .L57
 662 00f0 6A1E     		subs	r2, r5, #1
 663 00f2 0331     		adds	r1, r1, #3
 664              	.LVL55:
 665              		.loc 1 120 31 view .LVU186
 666 00f4 3846     		mov	r0, r7
 667              	.LVL56:
 668              		.loc 1 120 31 view .LVU187
 669 00f6 FFF7FEFF 		bl	string2int
 670              	.LVL57:
 671              		.loc 1 120 31 view .LVU188
 672 00fa 0646     		mov	r6, r0
 673              	.LVL58:
 121:Src/core.c    ****                 int off_time = string2int(RxBuffer, middleInd + 1, endInd - 1);
 674              		.loc 1 121 17 is_stmt 1 view .LVU189
 675              		.loc 1 121 32 is_stmt 0 view .LVU190
 676 00fc 621E     		subs	r2, r4, #1
 677 00fe 691C     		adds	r1, r5, #1
 678 0100 3846     		mov	r0, r7
 679              	.LVL59:
 680              		.loc 1 121 32 view .LVU191
 681 0102 FFF7FEFF 		bl	string2int
 682              	.LVL60:
 122:Src/core.c    ****                 if(on_time >= 15 && off_time >= 15) {
 683              		.loc 1 122 17 is_stmt 1 view .LVU192
 684              		.loc 1 122 19 is_stmt 0 view .LVU193
 685 0106 0E2E     		cmp	r6, #14
 686 0108 20DD     		ble	.L31
 687              		.loc 1 122 34 discriminator 1 view .LVU194
 688 010a 0E28     		cmp	r0, #14
 689 010c 1EDD     		ble	.L31
ARM GAS  /tmp/ccWcQ1w7.s 			page 16


 123:Src/core.c    ****                     state.tarTime[0] = on_time;
 690              		.loc 1 123 21 is_stmt 1 view .LVU195
 691              		.loc 1 123 38 is_stmt 0 view .LVU196
 692 010e 164B     		ldr	r3, .L57+8
 693 0110 DE60     		str	r6, [r3, #12]
 124:Src/core.c    ****                     state.tarTime[1] = off_time;
 694              		.loc 1 124 21 is_stmt 1 view .LVU197
 695              		.loc 1 124 38 is_stmt 0 view .LVU198
 696 0112 1861     		str	r0, [r3, #16]
 125:Src/core.c    ****                     printf("Changed the time to %d mins ON and %d mins OFF\n", on_time, off_time);
 697              		.loc 1 125 21 is_stmt 1 view .LVU199
 698 0114 0246     		mov	r2, r0
 699 0116 3146     		mov	r1, r6
 700 0118 1448     		ldr	r0, .L57+12
 701              	.LVL61:
 702              		.loc 1 125 21 is_stmt 0 view .LVU200
 703 011a FFF7FEFF 		bl	printf
 704              	.LVL62:
 705              		.loc 1 125 21 view .LVU201
 706 011e 15E0     		b	.L31
 707              	.LVL63:
 708              	.L32:
 709              		.loc 1 125 21 view .LVU202
 710              	.LBE10:
 126:Src/core.c    ****                 }
 127:Src/core.c    ****             }
 128:Src/core.c    ****             break;
 129:Src/core.c    ****             case '3':
 130:Src/core.c    ****             input_temp = string2int(RxBuffer, startInd + 3, endInd - 1);
 711              		.loc 1 130 13 is_stmt 1 view .LVU203
 712              		.loc 1 130 26 is_stmt 0 view .LVU204
 713 0120 621E     		subs	r2, r4, #1
 714 0122 0331     		adds	r1, r1, #3
 715              	.LVL64:
 716              		.loc 1 130 26 view .LVU205
 717 0124 0E48     		ldr	r0, .L57
 718              	.LVL65:
 719              		.loc 1 130 26 view .LVU206
 720 0126 FFF7FEFF 		bl	string2int
 721              	.LVL66:
 131:Src/core.c    ****             if(input_temp <= 30 && input_temp >= 15) state.tarTemp = input_temp;
 722              		.loc 1 131 13 is_stmt 1 view .LVU207
 723              		.loc 1 131 33 is_stmt 0 view .LVU208
 724 012a A0F10F03 		sub	r3, r0, #15
 725              		.loc 1 131 15 view .LVU209
 726 012e 0F2B     		cmp	r3, #15
 727 0130 03D8     		bhi	.L44
 728              		.loc 1 131 54 is_stmt 1 discriminator 1 view .LVU210
 729              		.loc 1 131 68 is_stmt 0 discriminator 1 view .LVU211
 730 0132 FFF7FEFF 		bl	__aeabi_i2f
 731              	.LVL67:
 732              		.loc 1 131 68 discriminator 1 view .LVU212
 733 0136 0C4B     		ldr	r3, .L57+8
 734 0138 9860     		str	r0, [r3, #8]	@ float
 735              	.L44:
 132:Src/core.c    ****             printf("Changed the target temp to %3.1f\n", state.tarTemp);
 736              		.loc 1 132 13 is_stmt 1 view .LVU213
ARM GAS  /tmp/ccWcQ1w7.s 			page 17


 737 013a 0B4B     		ldr	r3, .L57+8
 738 013c 9868     		ldr	r0, [r3, #8]	@ float
 739 013e FFF7FEFF 		bl	__aeabi_f2d
 740              	.LVL68:
 741 0142 0246     		mov	r2, r0
 742 0144 0B46     		mov	r3, r1
 743 0146 0A48     		ldr	r0, .L57+16
 744 0148 FFF7FEFF 		bl	printf
 745              	.LVL69:
 133:Src/core.c    ****             break;
 746              		.loc 1 133 13 view .LVU214
 747              	.L31:
 134:Src/core.c    ****         }
 135:Src/core.c    ****         Uart1_Rx_Cnt = 0;
 748              		.loc 1 135 9 view .LVU215
 749              		.loc 1 135 22 is_stmt 0 view .LVU216
 750 014c 0021     		movs	r1, #0
 751 014e 054B     		ldr	r3, .L57+4
 752 0150 1970     		strb	r1, [r3]
 136:Src/core.c    ****         memset(RxBuffer, 0x00, sizeof(RxBuffer));
 753              		.loc 1 136 9 is_stmt 1 view .LVU217
 754 0152 4FF40072 		mov	r2, #512
 755 0156 0248     		ldr	r0, .L57
 756 0158 FFF7FEFF 		bl	memset
 757              	.LVL70:
 758              	.L23:
 759              		.loc 1 136 9 is_stmt 0 view .LVU218
 760              	.LBE8:
 137:Src/core.c    ****     }
 138:Src/core.c    **** }
 761              		.loc 1 138 1 view .LVU219
 762 015c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 763              	.L58:
 764 015e 00BF     		.align	2
 765              	.L57:
 766 0160 00000000 		.word	RxBuffer
 767 0164 00000000 		.word	.LANCHOR4
 768 0168 00000000 		.word	state
 769 016c 00000000 		.word	.LC0
 770 0170 30000000 		.word	.LC1
 771              		.cfi_endproc
 772              	.LFE70:
 774              		.section	.text.changeLight,"ax",%progbits
 775              		.align	1
 776              		.global	changeLight
 777              		.syntax unified
 778              		.thumb
 779              		.thumb_func
 780              		.fpu softvfp
 782              	changeLight:
 783              	.LVL71:
 784              	.LFB71:
 139:Src/core.c    **** 
 140:Src/core.c    **** void changeLight(enum Mode mode, int lightOff) {
 785              		.loc 1 140 48 is_stmt 1 view -0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccWcQ1w7.s 			page 18


 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789              		.loc 1 140 48 is_stmt 0 view .LVU221
 790 0000 70B5     		push	{r4, r5, r6, lr}
 791              	.LCFI6:
 792              		.cfi_def_cfa_offset 16
 793              		.cfi_offset 4, -16
 794              		.cfi_offset 5, -12
 795              		.cfi_offset 6, -8
 796              		.cfi_offset 14, -4
 797 0002 0646     		mov	r6, r0
 798 0004 0C46     		mov	r4, r1
 141:Src/core.c    ****     HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_SET);
 799              		.loc 1 141 5 is_stmt 1 view .LVU222
 800 0006 134D     		ldr	r5, .L66
 801 0008 0122     		movs	r2, #1
 802 000a 0821     		movs	r1, #8
 803              	.LVL72:
 804              		.loc 1 141 5 is_stmt 0 view .LVU223
 805 000c 2846     		mov	r0, r5
 806              	.LVL73:
 807              		.loc 1 141 5 view .LVU224
 808 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 809              	.LVL74:
 142:Src/core.c    ****     HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_SET);
 810              		.loc 1 142 5 is_stmt 1 view .LVU225
 811 0012 0122     		movs	r2, #1
 812 0014 1021     		movs	r1, #16
 813 0016 2846     		mov	r0, r5
 814 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 815              	.LVL75:
 143:Src/core.c    ****     HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_SET);
 816              		.loc 1 143 5 view .LVU226
 817 001c 0122     		movs	r2, #1
 818 001e 2021     		movs	r1, #32
 819 0020 2846     		mov	r0, r5
 820 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 821              	.LVL76:
 144:Src/core.c    ****     if(!lightOff) 
 822              		.loc 1 144 5 view .LVU227
 823              		.loc 1 144 7 is_stmt 0 view .LVU228
 824 0026 3CB9     		cbnz	r4, .L59
 145:Src/core.c    ****         if(mode == ONOFF_MODE)
 825              		.loc 1 145 9 is_stmt 1 view .LVU229
 826              		.loc 1 145 11 is_stmt 0 view .LVU230
 827 0028 3EB1     		cbz	r6, .L64
 146:Src/core.c    ****             HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_RESET);
 147:Src/core.c    ****         else if(mode == TIME_MODE)
 828              		.loc 1 147 14 is_stmt 1 view .LVU231
 829              		.loc 1 147 16 is_stmt 0 view .LVU232
 830 002a 012E     		cmp	r6, #1
 831 002c 0BD0     		beq	.L65
 148:Src/core.c    ****             HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_RESET);
 149:Src/core.c    ****         else
 150:Src/core.c    ****             HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
 832              		.loc 1 150 13 is_stmt 1 view .LVU233
 833 002e 0022     		movs	r2, #0
 834 0030 2021     		movs	r1, #32
ARM GAS  /tmp/ccWcQ1w7.s 			page 19


 835 0032 0848     		ldr	r0, .L66
 836 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 837              	.LVL77:
 838              	.L59:
 151:Src/core.c    **** }
 839              		.loc 1 151 1 is_stmt 0 view .LVU234
 840 0038 70BD     		pop	{r4, r5, r6, pc}
 841              	.LVL78:
 842              	.L64:
 146:Src/core.c    ****             HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_RESET);
 843              		.loc 1 146 13 is_stmt 1 view .LVU235
 844 003a 0022     		movs	r2, #0
 845 003c 0821     		movs	r1, #8
 846 003e 2846     		mov	r0, r5
 847 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 848              	.LVL79:
 849 0044 F8E7     		b	.L59
 850              	.L65:
 148:Src/core.c    ****             HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_RESET);
 851              		.loc 1 148 13 view .LVU236
 852 0046 0022     		movs	r2, #0
 853 0048 1021     		movs	r1, #16
 854 004a 0248     		ldr	r0, .L66
 855 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 856              	.LVL80:
 857 0050 F2E7     		b	.L59
 858              	.L67:
 859 0052 00BF     		.align	2
 860              	.L66:
 861 0054 00080140 		.word	1073809408
 862              		.cfi_endproc
 863              	.LFE71:
 865              		.section	.rodata.send_state.str1.4,"aMS",%progbits,1
 866              		.align	2
 867              	.LC2:
 868 0000 4F46460A 		.ascii	"OFF\012\000"
 868      00
 869 0005 000000   		.align	2
 870              	.LC3:
 871 0008 4F4E0A00 		.ascii	"ON\012\000"
 872              		.align	2
 873              	.LC4:
 874 000c 54696D65 		.ascii	"Time Mode\012\000"
 874      204D6F64 
 874      650A00
 875 0017 00       		.align	2
 876              	.LC5:
 877 0018 4F4E2F4F 		.ascii	"ON/OFF Mode\012\000"
 877      4646204D 
 877      6F64650A 
 877      00
 878 0025 000000   		.align	2
 879              	.LC6:
 880 0028 54656D70 		.ascii	"Temp Mode\012\000"
 880      204D6F64 
 880      650A00
 881 0033 00       		.align	2
ARM GAS  /tmp/ccWcQ1w7.s 			page 20


 882              	.LC7:
 883 0034 636C6F73 		.ascii	"closed\000"
 883      656400
 884 003b 00       		.align	2
 885              	.LC8:
 886 003c 72756E00 		.ascii	"run\000"
 887              		.align	2
 888              	.LC9:
 889 0040 73746172 		.ascii	"start\000"
 889      7400
 890 0046 0000     		.align	2
 891              	.LC10:
 892 0048 636C6F73 		.ascii	"close\000"
 892      6500
 893 004e 0000     		.align	2
 894              	.LC11:
 895 0050 4E6F7720 		.ascii	"Now the air-con is \000"
 895      74686520 
 895      6169722D 
 895      636F6E20 
 895      69732000 
 896              		.align	2
 897              	.LC12:
 898 0064 54686520 		.ascii	"The current mode is \000"
 898      63757272 
 898      656E7420 
 898      6D6F6465 
 898      20697320 
 899 0079 000000   		.align	2
 900              	.LC13:
 901 007c 43757272 		.ascii	"Current temperature is : %3.1f\012\000"
 901      656E7420 
 901      74656D70 
 901      65726174 
 901      75726520 
 902              		.align	2
 903              	.LC14:
 904 009c 54686520 		.ascii	"The air-con has \000"
 904      6169722D 
 904      636F6E20 
 904      68617320 
 904      00
 905 00ad 000000   		.align	2
 906              	.LC15:
 907 00b0 20666F72 		.ascii	" for \000"
 907      2000
 908 00b6 0000     		.align	2
 909              	.LC16:
 910 00b8 206D696E 		.ascii	" minutes\012\000"
 910      75746573 
 910      0A00
 911 00c2 0000     		.align	2
 912              	.LC17:
 913 00c4 25732564 		.ascii	"%s%d%s\000"
 913      257300
 914 00cb 00       		.align	2
 915              	.LC18:
ARM GAS  /tmp/ccWcQ1w7.s 			page 21


 916 00cc 54686520 		.ascii	"The target temperature is %3.1f\012\000"
 916      74617267 
 916      65742074 
 916      656D7065 
 916      72617475 
 917 00ed 000000   		.align	2
 918              	.LC19:
 919 00f0 54686520 		.ascii	"The last temperature achievement is %d\012\000"
 919      6C617374 
 919      2074656D 
 919      70657261 
 919      74757265 
 920              		.align	2
 921              	.LC20:
 922 0118 54686572 		.ascii	"There are %d minutes before air-con %s\012\000"
 922      65206172 
 922      65202564 
 922      206D696E 
 922      75746573 
 923              		.align	2
 924              	.LC21:
 925 0140 4F70656E 		.ascii	"Open for %d mins and close for %d mins\012\000"
 925      20666F72 
 925      20256420 
 925      6D696E73 
 925      20616E64 
 926              		.section	.text.send_state,"ax",%progbits
 927              		.align	1
 928              		.global	send_state
 929              		.syntax unified
 930              		.thumb
 931              		.thumb_func
 932              		.fpu softvfp
 934              	send_state:
 935              	.LFB73:
 152:Src/core.c    **** 
 153:Src/core.c    **** char* msg[30];
 154:Src/core.c    **** void update_info() {
 155:Src/core.c    ****     strcpy(msg, "");
 156:Src/core.c    ****     msg[0] = '0';
 157:Src/core.c    ****     enum SystemSwitch last = state.sw;
 158:Src/core.c    ****     enum Mode lastMode = state.mode;
 159:Src/core.c    ****     state.re_sw = HAL_GPIO_ReadPin(REMOTE_SWITCH_GPIO_Port, REMOTE_SWITCH_Pin) == GPIO_PIN_RESET ? 
 160:Src/core.c    ****     if(state.re_sw != REMOTE_ON) {
 161:Src/core.c    ****         state.sw = HAL_GPIO_ReadPin(MAIN_SWITCH_GPIO_Port, MAIN_SWITCH_Pin) == GPIO_PIN_RESET ? SYS
 162:Src/core.c    ****         state.mode = ONOFF_MODE;
 163:Src/core.c    ****     }
 164:Src/core.c    ****     if(state.re_sw == REMOTE_ON && Uart1_Rx_Cnt != 0) bluetooth_decode(msg);
 165:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 166:Src/core.c    ****     state.off_sw = HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET ? OFF_O
 167:Src/core.c    ****     state.temp = HAL_ADC_GetValue(&hadc1) * 0.0008056f * 100;
 168:Src/core.c    ****     if(last != state.sw) {
 169:Src/core.c    ****         move(state.sw);
 170:Src/core.c    ****         strcpy(msg, "Change the system to ");
 171:Src/core.c    ****         strcat(msg, state.sw == SYS_ON ? "ON\n" : "OFF\n");
 172:Src/core.c    ****     }
 173:Src/core.c    ****     if(lastMode != state.mode) {
ARM GAS  /tmp/ccWcQ1w7.s 			page 22


 174:Src/core.c    ****         move(state.sw);
 175:Src/core.c    ****         strcpy(msg, "Change mode to ");
 176:Src/core.c    ****         strcat(msg, state.mode == ONOFF_MODE ? "ONOFF mode\n" : state.mode == TIME_MODE ? "TIME mod
 177:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 178:Src/core.c    ****         changeLight(state.mode, state.lightOff);
 179:Src/core.c    ****     }
 180:Src/core.c    ****     if(msg[0] != '0') printf(msg);
 181:Src/core.c    **** }
 182:Src/core.c    **** 
 183:Src/core.c    **** int lastAchievement = 0;
 184:Src/core.c    **** void send_state() {
 936              		.loc 1 184 19 view -0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 88
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 941              	.LCFI7:
 942              		.cfi_def_cfa_offset 20
 943              		.cfi_offset 4, -20
 944              		.cfi_offset 5, -16
 945              		.cfi_offset 6, -12
 946              		.cfi_offset 7, -8
 947              		.cfi_offset 14, -4
 948 0002 97B0     		sub	sp, sp, #92
 949              	.LCFI8:
 950              		.cfi_def_cfa_offset 112
 185:Src/core.c    ****     // char modeStr[15] = "ON/OFF Mode";
 186:Src/core.c    ****     char msg1[25];
 951              		.loc 1 186 5 view .LVU238
 187:Src/core.c    ****     strcpy(msg1, "Now the air-con is ");
 952              		.loc 1 187 5 view .LVU239
 953 0004 0FAC     		add	r4, sp, #60
 954 0006 544D     		ldr	r5, .L96
 955 0008 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 956 000a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 957 000c 2B68     		ldr	r3, [r5]
 958 000e 2360     		str	r3, [r4]
 188:Src/core.c    ****     strcat(msg1, state.sw == SYS_ON ? "ON\n" : "OFF\n");
 959              		.loc 1 188 5 view .LVU240
 960              		.loc 1 188 23 is_stmt 0 view .LVU241
 961 0010 524B     		ldr	r3, .L96+4
 962 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 963              		.loc 1 188 5 view .LVU242
 964 0014 012B     		cmp	r3, #1
 965 0016 16D0     		beq	.L87
 966 0018 5149     		ldr	r1, .L96+8
 967              	.L69:
 968              		.loc 1 188 5 discriminator 4 view .LVU243
 969 001a 0FA8     		add	r0, sp, #60
 970 001c FFF7FEFF 		bl	strcat
 971              	.LVL81:
 189:Src/core.c    ****     printf(msg1);
 972              		.loc 1 189 5 is_stmt 1 discriminator 4 view .LVU244
 973 0020 0FA8     		add	r0, sp, #60
 974 0022 FFF7FEFF 		bl	printf
 975              	.LVL82:
 190:Src/core.c    **** 
ARM GAS  /tmp/ccWcQ1w7.s 			page 23


 191:Src/core.c    ****     char msg2[25];
 976              		.loc 1 191 5 discriminator 4 view .LVU245
 192:Src/core.c    ****     strcpy(msg2, "The current mode is ");
 977              		.loc 1 192 5 discriminator 4 view .LVU246
 978 0026 08AC     		add	r4, sp, #32
 979 0028 4E4D     		ldr	r5, .L96+12
 980 002a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 981 002c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 982 002e 95E80300 		ldm	r5, {r0, r1}
 983 0032 44F8040B 		str	r0, [r4], #4
 984 0036 2170     		strb	r1, [r4]
 193:Src/core.c    ****     strcat(msg2, state.mode == ONOFF_MODE ? "ON/OFF Mode\n" : state.mode == TEMP_MODE ? "Temp Mode\
 985              		.loc 1 193 5 discriminator 4 view .LVU247
 986              		.loc 1 193 23 is_stmt 0 discriminator 4 view .LVU248
 987 0038 484B     		ldr	r3, .L96+4
 988 003a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 989              		.loc 1 193 5 discriminator 4 view .LVU249
 990 003c 3BB1     		cbz	r3, .L82
 991              		.loc 1 193 5 discriminator 1 view .LVU250
 992 003e 022B     		cmp	r3, #2
 993 0040 03D0     		beq	.L88
 994              		.loc 1 193 5 view .LVU251
 995 0042 4949     		ldr	r1, .L96+16
 996 0044 04E0     		b	.L70
 997              	.L87:
 188:Src/core.c    ****     printf(msg1);
 998              		.loc 1 188 5 view .LVU252
 999 0046 4949     		ldr	r1, .L96+20
 1000 0048 E7E7     		b	.L69
 1001              	.L88:
 1002              		.loc 1 193 5 view .LVU253
 1003 004a 4949     		ldr	r1, .L96+24
 1004 004c 00E0     		b	.L70
 1005              	.L82:
 1006 004e 4949     		ldr	r1, .L96+28
 1007              	.L70:
 1008              		.loc 1 193 5 discriminator 8 view .LVU254
 1009 0050 08A8     		add	r0, sp, #32
 1010 0052 FFF7FEFF 		bl	strcat
 1011              	.LVL83:
 194:Src/core.c    ****     printf(msg2);
 1012              		.loc 1 194 5 is_stmt 1 discriminator 8 view .LVU255
 1013 0056 08A8     		add	r0, sp, #32
 1014 0058 FFF7FEFF 		bl	printf
 1015              	.LVL84:
 195:Src/core.c    **** 
 196:Src/core.c    ****     printf("Current temperature is : %3.1f\n", state.temp);
 1016              		.loc 1 196 5 discriminator 8 view .LVU256
 1017              		.loc 1 196 53 is_stmt 0 discriminator 8 view .LVU257
 1018 005c 3F4F     		ldr	r7, .L96+4
 1019              		.loc 1 196 5 discriminator 8 view .LVU258
 1020 005e B869     		ldr	r0, [r7, #24]	@ float
 1021 0060 FFF7FEFF 		bl	__aeabi_f2d
 1022              	.LVL85:
 1023 0064 0246     		mov	r2, r0
 1024 0066 0B46     		mov	r3, r1
 1025 0068 4348     		ldr	r0, .L96+32
ARM GAS  /tmp/ccWcQ1w7.s 			page 24


 1026 006a FFF7FEFF 		bl	printf
 1027              	.LVL86:
 197:Src/core.c    **** 
 198:Src/core.c    ****     int currentTime = runningTime;
 1028              		.loc 1 198 5 is_stmt 1 discriminator 8 view .LVU259
 1029              		.loc 1 198 9 is_stmt 0 discriminator 8 view .LVU260
 1030 006e 434B     		ldr	r3, .L96+36
 1031 0070 1E68     		ldr	r6, [r3]
 1032              	.LVL87:
 199:Src/core.c    ****     char msg3[25];
 1033              		.loc 1 199 5 is_stmt 1 discriminator 8 view .LVU261
 200:Src/core.c    ****     strcpy(msg3, "The air-con has ");
 1034              		.loc 1 200 5 discriminator 8 view .LVU262
 1035 0072 01AC     		add	r4, sp, #4
 1036 0074 424D     		ldr	r5, .L96+40
 1037 0076 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1038 0078 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1039 007a 2B68     		ldr	r3, [r5]
 1040 007c 2370     		strb	r3, [r4]
 201:Src/core.c    ****     strcat(msg3, state.sw == SYS_ON ? "run" : "closed");
 1041              		.loc 1 201 5 discriminator 8 view .LVU263
 1042              		.loc 1 201 23 is_stmt 0 discriminator 8 view .LVU264
 1043 007e 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1044              		.loc 1 201 5 discriminator 8 view .LVU265
 1045 0080 012B     		cmp	r3, #1
 1046 0082 2CD0     		beq	.L89
 1047              		.loc 1 201 5 view .LVU266
 1048 0084 3F49     		ldr	r1, .L96+44
 1049              	.L71:
 1050              		.loc 1 201 5 discriminator 4 view .LVU267
 1051 0086 01AC     		add	r4, sp, #4
 1052 0088 2046     		mov	r0, r4
 1053 008a FFF7FEFF 		bl	strcat
 1054              	.LVL88:
 202:Src/core.c    ****     strcat(msg3, " for ");
 1055              		.loc 1 202 5 is_stmt 1 discriminator 4 view .LVU268
 1056 008e 2046     		mov	r0, r4
 1057 0090 FFF7FEFF 		bl	strlen
 1058              	.LVL89:
 1059 0094 0346     		mov	r3, r0
 1060 0096 2118     		adds	r1, r4, r0
 1061 0098 3B4A     		ldr	r2, .L96+48
 1062 009a 1068     		ldr	r0, [r2]
 1063 009c E050     		str	r0, [r4, r3]	@ unaligned
 1064 009e 9388     		ldrh	r3, [r2, #4]	@ unaligned
 1065 00a0 8B80     		strh	r3, [r1, #4]	@ unaligned
 203:Src/core.c    ****     printf("%s%d%s", msg3, (currentTime - (state.sw == SYS_ON ? state.startTime : state.shutDownTim
 1066              		.loc 1 203 5 discriminator 4 view .LVU269
 1067              		.loc 1 203 49 is_stmt 0 discriminator 4 view .LVU270
 1068 00a2 2E4B     		ldr	r3, .L96+4
 1069 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1070              		.loc 1 203 81 discriminator 4 view .LVU271
 1071 00a6 012B     		cmp	r3, #1
 1072 00a8 1BD0     		beq	.L90
 1073              		.loc 1 203 81 discriminator 2 view .LVU272
 1074 00aa 2C4B     		ldr	r3, .L96+4
 1075 00ac 1B6A     		ldr	r3, [r3, #32]
ARM GAS  /tmp/ccWcQ1w7.s 			page 25


 1076              	.L73:
 1077              		.loc 1 203 41 discriminator 4 view .LVU273
 1078 00ae F31A     		subs	r3, r6, r3
 1079              		.loc 1 203 5 discriminator 4 view .LVU274
 1080 00b0 3649     		ldr	r1, .L96+52
 1081 00b2 81FB0321 		smull	r2, r1, r1, r3
 1082 00b6 1944     		add	r1, r1, r3
 1083 00b8 DA17     		asrs	r2, r3, #31
 1084 00ba 354B     		ldr	r3, .L96+56
 1085 00bc C2EB6112 		rsb	r2, r2, r1, asr #5
 1086 00c0 01A9     		add	r1, sp, #4
 1087 00c2 3448     		ldr	r0, .L96+60
 1088 00c4 FFF7FEFF 		bl	printf
 1089              	.LVL90:
 204:Src/core.c    **** 
 205:Src/core.c    ****     if(state.mode == TEMP_MODE){
 1090              		.loc 1 205 5 is_stmt 1 discriminator 4 view .LVU275
 1091              		.loc 1 205 13 is_stmt 0 discriminator 4 view .LVU276
 1092 00c8 244B     		ldr	r3, .L96+4
 1093 00ca 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1094              		.loc 1 205 7 discriminator 4 view .LVU277
 1095 00cc 022B     		cmp	r3, #2
 1096 00ce 0BD0     		beq	.L91
 206:Src/core.c    ****         printf("The target temperature is %3.1f\n", state.tarTemp);
 207:Src/core.c    ****         printf("The last temperature achievement is %d\n", lastAchievement);
 208:Src/core.c    ****     }
 209:Src/core.c    ****     else if(state.mode == TIME_MODE) {
 1097              		.loc 1 209 10 is_stmt 1 view .LVU278
 1098              		.loc 1 209 12 is_stmt 0 view .LVU279
 1099 00d0 012B     		cmp	r3, #1
 1100 00d2 18D0     		beq	.L92
 1101              	.LVL91:
 1102              	.L75:
 210:Src/core.c    ****         int passTime = (currentTime - (state.sw == SYS_ON ? state.startTime : state.shutDownTime)) 
 211:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 212:Src/core.c    ****         printf("There are %d minutes before air-con %s\n", remainingTime, state.sw == SYS_ON ? "clo
 213:Src/core.c    ****         printf("Open for %d mins and close for %d mins\n", state.tarTime[0], state.tarTime[1]);
 214:Src/core.c    ****     }
 215:Src/core.c    **** 
 216:Src/core.c    ****     printf("\n");
 1103              		.loc 1 216 5 is_stmt 1 view .LVU280
 1104 00d4 0A20     		movs	r0, #10
 1105 00d6 FFF7FEFF 		bl	putchar
 1106              	.LVL92:
 217:Src/core.c    **** }
 1107              		.loc 1 217 1 is_stmt 0 view .LVU281
 1108 00da 17B0     		add	sp, sp, #92
 1109              	.LCFI9:
 1110              		.cfi_remember_state
 1111              		.cfi_def_cfa_offset 20
 1112              		@ sp needed
 1113 00dc F0BD     		pop	{r4, r5, r6, r7, pc}
 1114              	.LVL93:
 1115              	.L89:
 1116              	.LCFI10:
 1117              		.cfi_restore_state
 201:Src/core.c    ****     strcat(msg3, " for ");
ARM GAS  /tmp/ccWcQ1w7.s 			page 26


 1118              		.loc 1 201 5 view .LVU282
 1119 00de 2E49     		ldr	r1, .L96+64
 1120 00e0 D1E7     		b	.L71
 1121              	.L90:
 203:Src/core.c    **** 
 1122              		.loc 1 203 81 discriminator 1 view .LVU283
 1123 00e2 1E4B     		ldr	r3, .L96+4
 1124 00e4 DB69     		ldr	r3, [r3, #28]
 1125 00e6 E2E7     		b	.L73
 1126              	.L91:
 206:Src/core.c    ****         printf("The last temperature achievement is %d\n", lastAchievement);
 1127              		.loc 1 206 9 is_stmt 1 view .LVU284
 1128 00e8 1C4B     		ldr	r3, .L96+4
 1129 00ea 9868     		ldr	r0, [r3, #8]	@ float
 1130 00ec FFF7FEFF 		bl	__aeabi_f2d
 1131              	.LVL94:
 1132 00f0 0246     		mov	r2, r0
 1133 00f2 0B46     		mov	r3, r1
 1134 00f4 2948     		ldr	r0, .L96+68
 1135 00f6 FFF7FEFF 		bl	printf
 1136              	.LVL95:
 207:Src/core.c    ****     }
 1137              		.loc 1 207 9 view .LVU285
 1138 00fa 294B     		ldr	r3, .L96+72
 1139 00fc 1968     		ldr	r1, [r3]
 1140 00fe 2948     		ldr	r0, .L96+76
 1141 0100 FFF7FEFF 		bl	printf
 1142              	.LVL96:
 1143 0104 E6E7     		b	.L75
 1144              	.L92:
 1145              	.LBB11:
 210:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1146              		.loc 1 210 9 view .LVU286
 210:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1147              		.loc 1 210 45 is_stmt 0 view .LVU287
 1148 0106 154B     		ldr	r3, .L96+4
 1149 0108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 210:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1150              		.loc 1 210 77 view .LVU288
 1151 010a 012B     		cmp	r3, #1
 1152 010c 1BD0     		beq	.L93
 210:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1153              		.loc 1 210 77 discriminator 2 view .LVU289
 1154 010e 134A     		ldr	r2, .L96+4
 1155 0110 116A     		ldr	r1, [r2, #32]
 1156              	.L77:
 210:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1157              		.loc 1 210 37 discriminator 4 view .LVU290
 1158 0112 761A     		subs	r6, r6, r1
 1159              	.LVL97:
 210:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1160              		.loc 1 210 13 discriminator 4 view .LVU291
 1161 0114 1D49     		ldr	r1, .L96+52
 1162 0116 81FB0621 		smull	r2, r1, r1, r6
 1163 011a 3144     		add	r1, r1, r6
 1164 011c F617     		asrs	r6, r6, #31
 1165 011e C6EB6116 		rsb	r6, r6, r1, asr #5
ARM GAS  /tmp/ccWcQ1w7.s 			page 27


 1166              	.LVL98:
 211:Src/core.c    ****         printf("There are %d minutes before air-con %s\n", remainingTime, state.sw == SYS_ON ? "clo
 1167              		.loc 1 211 9 is_stmt 1 discriminator 4 view .LVU292
 211:Src/core.c    ****         printf("There are %d minutes before air-con %s\n", remainingTime, state.sw == SYS_ON ? "clo
 1168              		.loc 1 211 68 is_stmt 0 discriminator 4 view .LVU293
 1169 0122 012B     		cmp	r3, #1
 1170 0124 12D0     		beq	.L94
 211:Src/core.c    ****         printf("There are %d minutes before air-con %s\n", remainingTime, state.sw == SYS_ON ? "clo
 1171              		.loc 1 211 68 discriminator 2 view .LVU294
 1172 0126 0D4A     		ldr	r2, .L96+4
 1173 0128 1169     		ldr	r1, [r2, #16]
 1174              	.L79:
 211:Src/core.c    ****         printf("There are %d minutes before air-con %s\n", remainingTime, state.sw == SYS_ON ? "clo
 1175              		.loc 1 211 13 discriminator 4 view .LVU295
 1176 012a 891B     		subs	r1, r1, r6
 1177              	.LVL99:
 212:Src/core.c    ****         printf("Open for %d mins and close for %d mins\n", state.tarTime[0], state.tarTime[1]);
 1178              		.loc 1 212 9 is_stmt 1 discriminator 4 view .LVU296
 1179 012c 012B     		cmp	r3, #1
 1180 012e 10D0     		beq	.L95
 212:Src/core.c    ****         printf("Open for %d mins and close for %d mins\n", state.tarTime[0], state.tarTime[1]);
 1181              		.loc 1 212 9 is_stmt 0 view .LVU297
 1182 0130 1D4A     		ldr	r2, .L96+80
 1183              	.L80:
 212:Src/core.c    ****         printf("Open for %d mins and close for %d mins\n", state.tarTime[0], state.tarTime[1]);
 1184              		.loc 1 212 9 discriminator 4 view .LVU298
 1185 0132 1E48     		ldr	r0, .L96+84
 1186 0134 FFF7FEFF 		bl	printf
 1187              	.LVL100:
 213:Src/core.c    ****     }
 1188              		.loc 1 213 9 is_stmt 1 discriminator 4 view .LVU299
 1189 0138 084B     		ldr	r3, .L96+4
 1190 013a 1A69     		ldr	r2, [r3, #16]
 1191 013c D968     		ldr	r1, [r3, #12]
 1192 013e 1C48     		ldr	r0, .L96+88
 1193 0140 FFF7FEFF 		bl	printf
 1194              	.LVL101:
 1195 0144 C6E7     		b	.L75
 1196              	.LVL102:
 1197              	.L93:
 210:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1198              		.loc 1 210 77 is_stmt 0 discriminator 1 view .LVU300
 1199 0146 054A     		ldr	r2, .L96+4
 1200 0148 D169     		ldr	r1, [r2, #28]
 1201 014a E2E7     		b	.L77
 1202              	.LVL103:
 1203              	.L94:
 211:Src/core.c    ****         printf("There are %d minutes before air-con %s\n", remainingTime, state.sw == SYS_ON ? "clo
 1204              		.loc 1 211 68 discriminator 1 view .LVU301
 1205 014c 034A     		ldr	r2, .L96+4
 1206 014e D168     		ldr	r1, [r2, #12]
 1207 0150 EBE7     		b	.L79
 1208              	.LVL104:
 1209              	.L95:
 212:Src/core.c    ****         printf("Open for %d mins and close for %d mins\n", state.tarTime[0], state.tarTime[1]);
 1210              		.loc 1 212 9 view .LVU302
 1211 0152 184A     		ldr	r2, .L96+92
ARM GAS  /tmp/ccWcQ1w7.s 			page 28


 1212 0154 EDE7     		b	.L80
 1213              	.L97:
 1214 0156 00BF     		.align	2
 1215              	.L96:
 1216 0158 50000000 		.word	.LC11
 1217 015c 00000000 		.word	state
 1218 0160 00000000 		.word	.LC2
 1219 0164 64000000 		.word	.LC12
 1220 0168 0C000000 		.word	.LC4
 1221 016c 08000000 		.word	.LC3
 1222 0170 28000000 		.word	.LC6
 1223 0174 18000000 		.word	.LC5
 1224 0178 7C000000 		.word	.LC13
 1225 017c 00000000 		.word	runningTime
 1226 0180 9C000000 		.word	.LC14
 1227 0184 34000000 		.word	.LC7
 1228 0188 B0000000 		.word	.LC15
 1229 018c 89888888 		.word	-2004318071
 1230 0190 B8000000 		.word	.LC16
 1231 0194 C4000000 		.word	.LC17
 1232 0198 3C000000 		.word	.LC8
 1233 019c CC000000 		.word	.LC18
 1234 01a0 00000000 		.word	.LANCHOR5
 1235 01a4 F0000000 		.word	.LC19
 1236 01a8 40000000 		.word	.LC9
 1237 01ac 18010000 		.word	.LC20
 1238 01b0 40010000 		.word	.LC21
 1239 01b4 48000000 		.word	.LC10
 1240              	.LBE11:
 1241              		.cfi_endproc
 1242              	.LFE73:
 1244              		.section	.text.move,"ax",%progbits
 1245              		.align	1
 1246              		.global	move
 1247              		.syntax unified
 1248              		.thumb
 1249              		.thumb_func
 1250              		.fpu softvfp
 1252              	move:
 1253              	.LVL105:
 1254              	.LFB74:
 218:Src/core.c    **** 
 219:Src/core.c    **** void move(enum SystemSwitch pos) {
 1255              		.loc 1 219 34 is_stmt 1 view -0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 0
 1258              		@ frame_needed = 0, uses_anonymous_args = 0
 1259              		.loc 1 219 34 is_stmt 0 view .LVU304
 1260 0000 08B5     		push	{r3, lr}
 1261              	.LCFI11:
 1262              		.cfi_def_cfa_offset 8
 1263              		.cfi_offset 3, -8
 1264              		.cfi_offset 14, -4
 220:Src/core.c    ****     if(pos == SYS_ON) {
 1265              		.loc 1 220 5 is_stmt 1 view .LVU305
 1266              		.loc 1 220 7 is_stmt 0 view .LVU306
 1267 0002 0128     		cmp	r0, #1
ARM GAS  /tmp/ccWcQ1w7.s 			page 29


 1268 0004 1ED0     		beq	.L106
 221:Src/core.c    ****         HAL_Delay(100);
 222:Src/core.c    ****         __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, servo2_up);
 223:Src/core.c    ****         HAL_Delay(2000);
 224:Src/core.c    ****         __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_1, servo1_up);
 225:Src/core.c    ****         HAL_Delay(100);
 226:Src/core.c    **** 
 227:Src/core.c    ****         while(HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET) {
 228:Src/core.c    ****             HAL_Delay(100);
 229:Src/core.c    ****         }
 230:Src/core.c    **** 
 231:Src/core.c    ****         state.startTime = runningTime;
 232:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_RESET);
 233:Src/core.c    ****     }
 234:Src/core.c    **** 
 235:Src/core.c    ****     else {
 236:Src/core.c    ****         HAL_Delay(100);
 1269              		.loc 1 236 9 is_stmt 1 view .LVU307
 1270 0006 6420     		movs	r0, #100
 1271              	.LVL106:
 1272              		.loc 1 236 9 is_stmt 0 view .LVU308
 1273 0008 FFF7FEFF 		bl	HAL_Delay
 1274              	.LVL107:
 237:Src/core.c    ****         __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_1, servo1_down);
 1275              		.loc 1 237 9 is_stmt 1 view .LVU309
 1276 000c 274B     		ldr	r3, .L109
 1277 000e 1B68     		ldr	r3, [r3]
 1278 0010 274A     		ldr	r2, .L109+4
 1279 0012 1268     		ldr	r2, [r2]
 1280 0014 5A63     		str	r2, [r3, #52]
 238:Src/core.c    ****         HAL_Delay(2000);
 1281              		.loc 1 238 9 view .LVU310
 1282 0016 4FF4FA60 		mov	r0, #2000
 1283 001a FFF7FEFF 		bl	HAL_Delay
 1284              	.LVL108:
 239:Src/core.c    ****         __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, servo2_down);
 1285              		.loc 1 239 9 view .LVU311
 1286 001e 254B     		ldr	r3, .L109+8
 1287 0020 1B68     		ldr	r3, [r3]
 1288 0022 254A     		ldr	r2, .L109+12
 1289 0024 1268     		ldr	r2, [r2]
 1290 0026 5A63     		str	r2, [r3, #52]
 240:Src/core.c    ****         HAL_Delay(100);
 1291              		.loc 1 240 9 view .LVU312
 1292 0028 6420     		movs	r0, #100
 1293 002a FFF7FEFF 		bl	HAL_Delay
 1294              	.LVL109:
 241:Src/core.c    **** 
 242:Src/core.c    ****         while(HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_SET) {
 1295              		.loc 1 242 9 view .LVU313
 1296              	.L103:
 1297              		.loc 1 242 14 view .LVU314
 1298              		.loc 1 242 15 is_stmt 0 view .LVU315
 1299 002e 4FF40061 		mov	r1, #2048
 1300 0032 2248     		ldr	r0, .L109+16
 1301 0034 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1302              	.LVL110:
ARM GAS  /tmp/ccWcQ1w7.s 			page 30


 1303              		.loc 1 242 14 view .LVU316
 1304 0038 0128     		cmp	r0, #1
 1305 003a 2CD1     		bne	.L107
 243:Src/core.c    ****             HAL_Delay(100);
 1306              		.loc 1 243 13 is_stmt 1 view .LVU317
 1307 003c 6420     		movs	r0, #100
 1308 003e FFF7FEFF 		bl	HAL_Delay
 1309              	.LVL111:
 1310 0042 F4E7     		b	.L103
 1311              	.LVL112:
 1312              	.L106:
 221:Src/core.c    ****         __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, servo2_up);
 1313              		.loc 1 221 9 view .LVU318
 1314 0044 6420     		movs	r0, #100
 1315              	.LVL113:
 221:Src/core.c    ****         __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, servo2_up);
 1316              		.loc 1 221 9 is_stmt 0 view .LVU319
 1317 0046 FFF7FEFF 		bl	HAL_Delay
 1318              	.LVL114:
 222:Src/core.c    ****         HAL_Delay(2000);
 1319              		.loc 1 222 9 is_stmt 1 view .LVU320
 1320 004a 1A4B     		ldr	r3, .L109+8
 1321 004c 1B68     		ldr	r3, [r3]
 1322 004e 1C4A     		ldr	r2, .L109+20
 1323 0050 1268     		ldr	r2, [r2]
 1324 0052 5A63     		str	r2, [r3, #52]
 223:Src/core.c    ****         __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_1, servo1_up);
 1325              		.loc 1 223 9 view .LVU321
 1326 0054 4FF4FA60 		mov	r0, #2000
 1327 0058 FFF7FEFF 		bl	HAL_Delay
 1328              	.LVL115:
 224:Src/core.c    ****         HAL_Delay(100);
 1329              		.loc 1 224 9 view .LVU322
 1330 005c 134B     		ldr	r3, .L109
 1331 005e 1B68     		ldr	r3, [r3]
 1332 0060 184A     		ldr	r2, .L109+24
 1333 0062 1268     		ldr	r2, [r2]
 1334 0064 5A63     		str	r2, [r3, #52]
 225:Src/core.c    **** 
 1335              		.loc 1 225 9 view .LVU323
 1336 0066 6420     		movs	r0, #100
 1337 0068 FFF7FEFF 		bl	HAL_Delay
 1338              	.LVL116:
 227:Src/core.c    ****             HAL_Delay(100);
 1339              		.loc 1 227 9 view .LVU324
 1340              	.L100:
 227:Src/core.c    ****             HAL_Delay(100);
 1341              		.loc 1 227 14 view .LVU325
 227:Src/core.c    ****             HAL_Delay(100);
 1342              		.loc 1 227 15 is_stmt 0 view .LVU326
 1343 006c 4FF40061 		mov	r1, #2048
 1344 0070 1248     		ldr	r0, .L109+16
 1345 0072 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1346              	.LVL117:
 227:Src/core.c    ****             HAL_Delay(100);
 1347              		.loc 1 227 14 view .LVU327
 1348 0076 18B9     		cbnz	r0, .L108
ARM GAS  /tmp/ccWcQ1w7.s 			page 31


 228:Src/core.c    ****         }
 1349              		.loc 1 228 13 is_stmt 1 view .LVU328
 1350 0078 6420     		movs	r0, #100
 1351 007a FFF7FEFF 		bl	HAL_Delay
 1352              	.LVL118:
 1353 007e F5E7     		b	.L100
 1354              	.L108:
 231:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_RESET);
 1355              		.loc 1 231 9 view .LVU329
 231:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_RESET);
 1356              		.loc 1 231 25 is_stmt 0 view .LVU330
 1357 0080 114B     		ldr	r3, .L109+28
 1358 0082 1A68     		ldr	r2, [r3]
 1359 0084 114B     		ldr	r3, .L109+32
 1360 0086 DA61     		str	r2, [r3, #28]
 232:Src/core.c    ****     }
 1361              		.loc 1 232 9 is_stmt 1 view .LVU331
 1362 0088 0022     		movs	r2, #0
 1363 008a 4FF40051 		mov	r1, #8192
 1364 008e 1048     		ldr	r0, .L109+36
 1365 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1366              	.LVL119:
 1367 0094 09E0     		b	.L98
 1368              	.L107:
 244:Src/core.c    ****         }
 245:Src/core.c    **** 
 246:Src/core.c    ****         state.shutDownTime = runningTime;
 1369              		.loc 1 246 9 view .LVU332
 1370              		.loc 1 246 28 is_stmt 0 view .LVU333
 1371 0096 0C4B     		ldr	r3, .L109+28
 1372 0098 1A68     		ldr	r2, [r3]
 1373 009a 0C4B     		ldr	r3, .L109+32
 1374 009c 1A62     		str	r2, [r3, #32]
 247:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_SET);
 1375              		.loc 1 247 9 is_stmt 1 view .LVU334
 1376 009e 0122     		movs	r2, #1
 1377 00a0 4FF40051 		mov	r1, #8192
 1378 00a4 0A48     		ldr	r0, .L109+36
 1379 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1380              	.LVL120:
 1381              	.L98:
 248:Src/core.c    ****     }
 249:Src/core.c    **** }
 1382              		.loc 1 249 1 is_stmt 0 view .LVU335
 1383 00aa 08BD     		pop	{r3, pc}
 1384              	.L110:
 1385              		.align	2
 1386              	.L109:
 1387 00ac 00000000 		.word	htim1
 1388 00b0 00000000 		.word	.LANCHOR1
 1389 00b4 00000000 		.word	htim2
 1390 00b8 00000000 		.word	.LANCHOR0
 1391 00bc 000C0140 		.word	1073810432
 1392 00c0 00000000 		.word	.LANCHOR2
 1393 00c4 00000000 		.word	.LANCHOR3
 1394 00c8 00000000 		.word	runningTime
 1395 00cc 00000000 		.word	state
ARM GAS  /tmp/ccWcQ1w7.s 			page 32


 1396 00d0 00100140 		.word	1073811456
 1397              		.cfi_endproc
 1398              	.LFE74:
 1400              		.section	.rodata.update_info.str1.4,"aMS",%progbits,1
 1401              		.align	2
 1402              	.LC22:
 1403 0000 54454D50 		.ascii	"TEMP mode\012\000"
 1403      206D6F64 
 1403      650A00
 1404 000b 00       		.align	2
 1405              	.LC23:
 1406 000c 4F4E4F46 		.ascii	"ONOFF mode\012\000"
 1406      46206D6F 
 1406      64650A00 
 1407              		.align	2
 1408              	.LC24:
 1409 0018 54494D45 		.ascii	"TIME mode\012\000"
 1409      206D6F64 
 1409      650A00
 1410              		.global	__aeabi_ui2f
 1411              		.global	__aeabi_fmul
 1412 0023 00       		.align	2
 1413              	.LC25:
 1414 0024 4368616E 		.ascii	"Change the system to \000"
 1414      67652074 
 1414      68652073 
 1414      79737465 
 1414      6D20746F 
 1415 003a 0000     		.align	2
 1416              	.LC26:
 1417 003c 4368616E 		.ascii	"Change mode to \000"
 1417      6765206D 
 1417      6F646520 
 1417      746F2000 
 1418              		.section	.text.update_info,"ax",%progbits
 1419              		.align	1
 1420              		.global	update_info
 1421              		.syntax unified
 1422              		.thumb
 1423              		.thumb_func
 1424              		.fpu softvfp
 1426              	update_info:
 1427              	.LFB72:
 154:Src/core.c    ****     strcpy(msg, "");
 1428              		.loc 1 154 20 is_stmt 1 view -0
 1429              		.cfi_startproc
 1430              		@ args = 0, pretend = 0, frame = 0
 1431              		@ frame_needed = 0, uses_anonymous_args = 0
 1432 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1433              	.LCFI12:
 1434              		.cfi_def_cfa_offset 24
 1435              		.cfi_offset 3, -24
 1436              		.cfi_offset 4, -20
 1437              		.cfi_offset 5, -16
 1438              		.cfi_offset 6, -12
 1439              		.cfi_offset 7, -8
 1440              		.cfi_offset 14, -4
ARM GAS  /tmp/ccWcQ1w7.s 			page 33


 155:Src/core.c    ****     msg[0] = '0';
 1441              		.loc 1 155 5 view .LVU337
 156:Src/core.c    ****     enum SystemSwitch last = state.sw;
 1442              		.loc 1 156 5 view .LVU338
 156:Src/core.c    ****     enum SystemSwitch last = state.sw;
 1443              		.loc 1 156 12 is_stmt 0 view .LVU339
 1444 0002 474B     		ldr	r3, .L131
 1445 0004 3022     		movs	r2, #48
 1446 0006 1A60     		str	r2, [r3]
 157:Src/core.c    ****     enum Mode lastMode = state.mode;
 1447              		.loc 1 157 5 is_stmt 1 view .LVU340
 157:Src/core.c    ****     enum Mode lastMode = state.mode;
 1448              		.loc 1 157 23 is_stmt 0 view .LVU341
 1449 0008 464C     		ldr	r4, .L131+4
 1450 000a 2578     		ldrb	r5, [r4]	@ zero_extendqisi2
 1451              	.LVL121:
 158:Src/core.c    ****     state.re_sw = HAL_GPIO_ReadPin(REMOTE_SWITCH_GPIO_Port, REMOTE_SWITCH_Pin) == GPIO_PIN_RESET ? 
 1452              		.loc 1 158 5 is_stmt 1 view .LVU342
 158:Src/core.c    ****     state.re_sw = HAL_GPIO_ReadPin(REMOTE_SWITCH_GPIO_Port, REMOTE_SWITCH_Pin) == GPIO_PIN_RESET ? 
 1453              		.loc 1 158 15 is_stmt 0 view .LVU343
 1454 000c 2679     		ldrb	r6, [r4, #4]	@ zero_extendqisi2
 1455              	.LVL122:
 159:Src/core.c    ****     if(state.re_sw != REMOTE_ON) {
 1456              		.loc 1 159 5 is_stmt 1 view .LVU344
 159:Src/core.c    ****     if(state.re_sw != REMOTE_ON) {
 1457              		.loc 1 159 19 is_stmt 0 view .LVU345
 1458 000e 0221     		movs	r1, #2
 1459 0010 4548     		ldr	r0, .L131+8
 1460 0012 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1461              	.LVL123:
 159:Src/core.c    ****     if(state.re_sw != REMOTE_ON) {
 1462              		.loc 1 159 110 view .LVU346
 1463 0016 0038     		subs	r0, r0, #0
 1464 0018 18BF     		it	ne
 1465 001a 0120     		movne	r0, #1
 159:Src/core.c    ****     if(state.re_sw != REMOTE_ON) {
 1466              		.loc 1 159 17 view .LVU347
 1467 001c E070     		strb	r0, [r4, #3]
 160:Src/core.c    ****         state.sw = HAL_GPIO_ReadPin(MAIN_SWITCH_GPIO_Port, MAIN_SWITCH_Pin) == GPIO_PIN_RESET ? SYS
 1468              		.loc 1 160 5 is_stmt 1 view .LVU348
 160:Src/core.c    ****         state.sw = HAL_GPIO_ReadPin(MAIN_SWITCH_GPIO_Port, MAIN_SWITCH_Pin) == GPIO_PIN_RESET ? SYS
 1469              		.loc 1 160 7 is_stmt 0 view .LVU349
 1470 001e 0028     		cmp	r0, #0
 1471 0020 35D1     		bne	.L124
 1472              	.L112:
 164:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 1473              		.loc 1 164 5 is_stmt 1 view .LVU350
 164:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 1474              		.loc 1 164 13 is_stmt 0 view .LVU351
 1475 0022 404B     		ldr	r3, .L131+4
 1476 0024 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 164:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 1477              		.loc 1 164 7 view .LVU352
 1478 0026 1BB9     		cbnz	r3, .L113
 164:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 1479              		.loc 1 164 49 discriminator 1 view .LVU353
 1480 0028 404B     		ldr	r3, .L131+12
ARM GAS  /tmp/ccWcQ1w7.s 			page 34


 1481 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 164:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 1482              		.loc 1 164 33 discriminator 1 view .LVU354
 1483 002c 002B     		cmp	r3, #0
 1484 002e 39D1     		bne	.L125
 1485              	.L113:
 165:Src/core.c    ****     state.off_sw = HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET ? OFF_O
 1486              		.loc 1 165 5 is_stmt 1 view .LVU355
 165:Src/core.c    ****     state.off_sw = HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET ? OFF_O
 1487              		.loc 1 165 19 is_stmt 0 view .LVU356
 1488 0030 3D4F     		ldr	r7, .L131+8
 1489 0032 4FF48061 		mov	r1, #1024
 1490 0036 3846     		mov	r0, r7
 1491 0038 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1492              	.LVL124:
 165:Src/core.c    ****     state.off_sw = HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET ? OFF_O
 1493              		.loc 1 165 99 view .LVU357
 1494 003c 0038     		subs	r0, r0, #0
 1495 003e 18BF     		it	ne
 1496 0040 0120     		movne	r0, #1
 165:Src/core.c    ****     state.off_sw = HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET ? OFF_O
 1497              		.loc 1 165 17 view .LVU358
 1498 0042 384C     		ldr	r4, .L131+4
 1499 0044 6070     		strb	r0, [r4, #1]
 166:Src/core.c    ****     state.temp = HAL_ADC_GetValue(&hadc1) * 0.0008056f * 100;
 1500              		.loc 1 166 5 is_stmt 1 view .LVU359
 166:Src/core.c    ****     state.temp = HAL_ADC_GetValue(&hadc1) * 0.0008056f * 100;
 1501              		.loc 1 166 20 is_stmt 0 view .LVU360
 1502 0046 4FF40061 		mov	r1, #2048
 1503 004a 3846     		mov	r0, r7
 1504 004c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1505              	.LVL125:
 166:Src/core.c    ****     state.temp = HAL_ADC_GetValue(&hadc1) * 0.0008056f * 100;
 1506              		.loc 1 166 103 view .LVU361
 1507 0050 0038     		subs	r0, r0, #0
 1508 0052 18BF     		it	ne
 1509 0054 0120     		movne	r0, #1
 166:Src/core.c    ****     state.temp = HAL_ADC_GetValue(&hadc1) * 0.0008056f * 100;
 1510              		.loc 1 166 18 view .LVU362
 1511 0056 A070     		strb	r0, [r4, #2]
 167:Src/core.c    ****     if(last != state.sw) {
 1512              		.loc 1 167 5 is_stmt 1 view .LVU363
 167:Src/core.c    ****     if(last != state.sw) {
 1513              		.loc 1 167 18 is_stmt 0 view .LVU364
 1514 0058 3548     		ldr	r0, .L131+16
 1515 005a FFF7FEFF 		bl	HAL_ADC_GetValue
 1516              	.LVL126:
 167:Src/core.c    ****     if(last != state.sw) {
 1517              		.loc 1 167 43 view .LVU365
 1518 005e FFF7FEFF 		bl	__aeabi_ui2f
 1519              	.LVL127:
 1520 0062 3449     		ldr	r1, .L131+20
 1521 0064 FFF7FEFF 		bl	__aeabi_fmul
 1522              	.LVL128:
 167:Src/core.c    ****     if(last != state.sw) {
 1523              		.loc 1 167 56 view .LVU366
 1524 0068 3349     		ldr	r1, .L131+24
ARM GAS  /tmp/ccWcQ1w7.s 			page 35


 1525 006a FFF7FEFF 		bl	__aeabi_fmul
 1526              	.LVL129:
 167:Src/core.c    ****     if(last != state.sw) {
 1527              		.loc 1 167 16 view .LVU367
 1528 006e A061     		str	r0, [r4, #24]	@ float
 168:Src/core.c    ****         move(state.sw);
 1529              		.loc 1 168 5 is_stmt 1 view .LVU368
 168:Src/core.c    ****         move(state.sw);
 1530              		.loc 1 168 21 is_stmt 0 view .LVU369
 1531 0070 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 168:Src/core.c    ****         move(state.sw);
 1532              		.loc 1 168 7 view .LVU370
 1533 0072 A842     		cmp	r0, r5
 1534 0074 1AD1     		bne	.L126
 1535              	.LVL130:
 1536              	.L114:
 173:Src/core.c    ****         move(state.sw);
 1537              		.loc 1 173 5 is_stmt 1 view .LVU371
 173:Src/core.c    ****         move(state.sw);
 1538              		.loc 1 173 25 is_stmt 0 view .LVU372
 1539 0076 2B4B     		ldr	r3, .L131+4
 1540 0078 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 173:Src/core.c    ****         move(state.sw);
 1541              		.loc 1 173 7 view .LVU373
 1542 007a B342     		cmp	r3, r6
 1543 007c 2CD1     		bne	.L127
 1544              	.L116:
 180:Src/core.c    **** }
 1545              		.loc 1 180 5 is_stmt 1 view .LVU374
 180:Src/core.c    **** }
 1546              		.loc 1 180 11 is_stmt 0 view .LVU375
 1547 007e 284B     		ldr	r3, .L131
 1548 0080 1B68     		ldr	r3, [r3]
 180:Src/core.c    **** }
 1549              		.loc 1 180 7 view .LVU376
 1550 0082 302B     		cmp	r3, #48
 1551 0084 02D0     		beq	.L111
 180:Src/core.c    **** }
 1552              		.loc 1 180 23 is_stmt 1 discriminator 1 view .LVU377
 1553 0086 2648     		ldr	r0, .L131
 1554 0088 FFF7FEFF 		bl	printf
 1555              	.LVL131:
 1556              	.L111:
 181:Src/core.c    **** 
 1557              		.loc 1 181 1 is_stmt 0 view .LVU378
 1558 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1559              	.LVL132:
 1560              	.L124:
 161:Src/core.c    ****         state.mode = ONOFF_MODE;
 1561              		.loc 1 161 9 is_stmt 1 view .LVU379
 161:Src/core.c    ****         state.mode = ONOFF_MODE;
 1562              		.loc 1 161 20 is_stmt 0 view .LVU380
 1563 008e 0121     		movs	r1, #1
 1564 0090 2548     		ldr	r0, .L131+8
 1565 0092 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1566              	.LVL133:
 161:Src/core.c    ****         state.mode = ONOFF_MODE;
ARM GAS  /tmp/ccWcQ1w7.s 			page 36


 1567              		.loc 1 161 104 view .LVU381
 1568 0096 B0FA80F0 		clz	r0, r0
 1569 009a 4009     		lsrs	r0, r0, #5
 161:Src/core.c    ****         state.mode = ONOFF_MODE;
 1570              		.loc 1 161 18 view .LVU382
 1571 009c 2070     		strb	r0, [r4]
 162:Src/core.c    ****     }
 1572              		.loc 1 162 9 is_stmt 1 view .LVU383
 162:Src/core.c    ****     }
 1573              		.loc 1 162 20 is_stmt 0 view .LVU384
 1574 009e 0022     		movs	r2, #0
 1575 00a0 2271     		strb	r2, [r4, #4]
 1576 00a2 BEE7     		b	.L112
 1577              	.L125:
 164:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 1578              		.loc 1 164 55 is_stmt 1 discriminator 2 view .LVU385
 1579 00a4 1E48     		ldr	r0, .L131
 1580 00a6 FFF7FEFF 		bl	bluetooth_decode
 1581              	.LVL134:
 1582 00aa C1E7     		b	.L113
 1583              	.L126:
 1584              	.LBB12:
 169:Src/core.c    ****         strcpy(msg, "Change the system to ");
 1585              		.loc 1 169 9 view .LVU386
 1586 00ac FFF7FEFF 		bl	move
 1587              	.LVL135:
 170:Src/core.c    ****         strcat(msg, state.sw == SYS_ON ? "ON\n" : "OFF\n");
 1588              		.loc 1 170 9 view .LVU387
 1589 00b0 1B4C     		ldr	r4, .L131
 1590 00b2 224D     		ldr	r5, .L131+28
 1591              	.LVL136:
 170:Src/core.c    ****         strcat(msg, state.sw == SYS_ON ? "ON\n" : "OFF\n");
 1592              		.loc 1 170 9 is_stmt 0 view .LVU388
 1593 00b4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1594 00b6 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1595 00b8 95E80300 		ldm	r5, {r0, r1}
 1596 00bc 44F8040B 		str	r0, [r4], #4
 1597 00c0 2180     		strh	r1, [r4]	@ movhi
 171:Src/core.c    ****     }
 1598              		.loc 1 171 9 is_stmt 1 view .LVU389
 171:Src/core.c    ****     }
 1599              		.loc 1 171 26 is_stmt 0 view .LVU390
 1600 00c2 184B     		ldr	r3, .L131+4
 1601 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 171:Src/core.c    ****     }
 1602              		.loc 1 171 9 view .LVU391
 1603 00c6 012B     		cmp	r3, #1
 1604 00c8 04D0     		beq	.L128
 1605 00ca 1D49     		ldr	r1, .L131+32
 1606              	.L115:
 171:Src/core.c    ****     }
 1607              		.loc 1 171 9 discriminator 4 view .LVU392
 1608 00cc 1448     		ldr	r0, .L131
 1609 00ce FFF7FEFF 		bl	strcat
 1610              	.LVL137:
 1611 00d2 D0E7     		b	.L114
 1612              	.L128:
ARM GAS  /tmp/ccWcQ1w7.s 			page 37


 171:Src/core.c    ****     }
 1613              		.loc 1 171 9 view .LVU393
 1614 00d4 1B49     		ldr	r1, .L131+36
 1615 00d6 F9E7     		b	.L115
 1616              	.L127:
 1617              	.LBE12:
 1618              	.LBB13:
 174:Src/core.c    ****         strcpy(msg, "Change mode to ");
 1619              		.loc 1 174 9 is_stmt 1 view .LVU394
 174:Src/core.c    ****         strcpy(msg, "Change mode to ");
 1620              		.loc 1 174 19 is_stmt 0 view .LVU395
 1621 00d8 124D     		ldr	r5, .L131+4
 174:Src/core.c    ****         strcpy(msg, "Change mode to ");
 1622              		.loc 1 174 9 view .LVU396
 1623 00da 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1624 00dc FFF7FEFF 		bl	move
 1625              	.LVL138:
 175:Src/core.c    ****         strcat(msg, state.mode == ONOFF_MODE ? "ONOFF mode\n" : state.mode == TIME_MODE ? "TIME mod
 1626              		.loc 1 175 9 is_stmt 1 view .LVU397
 1627 00e0 0F4C     		ldr	r4, .L131
 1628 00e2 194B     		ldr	r3, .L131+40
 1629 00e4 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1630 00e6 84E80F00 		stm	r4, {r0, r1, r2, r3}
 176:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 1631              		.loc 1 176 9 view .LVU398
 176:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 1632              		.loc 1 176 26 is_stmt 0 view .LVU399
 1633 00ea 2C79     		ldrb	r4, [r5, #4]	@ zero_extendqisi2
 176:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 1634              		.loc 1 176 9 view .LVU400
 1635 00ec 2CB1     		cbz	r4, .L121
 176:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 1636              		.loc 1 176 9 discriminator 1 view .LVU401
 1637 00ee 012C     		cmp	r4, #1
 1638 00f0 01D0     		beq	.L129
 176:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 1639              		.loc 1 176 9 view .LVU402
 1640 00f2 1649     		ldr	r1, .L131+44
 1641 00f4 02E0     		b	.L117
 1642              	.L129:
 1643 00f6 1649     		ldr	r1, .L131+48
 1644 00f8 00E0     		b	.L117
 1645              	.L121:
 1646 00fa 1649     		ldr	r1, .L131+52
 1647              	.L117:
 176:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 1648              		.loc 1 176 9 discriminator 8 view .LVU403
 1649 00fc 0848     		ldr	r0, .L131
 1650 00fe FFF7FEFF 		bl	strcat
 1651              	.LVL139:
 177:Src/core.c    ****         changeLight(state.mode, state.lightOff);
 1652              		.loc 1 177 9 is_stmt 1 discriminator 8 view .LVU404
 177:Src/core.c    ****         changeLight(state.mode, state.lightOff);
 1653              		.loc 1 177 11 is_stmt 0 discriminator 8 view .LVU405
 1654 0102 012C     		cmp	r4, #1
 1655 0104 05D0     		beq	.L130
 1656              	.L118:
ARM GAS  /tmp/ccWcQ1w7.s 			page 38


 178:Src/core.c    ****     }
 1657              		.loc 1 178 9 is_stmt 1 view .LVU406
 1658 0106 074B     		ldr	r3, .L131+4
 1659 0108 5969     		ldr	r1, [r3, #20]
 1660 010a 2046     		mov	r0, r4
 1661 010c FFF7FEFF 		bl	changeLight
 1662              	.LVL140:
 1663 0110 B5E7     		b	.L116
 1664              	.L130:
 177:Src/core.c    ****         changeLight(state.mode, state.lightOff);
 1665              		.loc 1 177 38 discriminator 1 view .LVU407
 177:Src/core.c    ****         changeLight(state.mode, state.lightOff);
 1666              		.loc 1 177 54 is_stmt 0 discriminator 1 view .LVU408
 1667 0112 114B     		ldr	r3, .L131+56
 1668 0114 1A68     		ldr	r2, [r3]
 1669 0116 034B     		ldr	r3, .L131+4
 1670 0118 DA61     		str	r2, [r3, #28]
 177:Src/core.c    ****         changeLight(state.mode, state.lightOff);
 1671              		.loc 1 177 69 is_stmt 1 discriminator 1 view .LVU409
 177:Src/core.c    ****         changeLight(state.mode, state.lightOff);
 1672              		.loc 1 177 88 is_stmt 0 discriminator 1 view .LVU410
 1673 011a 1A62     		str	r2, [r3, #32]
 1674 011c F3E7     		b	.L118
 1675              	.L132:
 1676 011e 00BF     		.align	2
 1677              	.L131:
 1678 0120 00000000 		.word	msg
 1679 0124 00000000 		.word	state
 1680 0128 000C0140 		.word	1073810432
 1681 012c 00000000 		.word	.LANCHOR4
 1682 0130 00000000 		.word	hadc1
 1683 0134 E72E533A 		.word	978530023
 1684 0138 0000C842 		.word	1120403456
 1685 013c 24000000 		.word	.LC25
 1686 0140 00000000 		.word	.LC2
 1687 0144 08000000 		.word	.LC3
 1688 0148 3C000000 		.word	.LC26
 1689 014c 00000000 		.word	.LC22
 1690 0150 18000000 		.word	.LC24
 1691 0154 0C000000 		.word	.LC23
 1692 0158 00000000 		.word	runningTime
 1693              	.LBE13:
 1694              		.cfi_endproc
 1695              	.LFE72:
 1697              		.global	__aeabi_dsub
 1698              		.global	__aeabi_dcmplt
 1699              		.global	__aeabi_dadd
 1700              		.global	__aeabi_dcmpgt
 1701              		.section	.text.tempCheck,"ax",%progbits
 1702              		.align	1
 1703              		.global	tempCheck
 1704              		.syntax unified
 1705              		.thumb
 1706              		.thumb_func
 1707              		.fpu softvfp
 1709              	tempCheck:
 1710              	.LFB75:
ARM GAS  /tmp/ccWcQ1w7.s 			page 39


 250:Src/core.c    **** 
 251:Src/core.c    **** int checkounter = 0;
 252:Src/core.c    **** void tempCheck() {
 1711              		.loc 1 252 18 is_stmt 1 view -0
 1712              		.cfi_startproc
 1713              		@ args = 0, pretend = 0, frame = 0
 1714              		@ frame_needed = 0, uses_anonymous_args = 0
 1715 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1716              	.LCFI13:
 1717              		.cfi_def_cfa_offset 24
 1718              		.cfi_offset 3, -24
 1719              		.cfi_offset 4, -20
 1720              		.cfi_offset 5, -16
 1721              		.cfi_offset 6, -12
 1722              		.cfi_offset 7, -8
 1723              		.cfi_offset 14, -4
 253:Src/core.c    ****     if(state.sw == SYS_ON)
 1724              		.loc 1 253 5 view .LVU412
 1725              		.loc 1 253 13 is_stmt 0 view .LVU413
 1726 0002 2B4B     		ldr	r3, .L147
 1727 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1728              		.loc 1 253 7 view .LVU414
 1729 0006 012C     		cmp	r4, #1
 1730 0008 30D0     		beq	.L145
 1731              	.L134:
 254:Src/core.c    ****         if(state.temp < state.tarTemp - 0.5)
 255:Src/core.c    ****             state.tempAchieveCounter++;
 256:Src/core.c    ****     if(state.sw == SYS_OFF)
 1732              		.loc 1 256 5 is_stmt 1 view .LVU415
 1733              		.loc 1 256 7 is_stmt 0 view .LVU416
 1734 000a B4B9     		cbnz	r4, .L136
 257:Src/core.c    ****         if(state.temp > state.tarTemp + 0.5)
 1735              		.loc 1 257 9 is_stmt 1 view .LVU417
 1736              		.loc 1 257 17 is_stmt 0 view .LVU418
 1737 000c 284D     		ldr	r5, .L147
 1738 000e A869     		ldr	r0, [r5, #24]	@ float
 1739 0010 FFF7FEFF 		bl	__aeabi_f2d
 1740              	.LVL141:
 1741 0014 0646     		mov	r6, r0
 1742 0016 0F46     		mov	r7, r1
 1743              		.loc 1 257 30 view .LVU419
 1744 0018 A868     		ldr	r0, [r5, #8]	@ float
 1745 001a FFF7FEFF 		bl	__aeabi_f2d
 1746              	.LVL142:
 1747              		.loc 1 257 39 view .LVU420
 1748 001e 0022     		movs	r2, #0
 1749 0020 244B     		ldr	r3, .L147+4
 1750 0022 FFF7FEFF 		bl	__aeabi_dadd
 1751              	.LVL143:
 1752 0026 0246     		mov	r2, r0
 1753 0028 0B46     		mov	r3, r1
 1754              		.loc 1 257 11 view .LVU421
 1755 002a 3046     		mov	r0, r6
 1756 002c 3946     		mov	r1, r7
 1757 002e FFF7FEFF 		bl	__aeabi_dcmpgt
 1758              	.LVL144:
 1759 0032 10B1     		cbz	r0, .L136
ARM GAS  /tmp/ccWcQ1w7.s 			page 40


 258:Src/core.c    ****             state.tempAchieveCounter++;
 1760              		.loc 1 258 13 is_stmt 1 view .LVU422
 1761              		.loc 1 258 18 is_stmt 0 view .LVU423
 1762 0034 6B6A     		ldr	r3, [r5, #36]
 1763              		.loc 1 258 37 view .LVU424
 1764 0036 0133     		adds	r3, r3, #1
 1765 0038 6B62     		str	r3, [r5, #36]
 1766              	.L136:
 259:Src/core.c    ****     if(checkounter >= 60) {
 1767              		.loc 1 259 5 is_stmt 1 view .LVU425
 1768              		.loc 1 259 20 is_stmt 0 view .LVU426
 1769 003a 1F4B     		ldr	r3, .L147+8
 1770 003c 1B68     		ldr	r3, [r3]
 1771              		.loc 1 259 7 view .LVU427
 1772 003e 3B2B     		cmp	r3, #59
 1773 0040 31DD     		ble	.L138
 260:Src/core.c    ****         if(state.tempAchieveCounter >= 45)
 1774              		.loc 1 260 9 is_stmt 1 view .LVU428
 1775              		.loc 1 260 17 is_stmt 0 view .LVU429
 1776 0042 1B4B     		ldr	r3, .L147
 1777 0044 5B6A     		ldr	r3, [r3, #36]
 1778              		.loc 1 260 11 view .LVU430
 1779 0046 2C2B     		cmp	r3, #44
 1780 0048 04DD     		ble	.L139
 261:Src/core.c    ****             if(state.sw == SYS_ON) state.sw = SYS_OFF;
 1781              		.loc 1 261 13 is_stmt 1 view .LVU431
 1782              		.loc 1 261 15 is_stmt 0 view .LVU432
 1783 004a 012C     		cmp	r4, #1
 1784 004c 27D0     		beq	.L146
 262:Src/core.c    ****             else state.sw = SYS_ON;
 1785              		.loc 1 262 18 is_stmt 1 view .LVU433
 1786              		.loc 1 262 27 is_stmt 0 view .LVU434
 1787 004e 184B     		ldr	r3, .L147
 1788 0050 0122     		movs	r2, #1
 1789 0052 1A70     		strb	r2, [r3]
 1790              	.L139:
 263:Src/core.c    ****         move(state.sw);
 1791              		.loc 1 263 9 is_stmt 1 view .LVU435
 1792 0054 164C     		ldr	r4, .L147
 1793 0056 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1794 0058 FFF7FEFF 		bl	move
 1795              	.LVL145:
 264:Src/core.c    ****         checkounter = 0;
 1796              		.loc 1 264 9 view .LVU436
 1797              		.loc 1 264 21 is_stmt 0 view .LVU437
 1798 005c 0023     		movs	r3, #0
 1799 005e 164A     		ldr	r2, .L147+8
 1800 0060 1360     		str	r3, [r2]
 265:Src/core.c    ****         lastAchievement = state.tempAchieveCounter;
 1801              		.loc 1 265 9 is_stmt 1 view .LVU438
 1802              		.loc 1 265 32 is_stmt 0 view .LVU439
 1803 0062 616A     		ldr	r1, [r4, #36]
 1804              		.loc 1 265 25 view .LVU440
 1805 0064 154A     		ldr	r2, .L147+12
 1806 0066 1160     		str	r1, [r2]
 266:Src/core.c    ****         state.tempAchieveCounter = 0;
 1807              		.loc 1 266 9 is_stmt 1 view .LVU441
ARM GAS  /tmp/ccWcQ1w7.s 			page 41


 1808              		.loc 1 266 34 is_stmt 0 view .LVU442
 1809 0068 6362     		str	r3, [r4, #36]
 1810              	.L133:
 267:Src/core.c    ****     }
 268:Src/core.c    ****     else checkounter++;
 269:Src/core.c    **** }
 1811              		.loc 1 269 1 view .LVU443
 1812 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1813              	.L145:
 254:Src/core.c    ****             state.tempAchieveCounter++;
 1814              		.loc 1 254 9 is_stmt 1 view .LVU444
 254:Src/core.c    ****             state.tempAchieveCounter++;
 1815              		.loc 1 254 17 is_stmt 0 view .LVU445
 1816 006c 1D46     		mov	r5, r3
 1817 006e 9869     		ldr	r0, [r3, #24]	@ float
 1818 0070 FFF7FEFF 		bl	__aeabi_f2d
 1819              	.LVL146:
 1820 0074 0646     		mov	r6, r0
 1821 0076 0F46     		mov	r7, r1
 254:Src/core.c    ****             state.tempAchieveCounter++;
 1822              		.loc 1 254 30 view .LVU446
 1823 0078 A868     		ldr	r0, [r5, #8]	@ float
 1824 007a FFF7FEFF 		bl	__aeabi_f2d
 1825              	.LVL147:
 254:Src/core.c    ****             state.tempAchieveCounter++;
 1826              		.loc 1 254 39 view .LVU447
 1827 007e 0022     		movs	r2, #0
 1828 0080 0C4B     		ldr	r3, .L147+4
 1829 0082 FFF7FEFF 		bl	__aeabi_dsub
 1830              	.LVL148:
 1831 0086 0246     		mov	r2, r0
 1832 0088 0B46     		mov	r3, r1
 254:Src/core.c    ****             state.tempAchieveCounter++;
 1833              		.loc 1 254 11 view .LVU448
 1834 008a 3046     		mov	r0, r6
 1835 008c 3946     		mov	r1, r7
 1836 008e FFF7FEFF 		bl	__aeabi_dcmplt
 1837              	.LVL149:
 1838 0092 0028     		cmp	r0, #0
 1839 0094 B9D0     		beq	.L134
 255:Src/core.c    ****     if(state.sw == SYS_OFF)
 1840              		.loc 1 255 13 is_stmt 1 view .LVU449
 255:Src/core.c    ****     if(state.sw == SYS_OFF)
 1841              		.loc 1 255 18 is_stmt 0 view .LVU450
 1842 0096 6B6A     		ldr	r3, [r5, #36]
 255:Src/core.c    ****     if(state.sw == SYS_OFF)
 1843              		.loc 1 255 37 view .LVU451
 1844 0098 0133     		adds	r3, r3, #1
 1845 009a 6B62     		str	r3, [r5, #36]
 1846 009c B5E7     		b	.L134
 1847              	.L146:
 261:Src/core.c    ****             else state.sw = SYS_ON;
 1848              		.loc 1 261 36 is_stmt 1 discriminator 1 view .LVU452
 261:Src/core.c    ****             else state.sw = SYS_ON;
 1849              		.loc 1 261 45 is_stmt 0 discriminator 1 view .LVU453
 1850 009e 044B     		ldr	r3, .L147
 1851 00a0 0022     		movs	r2, #0
ARM GAS  /tmp/ccWcQ1w7.s 			page 42


 1852 00a2 1A70     		strb	r2, [r3]
 1853 00a4 D6E7     		b	.L139
 1854              	.L138:
 268:Src/core.c    **** }
 1855              		.loc 1 268 10 is_stmt 1 view .LVU454
 268:Src/core.c    **** }
 1856              		.loc 1 268 21 is_stmt 0 view .LVU455
 1857 00a6 0133     		adds	r3, r3, #1
 1858 00a8 034A     		ldr	r2, .L147+8
 1859 00aa 1360     		str	r3, [r2]
 1860              		.loc 1 269 1 view .LVU456
 1861 00ac DDE7     		b	.L133
 1862              	.L148:
 1863 00ae 00BF     		.align	2
 1864              	.L147:
 1865 00b0 00000000 		.word	state
 1866 00b4 0000E03F 		.word	1071644672
 1867 00b8 00000000 		.word	.LANCHOR6
 1868 00bc 00000000 		.word	.LANCHOR5
 1869              		.cfi_endproc
 1870              	.LFE75:
 1872              		.section	.text.timeCheck,"ax",%progbits
 1873              		.align	1
 1874              		.global	timeCheck
 1875              		.syntax unified
 1876              		.thumb
 1877              		.thumb_func
 1878              		.fpu softvfp
 1880              	timeCheck:
 1881              	.LFB76:
 270:Src/core.c    **** 
 271:Src/core.c    **** void timeCheck() {
 1882              		.loc 1 271 18 is_stmt 1 view -0
 1883              		.cfi_startproc
 1884              		@ args = 0, pretend = 0, frame = 0
 1885              		@ frame_needed = 0, uses_anonymous_args = 0
 1886 0000 08B5     		push	{r3, lr}
 1887              	.LCFI14:
 1888              		.cfi_def_cfa_offset 8
 1889              		.cfi_offset 3, -8
 1890              		.cfi_offset 14, -4
 272:Src/core.c    ****     if(state.sw == SYS_ON){
 1891              		.loc 1 272 5 view .LVU458
 1892              		.loc 1 272 13 is_stmt 0 view .LVU459
 1893 0002 194B     		ldr	r3, .L155
 1894 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1895              		.loc 1 272 7 view .LVU460
 1896 0006 012B     		cmp	r3, #1
 1897 0008 11D0     		beq	.L153
 273:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 274:Src/core.c    ****             state.sw = SYS_OFF;
 275:Src/core.c    ****             move(state.sw);
 276:Src/core.c    ****         }
 277:Src/core.c    ****     }
 278:Src/core.c    ****     else {
 279:Src/core.c    ****         if(runningTime - state.shutDownTime >= state.tarTime[1]*60) {
 1898              		.loc 1 279 9 is_stmt 1 view .LVU461
ARM GAS  /tmp/ccWcQ1w7.s 			page 43


 1899              		.loc 1 279 31 is_stmt 0 view .LVU462
 1900 000a 174B     		ldr	r3, .L155
 1901 000c 1A6A     		ldr	r2, [r3, #32]
 1902              		.loc 1 279 24 view .LVU463
 1903 000e 1749     		ldr	r1, .L155+4
 1904 0010 D1E90001 		ldrd	r0, [r1]
 1905 0014 801A     		subs	r0, r0, r2
 1906 0016 61EBE271 		sbc	r1, r1, r2, asr #31
 1907              		.loc 1 279 61 view .LVU464
 1908 001a 1B69     		ldr	r3, [r3, #16]
 1909              		.loc 1 279 64 view .LVU465
 1910 001c C3EB0313 		rsb	r3, r3, r3, lsl #4
 1911 0020 9A00     		lsls	r2, r3, #2
 1912 0022 D317     		asrs	r3, r2, #31
 1913              		.loc 1 279 11 view .LVU466
 1914 0024 9942     		cmp	r1, r3
 1915 0026 08BF     		it	eq
 1916 0028 9042     		cmpeq	r0, r2
 1917 002a 17D2     		bcs	.L154
 1918              	.L149:
 280:Src/core.c    ****             state.sw = SYS_ON;
 281:Src/core.c    ****             move(state.sw);
 282:Src/core.c    ****         }
 283:Src/core.c    ****     }
 284:Src/core.c    **** 
 285:Src/core.c    **** }
 1919              		.loc 1 285 1 view .LVU467
 1920 002c 08BD     		pop	{r3, pc}
 1921              	.L153:
 273:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 1922              		.loc 1 273 9 is_stmt 1 view .LVU468
 273:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 1923              		.loc 1 273 31 is_stmt 0 view .LVU469
 1924 002e 0E4B     		ldr	r3, .L155
 1925 0030 DA69     		ldr	r2, [r3, #28]
 273:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 1926              		.loc 1 273 24 view .LVU470
 1927 0032 0E49     		ldr	r1, .L155+4
 1928 0034 D1E90001 		ldrd	r0, [r1]
 1929 0038 801A     		subs	r0, r0, r2
 1930 003a 61EBE271 		sbc	r1, r1, r2, asr #31
 273:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 1931              		.loc 1 273 58 view .LVU471
 1932 003e DB68     		ldr	r3, [r3, #12]
 273:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 1933              		.loc 1 273 61 view .LVU472
 1934 0040 C3EB0313 		rsb	r3, r3, r3, lsl #4
 1935 0044 9A00     		lsls	r2, r3, #2
 1936 0046 D317     		asrs	r3, r2, #31
 273:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 1937              		.loc 1 273 11 view .LVU473
 1938 0048 9942     		cmp	r1, r3
 1939 004a 08BF     		it	eq
 1940 004c 9042     		cmpeq	r0, r2
 1941 004e EDD3     		bcc	.L149
 274:Src/core.c    ****             move(state.sw);
 1942              		.loc 1 274 13 is_stmt 1 view .LVU474
ARM GAS  /tmp/ccWcQ1w7.s 			page 44


 274:Src/core.c    ****             move(state.sw);
 1943              		.loc 1 274 22 is_stmt 0 view .LVU475
 1944 0050 0020     		movs	r0, #0
 1945 0052 054B     		ldr	r3, .L155
 1946 0054 1870     		strb	r0, [r3]
 275:Src/core.c    ****         }
 1947              		.loc 1 275 13 is_stmt 1 view .LVU476
 1948 0056 FFF7FEFF 		bl	move
 1949              	.LVL150:
 1950 005a E7E7     		b	.L149
 1951              	.L154:
 280:Src/core.c    ****             state.sw = SYS_ON;
 1952              		.loc 1 280 13 view .LVU477
 280:Src/core.c    ****             state.sw = SYS_ON;
 1953              		.loc 1 280 22 is_stmt 0 view .LVU478
 1954 005c 0120     		movs	r0, #1
 1955 005e 024B     		ldr	r3, .L155
 1956 0060 1870     		strb	r0, [r3]
 281:Src/core.c    ****         }
 1957              		.loc 1 281 13 is_stmt 1 view .LVU479
 1958 0062 FFF7FEFF 		bl	move
 1959              	.LVL151:
 1960              		.loc 1 285 1 is_stmt 0 view .LVU480
 1961 0066 E1E7     		b	.L149
 1962              	.L156:
 1963              		.align	2
 1964              	.L155:
 1965 0068 00000000 		.word	state
 1966 006c 00000000 		.word	runningTime
 1967              		.cfi_endproc
 1968              	.LFE76:
 1970              		.global	checkounter
 1971              		.global	lastAchievement
 1972              		.comm	msg,120,4
 1973              		.global	Uart1_Rx_Cnt
 1974              		.comm	aRxBuffer,1,1
 1975              		.comm	RxBuffer,512,4
 1976              		.comm	state,40,4
 1977              		.global	servo2_down
 1978              		.global	servo2_up
 1979              		.global	servo1_down
 1980              		.global	servo1_up
 1981              		.section	.bss.Uart1_Rx_Cnt,"aw",%nobits
 1982              		.set	.LANCHOR4,. + 0
 1985              	Uart1_Rx_Cnt:
 1986 0000 00       		.space	1
 1987              		.section	.bss.checkounter,"aw",%nobits
 1988              		.align	2
 1989              		.set	.LANCHOR6,. + 0
 1992              	checkounter:
 1993 0000 00000000 		.space	4
 1994              		.section	.bss.lastAchievement,"aw",%nobits
 1995              		.align	2
 1996              		.set	.LANCHOR5,. + 0
 1999              	lastAchievement:
 2000 0000 00000000 		.space	4
 2001              		.section	.data.servo1_down,"aw"
ARM GAS  /tmp/ccWcQ1w7.s 			page 45


 2002              		.align	2
 2003              		.set	.LANCHOR1,. + 0
 2006              	servo1_down:
 2007 0000 14050000 		.word	1300
 2008              		.section	.data.servo1_up,"aw"
 2009              		.align	2
 2010              		.set	.LANCHOR3,. + 0
 2013              	servo1_up:
 2014 0000 6C070000 		.word	1900
 2015              		.section	.data.servo2_down,"aw"
 2016              		.align	2
 2017              		.set	.LANCHOR0,. + 0
 2020              	servo2_down:
 2021 0000 5A050000 		.word	1370
 2022              		.section	.data.servo2_up,"aw"
 2023              		.align	2
 2024              		.set	.LANCHOR2,. + 0
 2027              	servo2_up:
 2028 0000 9E070000 		.word	1950
 2029              		.text
 2030              	.Letext0:
 2031              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2032              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
 2033              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2034              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2035              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2036              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2037              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2038              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2039              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2040              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 2041              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 2042              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2043              		.file 14 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 2044              		.file 15 "/usr/include/newlib/sys/_types.h"
 2045              		.file 16 "/usr/include/newlib/sys/reent.h"
 2046              		.file 17 "/usr/include/newlib/sys/lock.h"
 2047              		.file 18 "Inc/adc.h"
 2048              		.file 19 "Inc/tim.h"
 2049              		.file 20 "Inc/usart.h"
 2050              		.file 21 "Inc/core.h"
 2051              		.file 22 "Inc/timer.h"
 2052              		.file 23 "/usr/include/newlib/stdio.h"
 2053              		.file 24 "/usr/include/newlib/string.h"
 2054              		.file 25 "<built-in>"
 2055              		.file 26 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc_ex.h"
ARM GAS  /tmp/ccWcQ1w7.s 			page 46


DEFINED SYMBOLS
                            *ABS*:0000000000000000 core.c
     /tmp/ccWcQ1w7.s:16     .text.init_system:0000000000000000 $t
     /tmp/ccWcQ1w7.s:24     .text.init_system:0000000000000000 init_system
     /tmp/ccWcQ1w7.s:242    .text.init_system:0000000000000120 $d
                            *COM*:0000000000000028 state
                            *COM*:0000000000000001 aRxBuffer
     /tmp/ccWcQ1w7.s:260    .text.string2int:0000000000000000 $t
     /tmp/ccWcQ1w7.s:267    .text.string2int:0000000000000000 string2int
     /tmp/ccWcQ1w7.s:386    .rodata.bluetooth_decode.str1.4:0000000000000000 $d
     /tmp/ccWcQ1w7.s:395    .text.bluetooth_decode:0000000000000000 $t
     /tmp/ccWcQ1w7.s:402    .text.bluetooth_decode:0000000000000000 bluetooth_decode
     /tmp/ccWcQ1w7.s:508    .text.bluetooth_decode:0000000000000060 $d
     /tmp/ccWcQ1w7.s:512    .text.bluetooth_decode:0000000000000064 $t
     /tmp/ccWcQ1w7.s:766    .text.bluetooth_decode:0000000000000160 $d
                            *COM*:0000000000000200 RxBuffer
     /tmp/ccWcQ1w7.s:775    .text.changeLight:0000000000000000 $t
     /tmp/ccWcQ1w7.s:782    .text.changeLight:0000000000000000 changeLight
     /tmp/ccWcQ1w7.s:861    .text.changeLight:0000000000000054 $d
     /tmp/ccWcQ1w7.s:866    .rodata.send_state.str1.4:0000000000000000 $d
     /tmp/ccWcQ1w7.s:927    .text.send_state:0000000000000000 $t
     /tmp/ccWcQ1w7.s:934    .text.send_state:0000000000000000 send_state
     /tmp/ccWcQ1w7.s:1216   .text.send_state:0000000000000158 $d
     /tmp/ccWcQ1w7.s:1245   .text.move:0000000000000000 $t
     /tmp/ccWcQ1w7.s:1252   .text.move:0000000000000000 move
     /tmp/ccWcQ1w7.s:1387   .text.move:00000000000000ac $d
     /tmp/ccWcQ1w7.s:1401   .rodata.update_info.str1.4:0000000000000000 $d
     /tmp/ccWcQ1w7.s:1419   .text.update_info:0000000000000000 $t
     /tmp/ccWcQ1w7.s:1426   .text.update_info:0000000000000000 update_info
     /tmp/ccWcQ1w7.s:1678   .text.update_info:0000000000000120 $d
                            *COM*:0000000000000078 msg
     /tmp/ccWcQ1w7.s:1702   .text.tempCheck:0000000000000000 $t
     /tmp/ccWcQ1w7.s:1709   .text.tempCheck:0000000000000000 tempCheck
     /tmp/ccWcQ1w7.s:1865   .text.tempCheck:00000000000000b0 $d
     /tmp/ccWcQ1w7.s:1873   .text.timeCheck:0000000000000000 $t
     /tmp/ccWcQ1w7.s:1880   .text.timeCheck:0000000000000000 timeCheck
     /tmp/ccWcQ1w7.s:1965   .text.timeCheck:0000000000000068 $d
     /tmp/ccWcQ1w7.s:1992   .bss.checkounter:0000000000000000 checkounter
     /tmp/ccWcQ1w7.s:1999   .bss.lastAchievement:0000000000000000 lastAchievement
     /tmp/ccWcQ1w7.s:1985   .bss.Uart1_Rx_Cnt:0000000000000000 Uart1_Rx_Cnt
     /tmp/ccWcQ1w7.s:2020   .data.servo2_down:0000000000000000 servo2_down
     /tmp/ccWcQ1w7.s:2027   .data.servo2_up:0000000000000000 servo2_up
     /tmp/ccWcQ1w7.s:2006   .data.servo1_down:0000000000000000 servo1_down
     /tmp/ccWcQ1w7.s:2013   .data.servo1_up:0000000000000000 servo1_up
     /tmp/ccWcQ1w7.s:1986   .bss.Uart1_Rx_Cnt:0000000000000000 $d
     /tmp/ccWcQ1w7.s:1988   .bss.checkounter:0000000000000000 $d
     /tmp/ccWcQ1w7.s:1995   .bss.lastAchievement:0000000000000000 $d
     /tmp/ccWcQ1w7.s:2002   .data.servo1_down:0000000000000000 $d
     /tmp/ccWcQ1w7.s:2009   .data.servo1_up:0000000000000000 $d
     /tmp/ccWcQ1w7.s:2016   .data.servo2_down:0000000000000000 $d
     /tmp/ccWcQ1w7.s:2023   .data.servo2_up:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
timerInit
HAL_ADCEx_Calibration_Start
HAL_Delay
ARM GAS  /tmp/ccWcQ1w7.s 			page 47


HAL_ADC_Start
HAL_UART_Receive_IT
HAL_TIM_PWM_Start
HAL_GPIO_WritePin
hadc1
huart1
htim1
htim2
__aeabi_i2f
__aeabi_f2d
printf
memset
strcat
strlen
putchar
runningTime
__aeabi_ui2f
__aeabi_fmul
HAL_ADC_GetValue
__aeabi_dsub
__aeabi_dcmplt
__aeabi_dadd
__aeabi_dcmpgt
