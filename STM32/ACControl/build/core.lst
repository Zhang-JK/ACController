ARM GAS  /tmp/ccZUXJMg.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"core.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.init_system,"ax",%progbits
  16              		.align	1
  17              		.global	init_system
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	init_system:
  25              	.LFB68:
  26              		.file 1 "Src/core.c"
   1:Src/core.c    **** #include "core.h"
   2:Src/core.c    **** #include <string.h>
   3:Src/core.c    **** #include "timer.h"
   4:Src/core.c    **** #include <stdio.h>
   5:Src/core.c    **** 
   6:Src/core.c    **** // int _write(int fd, char *ptr, int len) {
   7:Src/core.c    **** //   HAL_UART_Transmit(&huart1, (uint8_t *)ptr, len, 0xFFFF);
   8:Src/core.c    **** //   return len;
   9:Src/core.c    **** // }
  10:Src/core.c    **** 
  11:Src/core.c    **** int servo1_up = 1600;
  12:Src/core.c    **** int servo1_down = 950;
  13:Src/core.c    **** int servo2_up = 1600;
  14:Src/core.c    **** int servo2_down = 950;
  15:Src/core.c    **** 
  16:Src/core.c    **** struct State state;
  17:Src/core.c    **** 
  18:Src/core.c    **** char RxBuffer[RXBUFFERSIZE]; //接收数据
  19:Src/core.c    **** uint8_t aRxBuffer;           //接收中断缓冲
  20:Src/core.c    **** uint8_t Uart1_Rx_Cnt = 0;    //接收缓冲计数
  21:Src/core.c    **** 
  22:Src/core.c    **** int init_system() {
  27              		.loc 1 22 19 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 70B5     		push	{r4, r5, r6, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
ARM GAS  /tmp/ccZUXJMg.s 			page 2


  37              		.cfi_offset 14, -4
  23:Src/core.c    ****     state.sw = HAL_GPIO_ReadPin(MAIN_SWITCH_GPIO_Port, MAIN_SWITCH_Pin) == GPIO_PIN_RESET ? SYS_ON 
  38              		.loc 1 23 5 view .LVU1
  39              		.loc 1 23 16 is_stmt 0 view .LVU2
  40 0002 474D     		ldr	r5, .L9
  41 0004 0121     		movs	r1, #1
  42 0006 2846     		mov	r0, r5
  43 0008 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  44              	.LVL0:
  45              		.loc 1 23 100 view .LVU3
  46 000c B0FA80F0 		clz	r0, r0
  47 0010 4009     		lsrs	r0, r0, #5
  48              		.loc 1 23 14 view .LVU4
  49 0012 444C     		ldr	r4, .L9+4
  50 0014 2070     		strb	r0, [r4]
  24:Src/core.c    ****     state.re_sw = HAL_GPIO_ReadPin(REMOTE_SWITCH_GPIO_Port, REMOTE_SWITCH_Pin) == GPIO_PIN_RESET ? 
  51              		.loc 1 24 5 is_stmt 1 view .LVU5
  52              		.loc 1 24 19 is_stmt 0 view .LVU6
  53 0016 0221     		movs	r1, #2
  54 0018 2846     		mov	r0, r5
  55 001a FFF7FEFF 		bl	HAL_GPIO_ReadPin
  56              	.LVL1:
  57              		.loc 1 24 110 view .LVU7
  58 001e 0030     		adds	r0, r0, #0
  59 0020 18BF     		it	ne
  60 0022 0120     		movne	r0, #1
  61              		.loc 1 24 17 view .LVU8
  62 0024 E070     		strb	r0, [r4, #3]
  25:Src/core.c    ****     state.mode = ONOFF_MODE;
  63              		.loc 1 25 5 is_stmt 1 view .LVU9
  64              		.loc 1 25 16 is_stmt 0 view .LVU10
  65 0026 0025     		movs	r5, #0
  66 0028 2571     		strb	r5, [r4, #4]
  26:Src/core.c    ****     state.lightOff = 0;
  67              		.loc 1 26 5 is_stmt 1 view .LVU11
  68              		.loc 1 26 20 is_stmt 0 view .LVU12
  69 002a 6561     		str	r5, [r4, #20]
  27:Src/core.c    ****     state.tarTemp = 24;
  70              		.loc 1 27 5 is_stmt 1 view .LVU13
  71              		.loc 1 27 19 is_stmt 0 view .LVU14
  72 002c 3E4B     		ldr	r3, .L9+8
  73 002e A360     		str	r3, [r4, #8]	@ float
  28:Src/core.c    ****     state.tarTime[0] = 30;
  74              		.loc 1 28 5 is_stmt 1 view .LVU15
  75              		.loc 1 28 22 is_stmt 0 view .LVU16
  76 0030 1E23     		movs	r3, #30
  77 0032 E360     		str	r3, [r4, #12]
  29:Src/core.c    ****     state.tarTime[1] = 30;
  78              		.loc 1 29 5 is_stmt 1 view .LVU17
  79              		.loc 1 29 22 is_stmt 0 view .LVU18
  80 0034 2361     		str	r3, [r4, #16]
  30:Src/core.c    ****     state.startTime = 0;
  81              		.loc 1 30 5 is_stmt 1 view .LVU19
  82              		.loc 1 30 21 is_stmt 0 view .LVU20
  83 0036 E561     		str	r5, [r4, #28]
  31:Src/core.c    ****     state.shutDownTime = 0;
  84              		.loc 1 31 5 is_stmt 1 view .LVU21
ARM GAS  /tmp/ccZUXJMg.s 			page 3


  85              		.loc 1 31 24 is_stmt 0 view .LVU22
  86 0038 2562     		str	r5, [r4, #32]
  32:Src/core.c    ****     state.tempAchieveCounter = 0;
  87              		.loc 1 32 5 is_stmt 1 view .LVU23
  88              		.loc 1 32 30 is_stmt 0 view .LVU24
  89 003a 6562     		str	r5, [r4, #36]
  33:Src/core.c    **** 
  34:Src/core.c    ****     // usDelayInit();
  35:Src/core.c    ****     timerInit();
  90              		.loc 1 35 5 is_stmt 1 view .LVU25
  91 003c FFF7FEFF 		bl	timerInit
  92              	.LVL2:
  36:Src/core.c    ****     HAL_ADCEx_Calibration_Start(&hadc1);
  93              		.loc 1 36 5 view .LVU26
  94 0040 3A4E     		ldr	r6, .L9+12
  95 0042 3046     		mov	r0, r6
  96 0044 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
  97              	.LVL3:
  37:Src/core.c    ****     HAL_Delay(500);
  98              		.loc 1 37 5 view .LVU27
  99 0048 4FF4FA70 		mov	r0, #500
 100 004c FFF7FEFF 		bl	HAL_Delay
 101              	.LVL4:
  38:Src/core.c    **** 
  39:Src/core.c    ****     HAL_ADC_Start(&hadc1);
 102              		.loc 1 39 5 view .LVU28
 103 0050 3046     		mov	r0, r6
 104 0052 FFF7FEFF 		bl	HAL_ADC_Start
 105              	.LVL5:
  40:Src/core.c    ****     HAL_UART_Receive_IT(&huart1, (uint8_t *)&aRxBuffer, 1);
 106              		.loc 1 40 5 view .LVU29
 107 0056 0122     		movs	r2, #1
 108 0058 3549     		ldr	r1, .L9+16
 109 005a 3648     		ldr	r0, .L9+20
 110 005c FFF7FEFF 		bl	HAL_UART_Receive_IT
 111              	.LVL6:
  41:Src/core.c    ****     HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 112              		.loc 1 41 5 view .LVU30
 113 0060 2946     		mov	r1, r5
 114 0062 3548     		ldr	r0, .L9+24
 115 0064 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 116              	.LVL7:
  42:Src/core.c    ****     HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 117              		.loc 1 42 5 view .LVU31
 118 0068 2946     		mov	r1, r5
 119 006a 3448     		ldr	r0, .L9+28
 120 006c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 121              	.LVL8:
  43:Src/core.c    ****     if(state.sw == SYS_OFF) {
 122              		.loc 1 43 5 view .LVU32
 123              		.loc 1 43 13 is_stmt 0 view .LVU33
 124 0070 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 125              		.loc 1 43 7 view .LVU34
 126 0072 D3B9     		cbnz	r3, .L2
  44:Src/core.c    ****         __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, servo2_down);
 127              		.loc 1 44 9 is_stmt 1 view .LVU35
 128 0074 314B     		ldr	r3, .L9+28
ARM GAS  /tmp/ccZUXJMg.s 			page 4


 129 0076 1B68     		ldr	r3, [r3]
 130 0078 314A     		ldr	r2, .L9+32
 131 007a 1268     		ldr	r2, [r2]
 132 007c 5A63     		str	r2, [r3, #52]
  45:Src/core.c    ****         __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_1, servo1_down);
 133              		.loc 1 45 9 view .LVU36
 134 007e 2E4B     		ldr	r3, .L9+24
 135 0080 1B68     		ldr	r3, [r3]
 136 0082 304A     		ldr	r2, .L9+36
 137 0084 1268     		ldr	r2, [r2]
 138 0086 5A63     		str	r2, [r3, #52]
  46:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_SET);
 139              		.loc 1 46 9 view .LVU37
 140 0088 0122     		movs	r2, #1
 141 008a 4FF40051 		mov	r1, #8192
 142 008e 2E48     		ldr	r0, .L9+40
 143 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 144              	.LVL9:
  47:Src/core.c    **** 
  48:Src/core.c    ****         while(HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_SET) {
 145              		.loc 1 48 9 view .LVU38
 146              	.L3:
 147              		.loc 1 48 15 is_stmt 0 view .LVU39
 148 0094 4FF40061 		mov	r1, #2048
 149 0098 2148     		ldr	r0, .L9
 150 009a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 151              	.LVL10:
 152              		.loc 1 48 14 view .LVU40
 153 009e 0128     		cmp	r0, #1
 154 00a0 1DD1     		bne	.L5
  49:Src/core.c    ****             HAL_Delay(100);
 155              		.loc 1 49 13 is_stmt 1 view .LVU41
 156 00a2 6420     		movs	r0, #100
 157 00a4 FFF7FEFF 		bl	HAL_Delay
 158              	.LVL11:
 159 00a8 F4E7     		b	.L3
 160              	.L2:
  50:Src/core.c    ****         }
  51:Src/core.c    ****     }
  52:Src/core.c    ****     else {
  53:Src/core.c    ****         __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, servo2_up);
 161              		.loc 1 53 9 view .LVU42
 162 00aa 244B     		ldr	r3, .L9+28
 163 00ac 1B68     		ldr	r3, [r3]
 164 00ae 274A     		ldr	r2, .L9+44
 165 00b0 1268     		ldr	r2, [r2]
 166 00b2 5A63     		str	r2, [r3, #52]
  54:Src/core.c    ****         __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_1, servo1_up);
 167              		.loc 1 54 9 view .LVU43
 168 00b4 204B     		ldr	r3, .L9+24
 169 00b6 1B68     		ldr	r3, [r3]
 170 00b8 254A     		ldr	r2, .L9+48
 171 00ba 1268     		ldr	r2, [r2]
 172 00bc 5A63     		str	r2, [r3, #52]
  55:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_RESET);
 173              		.loc 1 55 9 view .LVU44
 174 00be 0022     		movs	r2, #0
ARM GAS  /tmp/ccZUXJMg.s 			page 5


 175 00c0 4FF40051 		mov	r1, #8192
 176 00c4 2048     		ldr	r0, .L9+40
 177 00c6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 178              	.LVL12:
  56:Src/core.c    **** 
  57:Src/core.c    ****         while(HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET) {
 179              		.loc 1 57 9 view .LVU45
 180              	.L6:
 181              		.loc 1 57 15 is_stmt 0 view .LVU46
 182 00ca 4FF40061 		mov	r1, #2048
 183 00ce 1448     		ldr	r0, .L9
 184 00d0 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 185              	.LVL13:
 186              		.loc 1 57 14 view .LVU47
 187 00d4 18B9     		cbnz	r0, .L5
  58:Src/core.c    ****             HAL_Delay(100);
 188              		.loc 1 58 13 is_stmt 1 view .LVU48
 189 00d6 6420     		movs	r0, #100
 190 00d8 FFF7FEFF 		bl	HAL_Delay
 191              	.LVL14:
 192 00dc F5E7     		b	.L6
 193              	.L5:
  59:Src/core.c    ****         }
  60:Src/core.c    ****     }
  61:Src/core.c    **** 
  62:Src/core.c    ****     HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, state.mode == ONOFF_MODE ? GPIO_PIN_RESET : GPIO_PI
 194              		.loc 1 62 5 view .LVU49
 195              		.loc 1 62 54 is_stmt 0 view .LVU50
 196 00de 114D     		ldr	r5, .L9+4
 197 00e0 2A79     		ldrb	r2, [r5, #4]	@ zero_extendqisi2
 198              		.loc 1 62 5 view .LVU51
 199 00e2 1C4C     		ldr	r4, .L9+52
 200 00e4 0032     		adds	r2, r2, #0
 201 00e6 18BF     		it	ne
 202 00e8 0122     		movne	r2, #1
 203 00ea 0821     		movs	r1, #8
 204 00ec 2046     		mov	r0, r4
 205 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 206              	.LVL15:
  63:Src/core.c    ****     HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, state.mode == TIME_MODE  ? GPIO_PIN_RESET : GPIO_PI
 207              		.loc 1 63 5 is_stmt 1 view .LVU52
 208              		.loc 1 63 54 is_stmt 0 view .LVU53
 209 00f2 2A79     		ldrb	r2, [r5, #4]	@ zero_extendqisi2
 210              		.loc 1 63 5 view .LVU54
 211 00f4 12F1FF32 		adds	r2, r2, #-1
 212 00f8 18BF     		it	ne
 213 00fa 0122     		movne	r2, #1
 214 00fc 1021     		movs	r1, #16
 215 00fe 2046     		mov	r0, r4
 216 0100 FFF7FEFF 		bl	HAL_GPIO_WritePin
 217              	.LVL16:
  64:Src/core.c    ****     HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, state.mode == TEMP_MODE  ? GPIO_PIN_RESET : GPIO_PI
 218              		.loc 1 64 5 is_stmt 1 view .LVU55
 219              		.loc 1 64 54 is_stmt 0 view .LVU56
 220 0104 2A79     		ldrb	r2, [r5, #4]	@ zero_extendqisi2
 221              		.loc 1 64 5 view .LVU57
 222 0106 023A     		subs	r2, r2, #2
ARM GAS  /tmp/ccZUXJMg.s 			page 6


 223 0108 18BF     		it	ne
 224 010a 0122     		movne	r2, #1
 225 010c 2021     		movs	r1, #32
 226 010e 2046     		mov	r0, r4
 227 0110 FFF7FEFF 		bl	HAL_GPIO_WritePin
 228              	.LVL17:
  65:Src/core.c    **** 
  66:Src/core.c    ****     HAL_Delay(500);
 229              		.loc 1 66 5 is_stmt 1 view .LVU58
 230 0114 4FF4FA70 		mov	r0, #500
 231 0118 FFF7FEFF 		bl	HAL_Delay
 232              	.LVL18:
  67:Src/core.c    **** 
  68:Src/core.c    ****     return 1;    
 233              		.loc 1 68 5 view .LVU59
  69:Src/core.c    **** }
 234              		.loc 1 69 1 is_stmt 0 view .LVU60
 235 011c 0120     		movs	r0, #1
 236 011e 70BD     		pop	{r4, r5, r6, pc}
 237              	.L10:
 238              		.align	2
 239              	.L9:
 240 0120 000C0140 		.word	1073810432
 241 0124 00000000 		.word	state
 242 0128 0000C041 		.word	1103101952
 243 012c 00000000 		.word	hadc1
 244 0130 00000000 		.word	aRxBuffer
 245 0134 00000000 		.word	huart1
 246 0138 00000000 		.word	htim1
 247 013c 00000000 		.word	htim2
 248 0140 00000000 		.word	.LANCHOR0
 249 0144 00000000 		.word	.LANCHOR1
 250 0148 00100140 		.word	1073811456
 251 014c 00000000 		.word	.LANCHOR2
 252 0150 00000000 		.word	.LANCHOR3
 253 0154 00080140 		.word	1073809408
 254              		.cfi_endproc
 255              	.LFE68:
 257              		.section	.text.string2int,"ax",%progbits
 258              		.align	1
 259              		.global	string2int
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu softvfp
 265              	string2int:
 266              	.LVL19:
 267              	.LFB69:
  70:Src/core.c    **** 
  71:Src/core.c    **** int string2int(char* array, int start, int end) {
 268              		.loc 1 71 49 is_stmt 1 view -0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
  72:Src/core.c    **** 	if(start > end) return 0;
 273              		.loc 1 72 2 view .LVU62
ARM GAS  /tmp/ccZUXJMg.s 			page 7


 274              		.loc 1 72 4 is_stmt 0 view .LVU63
 275 0000 9142     		cmp	r1, r2
 276 0002 12DC     		bgt	.L17
  71:Src/core.c    **** 	if(start > end) return 0;
 277              		.loc 1 71 49 view .LVU64
 278 0004 F0B4     		push	{r4, r5, r6, r7}
 279              	.LCFI1:
 280              		.cfi_def_cfa_offset 16
 281              		.cfi_offset 4, -16
 282              		.cfi_offset 5, -12
 283              		.cfi_offset 6, -8
 284              		.cfi_offset 7, -4
 285 0006 0746     		mov	r7, r0
 286              	.LBB2:
  73:Src/core.c    ****     int result = 0;
  74:Src/core.c    ****     for(int i = end; i >= start; i--) {
 287              		.loc 1 74 13 view .LVU65
 288 0008 1646     		mov	r6, r2
 289              	.LBE2:
  73:Src/core.c    ****     int result = 0;
 290              		.loc 1 73 9 view .LVU66
 291 000a 0020     		movs	r0, #0
 292              	.LVL20:
  73:Src/core.c    ****     int result = 0;
 293              		.loc 1 73 9 view .LVU67
 294 000c 01E0     		b	.L13
 295              	.LVL21:
 296              	.L23:
 297              	.LBB6:
 298              	.LBB3:
  75:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
  76:Src/core.c    ****         for(int j = end - i; j > 0; j--) num *= 10;
  77:Src/core.c    **** 		// printf("%d\n", num);
  78:Src/core.c    ****         result += num;
 299              		.loc 1 78 9 is_stmt 1 discriminator 2 view .LVU68
 300              		.loc 1 78 16 is_stmt 0 discriminator 2 view .LVU69
 301 000e 1844     		add	r0, r0, r3
 302              	.LVL22:
 303              		.loc 1 78 16 discriminator 2 view .LVU70
 304              	.LBE3:
  74:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 305              		.loc 1 74 35 discriminator 2 view .LVU71
 306 0010 013E     		subs	r6, r6, #1
 307              	.LVL23:
 308              	.L13:
  74:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 309              		.loc 1 74 5 discriminator 1 view .LVU72
 310 0012 8E42     		cmp	r6, r1
 311 0014 0BDB     		blt	.L22
 312              	.LBB5:
  75:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 313              		.loc 1 75 9 is_stmt 1 view .LVU73
  75:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 314              		.loc 1 75 30 is_stmt 0 view .LVU74
 315 0016 BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
  75:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 316              		.loc 1 75 13 view .LVU75
ARM GAS  /tmp/ccZUXJMg.s 			page 8


 317 0018 303B     		subs	r3, r3, #48
 318              	.LVL24:
  76:Src/core.c    **** 		// printf("%d\n", num);
 319              		.loc 1 76 9 is_stmt 1 view .LVU76
 320              	.LBB4:
  76:Src/core.c    **** 		// printf("%d\n", num);
 321              		.loc 1 76 13 view .LVU77
  76:Src/core.c    **** 		// printf("%d\n", num);
 322              		.loc 1 76 17 is_stmt 0 view .LVU78
 323 001a 941B     		subs	r4, r2, r6
 324              	.LVL25:
 325              	.L14:
  76:Src/core.c    **** 		// printf("%d\n", num);
 326              		.loc 1 76 9 discriminator 1 view .LVU79
 327 001c 002C     		cmp	r4, #0
 328 001e F6DD     		ble	.L23
  76:Src/core.c    **** 		// printf("%d\n", num);
 329              		.loc 1 76 42 is_stmt 1 discriminator 3 view .LVU80
  76:Src/core.c    **** 		// printf("%d\n", num);
 330              		.loc 1 76 46 is_stmt 0 discriminator 3 view .LVU81
 331 0020 03EB8305 		add	r5, r3, r3, lsl #2
 332 0024 6B00     		lsls	r3, r5, #1
 333              	.LVL26:
  76:Src/core.c    **** 		// printf("%d\n", num);
 334              		.loc 1 76 38 discriminator 3 view .LVU82
 335 0026 013C     		subs	r4, r4, #1
 336              	.LVL27:
  76:Src/core.c    **** 		// printf("%d\n", num);
 337              		.loc 1 76 38 discriminator 3 view .LVU83
 338 0028 F8E7     		b	.L14
 339              	.LVL28:
 340              	.L17:
 341              	.LCFI2:
 342              		.cfi_def_cfa_offset 0
 343              		.cfi_restore 4
 344              		.cfi_restore 5
 345              		.cfi_restore 6
 346              		.cfi_restore 7
  76:Src/core.c    **** 		// printf("%d\n", num);
 347              		.loc 1 76 38 discriminator 3 view .LVU84
 348              	.LBE4:
 349              	.LBE5:
 350              	.LBE6:
  72:Src/core.c    ****     int result = 0;
 351              		.loc 1 72 25 view .LVU85
 352 002a 0020     		movs	r0, #0
 353              	.LVL29:
  79:Src/core.c    ****     }
  80:Src/core.c    ****     return result;
  81:Src/core.c    **** }
 354              		.loc 1 81 1 view .LVU86
 355 002c 7047     		bx	lr
 356              	.LVL30:
 357              	.L22:
 358              	.LCFI3:
 359              		.cfi_def_cfa_offset 16
 360              		.cfi_offset 4, -16
ARM GAS  /tmp/ccZUXJMg.s 			page 9


 361              		.cfi_offset 5, -12
 362              		.cfi_offset 6, -8
 363              		.cfi_offset 7, -4
 364              		.loc 1 81 1 view .LVU87
 365 002e F0BC     		pop	{r4, r5, r6, r7}
 366              	.LCFI4:
 367              		.cfi_restore 7
 368              		.cfi_restore 6
 369              		.cfi_restore 5
 370              		.cfi_restore 4
 371              		.cfi_def_cfa_offset 0
 372              	.LVL31:
 373              		.loc 1 81 1 view .LVU88
 374 0030 7047     		bx	lr
 375              		.cfi_endproc
 376              	.LFE69:
 378              		.global	__aeabi_i2f
 379              		.global	__aeabi_f2d
 380              		.section	.text.bluetooth_decode,"ax",%progbits
 381              		.align	1
 382              		.global	bluetooth_decode
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 386              		.fpu softvfp
 388              	bluetooth_decode:
 389              	.LVL32:
 390              	.LFB70:
  82:Src/core.c    **** 
  83:Src/core.c    **** void bluetooth_decode(char* msg) {
 391              		.loc 1 83 34 is_stmt 1 view -0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              		.loc 1 83 34 is_stmt 0 view .LVU90
 396 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 397              	.LCFI5:
 398              		.cfi_def_cfa_offset 24
 399              		.cfi_offset 3, -24
 400              		.cfi_offset 4, -20
 401              		.cfi_offset 5, -16
 402              		.cfi_offset 6, -12
 403              		.cfi_offset 7, -8
 404              		.cfi_offset 14, -4
  84:Src/core.c    ****     int startInd = -1, endInd = -1;
 405              		.loc 1 84 5 is_stmt 1 view .LVU91
 406              	.LVL33:
  85:Src/core.c    ****     int count = 0;
 407              		.loc 1 85 5 view .LVU92
  86:Src/core.c    ****     while((startInd == -1 || endInd == -1) && count < Uart1_Rx_Cnt) {
 408              		.loc 1 86 5 view .LVU93
  85:Src/core.c    ****     int count = 0;
 409              		.loc 1 85 9 is_stmt 0 view .LVU94
 410 0002 0023     		movs	r3, #0
  84:Src/core.c    ****     int startInd = -1, endInd = -1;
 411              		.loc 1 84 24 view .LVU95
 412 0004 4FF0FF34 		mov	r4, #-1
ARM GAS  /tmp/ccZUXJMg.s 			page 10


  84:Src/core.c    ****     int startInd = -1, endInd = -1;
 413              		.loc 1 84 9 view .LVU96
 414 0008 2146     		mov	r1, r4
 415              		.loc 1 86 10 view .LVU97
 416 000a 04E0     		b	.L25
 417              	.LVL34:
 418              	.L52:
  87:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 419              		.loc 1 87 29 is_stmt 1 discriminator 1 view .LVU98
 420              		.loc 1 87 40 is_stmt 0 discriminator 1 view .LVU99
 421 000c 544A     		ldr	r2, .L58
 422 000e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 423              		.loc 1 87 31 discriminator 1 view .LVU100
 424 0010 262A     		cmp	r2, #38
 425 0012 13D0     		beq	.L51
 426              	.LVL35:
 427              	.L27:
  88:Src/core.c    ****         else {if(RxBuffer[count] == '.') endInd = count;}
  89:Src/core.c    ****         count++;
 428              		.loc 1 89 9 is_stmt 1 view .LVU101
 429              		.loc 1 89 14 is_stmt 0 view .LVU102
 430 0014 0133     		adds	r3, r3, #1
 431              	.LVL36:
 432              	.L25:
  86:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 433              		.loc 1 86 10 view .LVU103
 434 0016 B1F1FF3F 		cmp	r1, #-1
 435 001a 02D0     		beq	.L28
  86:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 436              		.loc 1 86 27 discriminator 2 view .LVU104
 437 001c B4F1FF3F 		cmp	r4, #-1
 438 0020 0ED1     		bne	.L29
 439              	.L28:
  86:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 440              		.loc 1 86 53 discriminator 3 view .LVU105
 441 0022 504A     		ldr	r2, .L58+4
 442 0024 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
  86:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 443              		.loc 1 86 44 discriminator 3 view .LVU106
 444 0026 9A42     		cmp	r2, r3
 445 0028 0ADD     		ble	.L29
  87:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 446              		.loc 1 87 9 is_stmt 1 view .LVU107
  87:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 447              		.loc 1 87 11 is_stmt 0 view .LVU108
 448 002a B1F1FF3F 		cmp	r1, #-1
 449 002e EDD0     		beq	.L52
  88:Src/core.c    ****         else {if(RxBuffer[count] == '.') endInd = count;}
 450              		.loc 1 88 15 is_stmt 1 view .LVU109
  88:Src/core.c    ****         else {if(RxBuffer[count] == '.') endInd = count;}
 451              		.loc 1 88 26 is_stmt 0 view .LVU110
 452 0030 4B4A     		ldr	r2, .L58
 453 0032 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
  88:Src/core.c    ****         else {if(RxBuffer[count] == '.') endInd = count;}
 454              		.loc 1 88 17 view .LVU111
 455 0034 2E2A     		cmp	r2, #46
 456 0036 EDD1     		bne	.L27
ARM GAS  /tmp/ccZUXJMg.s 			page 11


  88:Src/core.c    ****         else {if(RxBuffer[count] == '.') endInd = count;}
 457              		.loc 1 88 49 view .LVU112
 458 0038 1C46     		mov	r4, r3
 459              	.LVL37:
  88:Src/core.c    ****         else {if(RxBuffer[count] == '.') endInd = count;}
 460              		.loc 1 88 49 view .LVU113
 461 003a EBE7     		b	.L27
 462              	.LVL38:
 463              	.L51:
  87:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 464              		.loc 1 87 65 view .LVU114
 465 003c 1946     		mov	r1, r3
 466              	.LVL39:
  87:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 467              		.loc 1 87 65 view .LVU115
 468 003e E9E7     		b	.L27
 469              	.LVL40:
 470              	.L29:
  90:Src/core.c    ****     }
  91:Src/core.c    **** 
  92:Src/core.c    ****     if(startInd == -1 || endInd == -1) return ;
 471              		.loc 1 92 5 is_stmt 1 view .LVU116
 472              		.loc 1 92 7 is_stmt 0 view .LVU117
 473 0040 B1F1FF3F 		cmp	r1, #-1
 474 0044 00F08A80 		beq	.L24
 475              		.loc 1 92 23 discriminator 2 view .LVU118
 476 0048 B4F1FF3F 		cmp	r4, #-1
 477 004c 00F08680 		beq	.L24
 478              	.LBB7:
  93:Src/core.c    ****     else {
  94:Src/core.c    ****         int middleInd = 0;
 479              		.loc 1 94 9 is_stmt 1 view .LVU119
 480              	.LVL41:
  95:Src/core.c    ****         int input_temp = 0;
 481              		.loc 1 95 9 view .LVU120
  96:Src/core.c    ****         switch(RxBuffer[startInd+1]) {
 482              		.loc 1 96 9 view .LVU121
 483              		.loc 1 96 33 is_stmt 0 view .LVU122
 484 0050 4B1C     		adds	r3, r1, #1
 485              	.LVL42:
 486              		.loc 1 96 24 view .LVU123
 487 0052 434A     		ldr	r2, .L58
 488 0054 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 489              		.loc 1 96 9 view .LVU124
 490 0056 303B     		subs	r3, r3, #48
 491 0058 032B     		cmp	r3, #3
 492 005a 77D8     		bhi	.L32
 493 005c DFE803F0 		tbb	[pc, r3]
 494              	.L34:
 495 0060 02       		.byte	(.L37-.L34)/2
 496 0061 13       		.byte	(.L36-.L34)/2
 497 0062 43       		.byte	(.L48-.L34)/2
 498 0063 60       		.byte	(.L33-.L34)/2
 499              		.p2align 1
 500              	.L37:
  97:Src/core.c    ****             case '0':
  98:Src/core.c    ****             if(RxBuffer[endInd - 1] == '2') {
ARM GAS  /tmp/ccZUXJMg.s 			page 12


 501              		.loc 1 98 13 is_stmt 1 view .LVU125
 502              		.loc 1 98 32 is_stmt 0 view .LVU126
 503 0064 013C     		subs	r4, r4, #1
 504              	.LVL43:
 505              		.loc 1 98 24 view .LVU127
 506 0066 3E4B     		ldr	r3, .L58
 507 0068 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 508              		.loc 1 98 15 view .LVU128
 509 006a 322B     		cmp	r3, #50
 510 006c 6ED1     		bne	.L32
  99:Src/core.c    ****                 if(state.sw == SYS_ON) state.sw = SYS_OFF;
 511              		.loc 1 99 17 is_stmt 1 view .LVU129
 512              		.loc 1 99 25 is_stmt 0 view .LVU130
 513 006e 3E4B     		ldr	r3, .L58+8
 514 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 515              		.loc 1 99 19 view .LVU131
 516 0072 012B     		cmp	r3, #1
 517 0074 03D0     		beq	.L53
 100:Src/core.c    ****                 else state.sw = SYS_ON;
 518              		.loc 1 100 22 is_stmt 1 view .LVU132
 519              		.loc 1 100 31 is_stmt 0 view .LVU133
 520 0076 3C4B     		ldr	r3, .L58+8
 521 0078 0122     		movs	r2, #1
 522 007a 1A70     		strb	r2, [r3]
 523 007c 66E0     		b	.L32
 524              	.L53:
  99:Src/core.c    ****                 if(state.sw == SYS_ON) state.sw = SYS_OFF;
 525              		.loc 1 99 40 is_stmt 1 discriminator 1 view .LVU134
  99:Src/core.c    ****                 if(state.sw == SYS_ON) state.sw = SYS_OFF;
 526              		.loc 1 99 49 is_stmt 0 discriminator 1 view .LVU135
 527 007e 3A4B     		ldr	r3, .L58+8
 528 0080 0022     		movs	r2, #0
 529 0082 1A70     		strb	r2, [r3]
 530 0084 62E0     		b	.L32
 531              	.LVL44:
 532              	.L36:
 101:Src/core.c    ****                 // strcpy(msg, "Change the system to ");
 102:Src/core.c    ****                 // strcat(msg, state.sw == SYS_ON ? "ON\n" : "OFF\n");
 103:Src/core.c    ****             }
 104:Src/core.c    ****             break;
 105:Src/core.c    ****             case '1': 
 106:Src/core.c    ****             if(RxBuffer[endInd - 2] == ',') {
 533              		.loc 1 106 13 is_stmt 1 view .LVU136
 534              		.loc 1 106 32 is_stmt 0 view .LVU137
 535 0086 A31E     		subs	r3, r4, #2
 536              		.loc 1 106 24 view .LVU138
 537 0088 354A     		ldr	r2, .L58
 538 008a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 539              		.loc 1 106 15 view .LVU139
 540 008c 2C2B     		cmp	r3, #44
 541 008e 5DD1     		bne	.L32
 107:Src/core.c    ****                 if(RxBuffer[startInd + 3] == '0') state.mode = ONOFF_MODE;
 542              		.loc 1 107 17 is_stmt 1 view .LVU140
 543              		.loc 1 107 38 is_stmt 0 view .LVU141
 544 0090 0331     		adds	r1, r1, #3
 545              	.LVL45:
 546              		.loc 1 107 28 view .LVU142
ARM GAS  /tmp/ccZUXJMg.s 			page 13


 547 0092 535C     		ldrb	r3, [r2, r1]	@ zero_extendqisi2
 548              		.loc 1 107 19 view .LVU143
 549 0094 302B     		cmp	r3, #48
 550 0096 07D0     		beq	.L54
 108:Src/core.c    ****                 else if(RxBuffer[startInd + 3] == '1') state.mode = TIME_MODE;
 551              		.loc 1 108 22 is_stmt 1 view .LVU144
 552              		.loc 1 108 24 is_stmt 0 view .LVU145
 553 0098 312B     		cmp	r3, #49
 554 009a 13D0     		beq	.L55
 109:Src/core.c    ****                 else if(RxBuffer[startInd + 3] == '2') state.mode = TEMP_MODE;
 555              		.loc 1 109 22 is_stmt 1 view .LVU146
 556              		.loc 1 109 24 is_stmt 0 view .LVU147
 557 009c 322B     		cmp	r3, #50
 558 009e 06D1     		bne	.L40
 559              		.loc 1 109 56 is_stmt 1 discriminator 1 view .LVU148
 560              		.loc 1 109 67 is_stmt 0 discriminator 1 view .LVU149
 561 00a0 314B     		ldr	r3, .L58+8
 562 00a2 0222     		movs	r2, #2
 563 00a4 1A71     		strb	r2, [r3, #4]
 564 00a6 02E0     		b	.L40
 565              	.L54:
 107:Src/core.c    ****                 if(RxBuffer[startInd + 3] == '0') state.mode = ONOFF_MODE;
 566              		.loc 1 107 51 is_stmt 1 discriminator 1 view .LVU150
 107:Src/core.c    ****                 if(RxBuffer[startInd + 3] == '0') state.mode = ONOFF_MODE;
 567              		.loc 1 107 62 is_stmt 0 discriminator 1 view .LVU151
 568 00a8 2F4B     		ldr	r3, .L58+8
 569 00aa 0022     		movs	r2, #0
 570 00ac 1A71     		strb	r2, [r3, #4]
 571              	.L40:
 110:Src/core.c    ****                 if(RxBuffer[endInd - 1] == '0') state.lightOff = 0;
 572              		.loc 1 110 17 is_stmt 1 view .LVU152
 573              		.loc 1 110 36 is_stmt 0 view .LVU153
 574 00ae 013C     		subs	r4, r4, #1
 575              	.LVL46:
 576              		.loc 1 110 28 view .LVU154
 577 00b0 2B4B     		ldr	r3, .L58
 578 00b2 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 579              		.loc 1 110 19 view .LVU155
 580 00b4 302B     		cmp	r3, #48
 581 00b6 09D0     		beq	.L56
 111:Src/core.c    ****                 else if(RxBuffer[endInd - 1] == '1') state.lightOff = 1;
 582              		.loc 1 111 22 is_stmt 1 view .LVU156
 583              		.loc 1 111 24 is_stmt 0 view .LVU157
 584 00b8 312B     		cmp	r3, #49
 585 00ba 47D1     		bne	.L32
 586              		.loc 1 111 54 is_stmt 1 discriminator 1 view .LVU158
 587              		.loc 1 111 69 is_stmt 0 discriminator 1 view .LVU159
 588 00bc 2A4B     		ldr	r3, .L58+8
 589 00be 0122     		movs	r2, #1
 590 00c0 5A61     		str	r2, [r3, #20]
 591 00c2 43E0     		b	.L32
 592              	.LVL47:
 593              	.L55:
 108:Src/core.c    ****                 else if(RxBuffer[startInd + 3] == '2') state.mode = TEMP_MODE;
 594              		.loc 1 108 56 is_stmt 1 discriminator 1 view .LVU160
 108:Src/core.c    ****                 else if(RxBuffer[startInd + 3] == '2') state.mode = TEMP_MODE;
 595              		.loc 1 108 67 is_stmt 0 discriminator 1 view .LVU161
ARM GAS  /tmp/ccZUXJMg.s 			page 14


 596 00c4 284B     		ldr	r3, .L58+8
 597 00c6 0122     		movs	r2, #1
 598 00c8 1A71     		strb	r2, [r3, #4]
 599 00ca F0E7     		b	.L40
 600              	.LVL48:
 601              	.L56:
 110:Src/core.c    ****                 if(RxBuffer[endInd - 1] == '0') state.lightOff = 0;
 602              		.loc 1 110 49 is_stmt 1 discriminator 1 view .LVU162
 110:Src/core.c    ****                 if(RxBuffer[endInd - 1] == '0') state.lightOff = 0;
 603              		.loc 1 110 64 is_stmt 0 discriminator 1 view .LVU163
 604 00cc 264B     		ldr	r3, .L58+8
 605 00ce 0022     		movs	r2, #0
 606 00d0 5A61     		str	r2, [r3, #20]
 607 00d2 3BE0     		b	.L32
 608              	.LVL49:
 609              	.L43:
 610              	.LBB8:
 112:Src/core.c    ****             }
 113:Src/core.c    ****             break;
 114:Src/core.c    ****             case '2':
 115:Src/core.c    ****             
 116:Src/core.c    ****             for(int i = startInd; i < endInd; i++) 
 611              		.loc 1 116 48 discriminator 2 view .LVU164
 612 00d4 0133     		adds	r3, r3, #1
 613              	.LVL50:
 614              	.L35:
 615              		.loc 1 116 13 discriminator 1 view .LVU165
 616 00d6 9C42     		cmp	r4, r3
 617 00d8 08DD     		ble	.L57
 117:Src/core.c    ****                 if(RxBuffer[i] == ',')
 618              		.loc 1 117 17 is_stmt 1 view .LVU166
 619              		.loc 1 117 28 is_stmt 0 view .LVU167
 620 00da 214A     		ldr	r2, .L58
 621 00dc D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 622              		.loc 1 117 19 view .LVU168
 623 00de 2C2A     		cmp	r2, #44
 624 00e0 F8D1     		bne	.L43
 118:Src/core.c    ****                     middleInd = i;
 625              		.loc 1 118 31 view .LVU169
 626 00e2 1D46     		mov	r5, r3
 627              	.LVL51:
 628              		.loc 1 118 31 view .LVU170
 629 00e4 F6E7     		b	.L43
 630              	.LVL52:
 631              	.L48:
 116:Src/core.c    ****                 if(RxBuffer[i] == ',')
 632              		.loc 1 116 21 view .LVU171
 633 00e6 0B46     		mov	r3, r1
 634              	.LBE8:
  94:Src/core.c    ****         int input_temp = 0;
 635              		.loc 1 94 13 view .LVU172
 636 00e8 0025     		movs	r5, #0
 637 00ea F4E7     		b	.L35
 638              	.LVL53:
 639              	.L57:
 119:Src/core.c    ****             if(middleInd != 0) {
 640              		.loc 1 119 13 is_stmt 1 view .LVU173
ARM GAS  /tmp/ccZUXJMg.s 			page 15


 641              		.loc 1 119 15 is_stmt 0 view .LVU174
 642 00ec 75B3     		cbz	r5, .L32
 643              	.LBB9:
 120:Src/core.c    ****                 int on_time = string2int(RxBuffer, startInd + 3, middleInd - 1);
 644              		.loc 1 120 17 is_stmt 1 view .LVU175
 645              		.loc 1 120 31 is_stmt 0 view .LVU176
 646 00ee 1C4E     		ldr	r6, .L58
 647 00f0 6A1E     		subs	r2, r5, #1
 648 00f2 0331     		adds	r1, r1, #3
 649              	.LVL54:
 650              		.loc 1 120 31 view .LVU177
 651 00f4 3046     		mov	r0, r6
 652              	.LVL55:
 653              		.loc 1 120 31 view .LVU178
 654 00f6 FFF7FEFF 		bl	string2int
 655              	.LVL56:
 656              		.loc 1 120 31 view .LVU179
 657 00fa 0746     		mov	r7, r0
 658              	.LVL57:
 121:Src/core.c    ****                 int off_time = string2int(RxBuffer, middleInd + 1, endInd - 1);
 659              		.loc 1 121 17 is_stmt 1 view .LVU180
 660              		.loc 1 121 32 is_stmt 0 view .LVU181
 661 00fc 621E     		subs	r2, r4, #1
 662 00fe 691C     		adds	r1, r5, #1
 663 0100 3046     		mov	r0, r6
 664              	.LVL58:
 665              		.loc 1 121 32 view .LVU182
 666 0102 FFF7FEFF 		bl	string2int
 667              	.LVL59:
 122:Src/core.c    ****                 if(on_time >= 15 && off_time >= 15) {
 668              		.loc 1 122 17 is_stmt 1 view .LVU183
 669              		.loc 1 122 19 is_stmt 0 view .LVU184
 670 0106 0E2F     		cmp	r7, #14
 671 0108 20DD     		ble	.L32
 672              		.loc 1 122 34 discriminator 1 view .LVU185
 673 010a 0E28     		cmp	r0, #14
 674 010c 1EDD     		ble	.L32
 123:Src/core.c    ****                     state.tarTime[0] = on_time;
 675              		.loc 1 123 21 is_stmt 1 view .LVU186
 676              		.loc 1 123 38 is_stmt 0 view .LVU187
 677 010e 164B     		ldr	r3, .L58+8
 678 0110 DF60     		str	r7, [r3, #12]
 124:Src/core.c    ****                     state.tarTime[1] = off_time;
 679              		.loc 1 124 21 is_stmt 1 view .LVU188
 680              		.loc 1 124 38 is_stmt 0 view .LVU189
 681 0112 1861     		str	r0, [r3, #16]
 125:Src/core.c    ****                     printf("Changed the time to %d mins ON and %d mins OFF\n", on_time, off_time);
 682              		.loc 1 125 21 is_stmt 1 view .LVU190
 683 0114 0246     		mov	r2, r0
 684 0116 3946     		mov	r1, r7
 685 0118 1448     		ldr	r0, .L58+12
 686              	.LVL60:
 687              		.loc 1 125 21 is_stmt 0 view .LVU191
 688 011a FFF7FEFF 		bl	printf
 689              	.LVL61:
 690              		.loc 1 125 21 view .LVU192
 691 011e 15E0     		b	.L32
ARM GAS  /tmp/ccZUXJMg.s 			page 16


 692              	.LVL62:
 693              	.L33:
 694              		.loc 1 125 21 view .LVU193
 695              	.LBE9:
 126:Src/core.c    ****                 }
 127:Src/core.c    ****             }
 128:Src/core.c    ****             break;
 129:Src/core.c    ****             case '3':
 130:Src/core.c    ****             input_temp = string2int(RxBuffer, startInd + 3, endInd - 1);
 696              		.loc 1 130 13 is_stmt 1 view .LVU194
 697              		.loc 1 130 26 is_stmt 0 view .LVU195
 698 0120 621E     		subs	r2, r4, #1
 699 0122 0331     		adds	r1, r1, #3
 700              	.LVL63:
 701              		.loc 1 130 26 view .LVU196
 702 0124 0E48     		ldr	r0, .L58
 703              	.LVL64:
 704              		.loc 1 130 26 view .LVU197
 705 0126 FFF7FEFF 		bl	string2int
 706              	.LVL65:
 131:Src/core.c    ****             if(input_temp <= 30 && input_temp >= 15) state.tarTemp = input_temp;
 707              		.loc 1 131 13 is_stmt 1 view .LVU198
 708              		.loc 1 131 33 is_stmt 0 view .LVU199
 709 012a A0F10F03 		sub	r3, r0, #15
 710              		.loc 1 131 15 view .LVU200
 711 012e 0F2B     		cmp	r3, #15
 712 0130 03D8     		bhi	.L45
 713              		.loc 1 131 54 is_stmt 1 discriminator 1 view .LVU201
 714              		.loc 1 131 68 is_stmt 0 discriminator 1 view .LVU202
 715 0132 FFF7FEFF 		bl	__aeabi_i2f
 716              	.LVL66:
 717              		.loc 1 131 68 discriminator 1 view .LVU203
 718 0136 0C4B     		ldr	r3, .L58+8
 719 0138 9860     		str	r0, [r3, #8]	@ float
 720              	.L45:
 132:Src/core.c    ****             printf("Changed the target temp to %3.1f\n", state.tarTemp);
 721              		.loc 1 132 13 is_stmt 1 view .LVU204
 722 013a 0B4B     		ldr	r3, .L58+8
 723 013c 9868     		ldr	r0, [r3, #8]	@ float
 724 013e FFF7FEFF 		bl	__aeabi_f2d
 725              	.LVL67:
 726 0142 0246     		mov	r2, r0
 727 0144 0B46     		mov	r3, r1
 728 0146 0A48     		ldr	r0, .L58+16
 729 0148 FFF7FEFF 		bl	printf
 730              	.LVL68:
 133:Src/core.c    ****             break;
 731              		.loc 1 133 13 view .LVU205
 732              	.L32:
 134:Src/core.c    ****         }
 135:Src/core.c    ****         Uart1_Rx_Cnt = 0;
 733              		.loc 1 135 9 view .LVU206
 734              		.loc 1 135 22 is_stmt 0 view .LVU207
 735 014c 0021     		movs	r1, #0
 736 014e 054B     		ldr	r3, .L58+4
 737 0150 1970     		strb	r1, [r3]
 136:Src/core.c    ****         memset(RxBuffer, 0x00, sizeof(RxBuffer));
ARM GAS  /tmp/ccZUXJMg.s 			page 17


 738              		.loc 1 136 9 is_stmt 1 view .LVU208
 739 0152 4FF40072 		mov	r2, #512
 740 0156 0248     		ldr	r0, .L58
 741 0158 FFF7FEFF 		bl	memset
 742              	.LVL69:
 743              	.L24:
 744              		.loc 1 136 9 is_stmt 0 view .LVU209
 745              	.LBE7:
 137:Src/core.c    ****     }
 138:Src/core.c    **** }
 746              		.loc 1 138 1 view .LVU210
 747 015c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 748              	.L59:
 749 015e 00BF     		.align	2
 750              	.L58:
 751 0160 00000000 		.word	RxBuffer
 752 0164 00000000 		.word	.LANCHOR4
 753 0168 00000000 		.word	state
 754 016c 00000000 		.word	.LC0
 755 0170 30000000 		.word	.LC1
 756              		.cfi_endproc
 757              	.LFE70:
 759              		.section	.text.changeLight,"ax",%progbits
 760              		.align	1
 761              		.global	changeLight
 762              		.syntax unified
 763              		.thumb
 764              		.thumb_func
 765              		.fpu softvfp
 767              	changeLight:
 768              	.LVL70:
 769              	.LFB71:
 139:Src/core.c    **** 
 140:Src/core.c    **** void changeLight(enum Mode mode, int lightOff) {
 770              		.loc 1 140 48 is_stmt 1 view -0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		.loc 1 140 48 is_stmt 0 view .LVU212
 775 0000 70B5     		push	{r4, r5, r6, lr}
 776              	.LCFI6:
 777              		.cfi_def_cfa_offset 16
 778              		.cfi_offset 4, -16
 779              		.cfi_offset 5, -12
 780              		.cfi_offset 6, -8
 781              		.cfi_offset 14, -4
 782 0002 0646     		mov	r6, r0
 783 0004 0D46     		mov	r5, r1
 141:Src/core.c    ****     HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_SET);
 784              		.loc 1 141 5 is_stmt 1 view .LVU213
 785 0006 134C     		ldr	r4, .L67
 786 0008 0122     		movs	r2, #1
 787 000a 0821     		movs	r1, #8
 788              	.LVL71:
 789              		.loc 1 141 5 is_stmt 0 view .LVU214
 790 000c 2046     		mov	r0, r4
 791              	.LVL72:
ARM GAS  /tmp/ccZUXJMg.s 			page 18


 792              		.loc 1 141 5 view .LVU215
 793 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 794              	.LVL73:
 142:Src/core.c    ****     HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_SET);
 795              		.loc 1 142 5 is_stmt 1 view .LVU216
 796 0012 0122     		movs	r2, #1
 797 0014 1021     		movs	r1, #16
 798 0016 2046     		mov	r0, r4
 799 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 800              	.LVL74:
 143:Src/core.c    ****     HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_SET);
 801              		.loc 1 143 5 view .LVU217
 802 001c 0122     		movs	r2, #1
 803 001e 2021     		movs	r1, #32
 804 0020 2046     		mov	r0, r4
 805 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 806              	.LVL75:
 144:Src/core.c    ****     if(!lightOff) 
 807              		.loc 1 144 5 view .LVU218
 808              		.loc 1 144 7 is_stmt 0 view .LVU219
 809 0026 3DB9     		cbnz	r5, .L60
 145:Src/core.c    ****         if(mode == ONOFF_MODE)
 810              		.loc 1 145 9 is_stmt 1 view .LVU220
 811              		.loc 1 145 11 is_stmt 0 view .LVU221
 812 0028 3EB1     		cbz	r6, .L65
 146:Src/core.c    ****             HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_RESET);
 147:Src/core.c    ****         else if(mode == TIME_MODE)
 813              		.loc 1 147 14 is_stmt 1 view .LVU222
 814              		.loc 1 147 16 is_stmt 0 view .LVU223
 815 002a 012E     		cmp	r6, #1
 816 002c 0BD0     		beq	.L66
 148:Src/core.c    ****             HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_RESET);
 149:Src/core.c    ****         else
 150:Src/core.c    ****             HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
 817              		.loc 1 150 13 is_stmt 1 view .LVU224
 818 002e 0022     		movs	r2, #0
 819 0030 2021     		movs	r1, #32
 820 0032 0848     		ldr	r0, .L67
 821 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 822              	.LVL76:
 823              	.L60:
 151:Src/core.c    **** }
 824              		.loc 1 151 1 is_stmt 0 view .LVU225
 825 0038 70BD     		pop	{r4, r5, r6, pc}
 826              	.LVL77:
 827              	.L65:
 146:Src/core.c    ****             HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_RESET);
 828              		.loc 1 146 13 is_stmt 1 view .LVU226
 829 003a 0022     		movs	r2, #0
 830 003c 0821     		movs	r1, #8
 831 003e 2046     		mov	r0, r4
 832 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 833              	.LVL78:
 834 0044 F8E7     		b	.L60
 835              	.L66:
 148:Src/core.c    ****             HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_RESET);
 836              		.loc 1 148 13 view .LVU227
ARM GAS  /tmp/ccZUXJMg.s 			page 19


 837 0046 0022     		movs	r2, #0
 838 0048 1021     		movs	r1, #16
 839 004a 0248     		ldr	r0, .L67
 840 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 841              	.LVL79:
 842 0050 F2E7     		b	.L60
 843              	.L68:
 844 0052 00BF     		.align	2
 845              	.L67:
 846 0054 00080140 		.word	1073809408
 847              		.cfi_endproc
 848              	.LFE71:
 850              		.section	.text.send_state,"ax",%progbits
 851              		.align	1
 852              		.global	send_state
 853              		.syntax unified
 854              		.thumb
 855              		.thumb_func
 856              		.fpu softvfp
 858              	send_state:
 859              	.LFB73:
 152:Src/core.c    **** 
 153:Src/core.c    **** char* msg[30];
 154:Src/core.c    **** void update_info() {
 155:Src/core.c    ****     strcpy(msg, "");
 156:Src/core.c    ****     msg[0] = '0';
 157:Src/core.c    ****     enum SystemSwitch last = state.sw;
 158:Src/core.c    ****     enum Mode lastMode = state.mode;
 159:Src/core.c    ****     state.re_sw = HAL_GPIO_ReadPin(REMOTE_SWITCH_GPIO_Port, REMOTE_SWITCH_Pin) == GPIO_PIN_RESET ? 
 160:Src/core.c    ****     if(state.re_sw != REMOTE_ON) {
 161:Src/core.c    ****         state.sw = HAL_GPIO_ReadPin(MAIN_SWITCH_GPIO_Port, MAIN_SWITCH_Pin) == GPIO_PIN_RESET ? SYS
 162:Src/core.c    ****         state.mode = ONOFF_MODE;
 163:Src/core.c    ****         if(Uart1_Rx_Cnt != 0) {
 164:Src/core.c    ****             Uart1_Rx_Cnt = 0;
 165:Src/core.c    ****             memset(RxBuffer, 0x00, sizeof(RxBuffer));
 166:Src/core.c    ****             printf("Remote control is not ON\n");
 167:Src/core.c    ****         }
 168:Src/core.c    ****     }
 169:Src/core.c    ****     if(state.re_sw == REMOTE_ON && Uart1_Rx_Cnt != 0) bluetooth_decode(msg);
 170:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 171:Src/core.c    ****     state.off_sw = HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET ? OFF_O
 172:Src/core.c    ****     state.temp = HAL_ADC_GetValue(&hadc1) * 0.0008056f * 100;
 173:Src/core.c    ****     if(last != state.sw) {
 174:Src/core.c    ****         move(state.sw);
 175:Src/core.c    ****         strcpy(msg, "Change the system to ");
 176:Src/core.c    ****         strcat(msg, state.sw == SYS_ON ? "ON\n" : "OFF\n");
 177:Src/core.c    ****     }
 178:Src/core.c    ****     if(lastMode != state.mode) {
 179:Src/core.c    ****         move(state.sw);
 180:Src/core.c    ****         strcpy(msg, "Change mode to ");
 181:Src/core.c    ****         strcat(msg, state.mode == ONOFF_MODE ? "ONOFF mode\n" : state.mode == TIME_MODE ? "TIME mod
 182:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 183:Src/core.c    ****     }
 184:Src/core.c    ****     changeLight(state.mode, state.lightOff);
 185:Src/core.c    ****     if(msg[0] != '0') printf(msg);
 186:Src/core.c    **** }
 187:Src/core.c    **** 
ARM GAS  /tmp/ccZUXJMg.s 			page 20


 188:Src/core.c    **** int lastAchievement = 0;
 189:Src/core.c    **** void send_state() {
 860              		.loc 1 189 19 view -0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 88
 863              		@ frame_needed = 0, uses_anonymous_args = 0
 864 0000 70B5     		push	{r4, r5, r6, lr}
 865              	.LCFI7:
 866              		.cfi_def_cfa_offset 16
 867              		.cfi_offset 4, -16
 868              		.cfi_offset 5, -12
 869              		.cfi_offset 6, -8
 870              		.cfi_offset 14, -4
 871 0002 96B0     		sub	sp, sp, #88
 872              	.LCFI8:
 873              		.cfi_def_cfa_offset 104
 190:Src/core.c    ****     // char modeStr[15] = "ON/OFF Mode";
 191:Src/core.c    ****     char msg1[25];
 874              		.loc 1 191 5 view .LVU229
 192:Src/core.c    ****     strcpy(msg1, "Now the air-con is ");
 875              		.loc 1 192 5 view .LVU230
 876 0004 0FAC     		add	r4, sp, #60
 877 0006 6D4D     		ldr	r5, .L99
 878 0008 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 879 000a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 880 000c 2B68     		ldr	r3, [r5]
 881 000e 2360     		str	r3, [r4]
 193:Src/core.c    ****     strcat(msg1, state.sw == SYS_ON ? "ON\n" : "OFF\n");
 882              		.loc 1 193 5 view .LVU231
 883              		.loc 1 193 23 is_stmt 0 view .LVU232
 884 0010 6B4B     		ldr	r3, .L99+4
 885 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 886              		.loc 1 193 5 view .LVU233
 887 0014 012B     		cmp	r3, #1
 888 0016 16D0     		beq	.L89
 889 0018 6A49     		ldr	r1, .L99+8
 890              	.L70:
 891              		.loc 1 193 5 discriminator 4 view .LVU234
 892 001a 0FA8     		add	r0, sp, #60
 893 001c FFF7FEFF 		bl	strcat
 894              	.LVL80:
 194:Src/core.c    ****     printf(msg1);
 895              		.loc 1 194 5 is_stmt 1 discriminator 4 view .LVU235
 896 0020 0FA8     		add	r0, sp, #60
 897 0022 FFF7FEFF 		bl	printf
 898              	.LVL81:
 195:Src/core.c    **** 
 196:Src/core.c    ****     char msg2[25];
 899              		.loc 1 196 5 discriminator 4 view .LVU236
 197:Src/core.c    ****     strcpy(msg2, "The current mode is ");
 900              		.loc 1 197 5 discriminator 4 view .LVU237
 901 0026 08AC     		add	r4, sp, #32
 902 0028 674D     		ldr	r5, .L99+12
 903 002a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 904 002c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 905 002e 95E80300 		ldm	r5, {r0, r1}
 906 0032 44F8040B 		str	r0, [r4], #4
ARM GAS  /tmp/ccZUXJMg.s 			page 21


 907 0036 2170     		strb	r1, [r4]
 198:Src/core.c    ****     strcat(msg2, state.mode == ONOFF_MODE ? "ON/OFF Mode\n" : state.mode == TEMP_MODE ? "Temp Mode\
 908              		.loc 1 198 5 discriminator 4 view .LVU238
 909              		.loc 1 198 23 is_stmt 0 discriminator 4 view .LVU239
 910 0038 614B     		ldr	r3, .L99+4
 911 003a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 912              		.loc 1 198 5 discriminator 4 view .LVU240
 913 003c 3BB1     		cbz	r3, .L84
 914              		.loc 1 198 5 discriminator 1 view .LVU241
 915 003e 022B     		cmp	r3, #2
 916 0040 03D0     		beq	.L90
 917              		.loc 1 198 5 view .LVU242
 918 0042 6249     		ldr	r1, .L99+16
 919 0044 04E0     		b	.L71
 920              	.L89:
 193:Src/core.c    ****     printf(msg1);
 921              		.loc 1 193 5 view .LVU243
 922 0046 6249     		ldr	r1, .L99+20
 923 0048 E7E7     		b	.L70
 924              	.L90:
 925              		.loc 1 198 5 view .LVU244
 926 004a 6249     		ldr	r1, .L99+24
 927 004c 00E0     		b	.L71
 928              	.L84:
 929 004e 6249     		ldr	r1, .L99+28
 930              	.L71:
 931              		.loc 1 198 5 discriminator 8 view .LVU245
 932 0050 08A8     		add	r0, sp, #32
 933 0052 FFF7FEFF 		bl	strcat
 934              	.LVL82:
 199:Src/core.c    ****     printf(msg2);
 935              		.loc 1 199 5 is_stmt 1 discriminator 8 view .LVU246
 936 0056 08A8     		add	r0, sp, #32
 937 0058 FFF7FEFF 		bl	printf
 938              	.LVL83:
 200:Src/core.c    **** 
 201:Src/core.c    ****     printf("Current temperature is : %3.1f\n", state.temp);
 939              		.loc 1 201 5 discriminator 8 view .LVU247
 940              		.loc 1 201 53 is_stmt 0 discriminator 8 view .LVU248
 941 005c 584E     		ldr	r6, .L99+4
 942              		.loc 1 201 5 discriminator 8 view .LVU249
 943 005e B069     		ldr	r0, [r6, #24]	@ float
 944 0060 FFF7FEFF 		bl	__aeabi_f2d
 945              	.LVL84:
 946 0064 0246     		mov	r2, r0
 947 0066 0B46     		mov	r3, r1
 948 0068 5C48     		ldr	r0, .L99+32
 949 006a FFF7FEFF 		bl	printf
 950              	.LVL85:
 202:Src/core.c    **** 
 203:Src/core.c    ****     volatile int currentTime = runningTime;
 951              		.loc 1 203 5 is_stmt 1 discriminator 8 view .LVU250
 952              		.loc 1 203 18 is_stmt 0 discriminator 8 view .LVU251
 953 006e 5C4B     		ldr	r3, .L99+36
 954 0070 1B68     		ldr	r3, [r3]
 955 0072 0793     		str	r3, [sp, #28]
 204:Src/core.c    ****     char msg3[25];
ARM GAS  /tmp/ccZUXJMg.s 			page 22


 956              		.loc 1 204 5 is_stmt 1 discriminator 8 view .LVU252
 205:Src/core.c    ****     strcpy(msg3, "The air-con has ");
 957              		.loc 1 205 5 discriminator 8 view .LVU253
 958 0074 6C46     		mov	r4, sp
 959 0076 5B4D     		ldr	r5, .L99+40
 960 0078 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 961 007a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 962 007c 2B68     		ldr	r3, [r5]
 963 007e 2370     		strb	r3, [r4]
 206:Src/core.c    ****     strcat(msg3, state.sw == SYS_ON ? "run" : "closed");
 964              		.loc 1 206 5 discriminator 8 view .LVU254
 965              		.loc 1 206 23 is_stmt 0 discriminator 8 view .LVU255
 966 0080 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 967              		.loc 1 206 5 discriminator 8 view .LVU256
 968 0082 012B     		cmp	r3, #1
 969 0084 2ED0     		beq	.L91
 970              		.loc 1 206 5 view .LVU257
 971 0086 5849     		ldr	r1, .L99+44
 972              	.L72:
 973              		.loc 1 206 5 discriminator 4 view .LVU258
 974 0088 6846     		mov	r0, sp
 975 008a FFF7FEFF 		bl	strcat
 976              	.LVL86:
 207:Src/core.c    ****     strcat(msg3, " for ");
 977              		.loc 1 207 5 is_stmt 1 discriminator 4 view .LVU259
 978 008e 6846     		mov	r0, sp
 979 0090 FFF7FEFF 		bl	strlen
 980              	.LVL87:
 981 0094 0246     		mov	r2, r0
 982 0096 0DEB0001 		add	r1, sp, r0
 983 009a 544B     		ldr	r3, .L99+48
 984 009c 1868     		ldr	r0, [r3]
 985 009e 4DF80200 		str	r0, [sp, r2]	@ unaligned
 986 00a2 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 987 00a4 8B80     		strh	r3, [r1, #4]	@ unaligned
 208:Src/core.c    ****     printf("%s%d%s", msg3, (currentTime - (state.sw == SYS_ON ? state.startTime : state.shutDownTim
 988              		.loc 1 208 5 discriminator 4 view .LVU260
 989              		.loc 1 208 41 is_stmt 0 discriminator 4 view .LVU261
 990 00a6 079B     		ldr	r3, [sp, #28]
 991              		.loc 1 208 49 discriminator 4 view .LVU262
 992 00a8 454A     		ldr	r2, .L99+4
 993 00aa 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 994              		.loc 1 208 81 discriminator 4 view .LVU263
 995 00ac 012A     		cmp	r2, #1
 996 00ae 1BD0     		beq	.L92
 997              		.loc 1 208 81 discriminator 2 view .LVU264
 998 00b0 434A     		ldr	r2, .L99+4
 999 00b2 126A     		ldr	r2, [r2, #32]
 1000              	.L74:
 1001              		.loc 1 208 41 discriminator 4 view .LVU265
 1002 00b4 9B1A     		subs	r3, r3, r2
 1003              		.loc 1 208 5 discriminator 4 view .LVU266
 1004 00b6 4E49     		ldr	r1, .L99+52
 1005 00b8 81FB0321 		smull	r2, r1, r1, r3
 1006 00bc 1944     		add	r1, r1, r3
 1007 00be DA17     		asrs	r2, r3, #31
 1008 00c0 4C4B     		ldr	r3, .L99+56
ARM GAS  /tmp/ccZUXJMg.s 			page 23


 1009 00c2 C2EB6112 		rsb	r2, r2, r1, asr #5
 1010 00c6 6946     		mov	r1, sp
 1011 00c8 4B48     		ldr	r0, .L99+60
 1012 00ca FFF7FEFF 		bl	printf
 1013              	.LVL88:
 209:Src/core.c    **** 
 210:Src/core.c    ****     if(state.mode == TEMP_MODE) {
 1014              		.loc 1 210 5 is_stmt 1 discriminator 4 view .LVU267
 1015              		.loc 1 210 13 is_stmt 0 discriminator 4 view .LVU268
 1016 00ce 3C4B     		ldr	r3, .L99+4
 1017 00d0 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1018              		.loc 1 210 7 discriminator 4 view .LVU269
 1019 00d2 022B     		cmp	r3, #2
 1020 00d4 0BD0     		beq	.L93
 211:Src/core.c    ****         printf("The target temperature is %3.1f\n", state.tarTemp);
 212:Src/core.c    ****         printf("The last temperature achievement is %d\n", lastAchievement);
 213:Src/core.c    ****         if(state.sw == SYS_ON)
 214:Src/core.c    ****             printf("Closed for %d mins and Opened for %d mins\n", (state.startTime - state.shutDown
 215:Src/core.c    ****         else
 216:Src/core.c    ****             printf("Opened for %d mins and closed for %d mins\n", (state.shutDownTime - state.start
 217:Src/core.c    ****     }
 218:Src/core.c    ****     else if(state.mode == TIME_MODE) {
 1021              		.loc 1 218 10 is_stmt 1 view .LVU270
 1022              		.loc 1 218 12 is_stmt 0 view .LVU271
 1023 00d6 012B     		cmp	r3, #1
 1024 00d8 47D0     		beq	.L94
 1025              	.L77:
 219:Src/core.c    ****         int passTime = (currentTime - (state.sw == SYS_ON ? state.startTime : state.shutDownTime)) 
 220:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 221:Src/core.c    ****         printf("There are %d minutes before air-con %s\n", remainingTime, state.sw == SYS_ON ? "clo
 222:Src/core.c    ****         printf("Open for %d mins and close for %d mins\n", state.tarTime[0], state.tarTime[1]);
 223:Src/core.c    ****     }
 224:Src/core.c    **** 
 225:Src/core.c    ****     // printf("%d  %d  %d\n", currentTime, state.startTime, state.shutDownTime);
 226:Src/core.c    ****     printf("\n");
 1026              		.loc 1 226 5 is_stmt 1 view .LVU272
 1027 00da 0A20     		movs	r0, #10
 1028 00dc FFF7FEFF 		bl	putchar
 1029              	.LVL89:
 227:Src/core.c    **** }
 1030              		.loc 1 227 1 is_stmt 0 view .LVU273
 1031 00e0 16B0     		add	sp, sp, #88
 1032              	.LCFI9:
 1033              		.cfi_remember_state
 1034              		.cfi_def_cfa_offset 16
 1035              		@ sp needed
 1036 00e2 70BD     		pop	{r4, r5, r6, pc}
 1037              	.L91:
 1038              	.LCFI10:
 1039              		.cfi_restore_state
 206:Src/core.c    ****     strcat(msg3, " for ");
 1040              		.loc 1 206 5 view .LVU274
 1041 00e4 4549     		ldr	r1, .L99+64
 1042 00e6 CFE7     		b	.L72
 1043              	.L92:
 208:Src/core.c    **** 
 1044              		.loc 1 208 81 discriminator 1 view .LVU275
ARM GAS  /tmp/ccZUXJMg.s 			page 24


 1045 00e8 354A     		ldr	r2, .L99+4
 1046 00ea D269     		ldr	r2, [r2, #28]
 1047 00ec E2E7     		b	.L74
 1048              	.L93:
 211:Src/core.c    ****         printf("The last temperature achievement is %d\n", lastAchievement);
 1049              		.loc 1 211 9 is_stmt 1 view .LVU276
 211:Src/core.c    ****         printf("The last temperature achievement is %d\n", lastAchievement);
 1050              		.loc 1 211 58 is_stmt 0 view .LVU277
 1051 00ee 344C     		ldr	r4, .L99+4
 211:Src/core.c    ****         printf("The last temperature achievement is %d\n", lastAchievement);
 1052              		.loc 1 211 9 view .LVU278
 1053 00f0 A068     		ldr	r0, [r4, #8]	@ float
 1054 00f2 FFF7FEFF 		bl	__aeabi_f2d
 1055              	.LVL90:
 1056 00f6 0246     		mov	r2, r0
 1057 00f8 0B46     		mov	r3, r1
 1058 00fa 4148     		ldr	r0, .L99+68
 1059 00fc FFF7FEFF 		bl	printf
 1060              	.LVL91:
 212:Src/core.c    ****         if(state.sw == SYS_ON)
 1061              		.loc 1 212 9 is_stmt 1 view .LVU279
 1062 0100 404B     		ldr	r3, .L99+72
 1063 0102 1968     		ldr	r1, [r3]
 1064 0104 4048     		ldr	r0, .L99+76
 1065 0106 FFF7FEFF 		bl	printf
 1066              	.LVL92:
 213:Src/core.c    ****             printf("Closed for %d mins and Opened for %d mins\n", (state.startTime - state.shutDown
 1067              		.loc 1 213 9 view .LVU280
 213:Src/core.c    ****             printf("Closed for %d mins and Opened for %d mins\n", (state.startTime - state.shutDown
 1068              		.loc 1 213 17 is_stmt 0 view .LVU281
 1069 010a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 213:Src/core.c    ****             printf("Closed for %d mins and Opened for %d mins\n", (state.startTime - state.shutDown
 1070              		.loc 1 213 11 view .LVU282
 1071 010c 012B     		cmp	r3, #1
 1072 010e 16D0     		beq	.L95
 216:Src/core.c    ****     }
 1073              		.loc 1 216 13 is_stmt 1 view .LVU283
 216:Src/core.c    ****     }
 1074              		.loc 1 216 73 is_stmt 0 view .LVU284
 1075 0110 2B4B     		ldr	r3, .L99+4
 1076 0112 1A6A     		ldr	r2, [r3, #32]
 216:Src/core.c    ****     }
 1077              		.loc 1 216 94 view .LVU285
 1078 0114 DB69     		ldr	r3, [r3, #28]
 216:Src/core.c    ****     }
 1079              		.loc 1 216 87 view .LVU286
 1080 0116 D31A     		subs	r3, r2, r3
 216:Src/core.c    ****     }
 1081              		.loc 1 216 125 view .LVU287
 1082 0118 0799     		ldr	r1, [sp, #28]
 1083 011a 891A     		subs	r1, r1, r2
 216:Src/core.c    ****     }
 1084              		.loc 1 216 13 view .LVU288
 1085 011c 3448     		ldr	r0, .L99+52
 1086 011e 80FB0124 		smull	r2, r4, r0, r1
 1087 0122 0C44     		add	r4, r4, r1
 1088 0124 CA17     		asrs	r2, r1, #31
ARM GAS  /tmp/ccZUXJMg.s 			page 25


 1089 0126 80FB0301 		smull	r0, r1, r0, r3
 1090 012a 1944     		add	r1, r1, r3
 1091 012c DB17     		asrs	r3, r3, #31
 1092 012e C2EB6412 		rsb	r2, r2, r4, asr #5
 1093 0132 C3EB6111 		rsb	r1, r3, r1, asr #5
 1094 0136 3548     		ldr	r0, .L99+80
 1095 0138 FFF7FEFF 		bl	printf
 1096              	.LVL93:
 1097 013c CDE7     		b	.L77
 1098              	.L95:
 214:Src/core.c    ****         else
 1099              		.loc 1 214 13 is_stmt 1 view .LVU289
 214:Src/core.c    ****         else
 1100              		.loc 1 214 73 is_stmt 0 view .LVU290
 1101 013e E269     		ldr	r2, [r4, #28]
 214:Src/core.c    ****         else
 1102              		.loc 1 214 91 view .LVU291
 1103 0140 236A     		ldr	r3, [r4, #32]
 214:Src/core.c    ****         else
 1104              		.loc 1 214 84 view .LVU292
 1105 0142 D31A     		subs	r3, r2, r3
 214:Src/core.c    ****         else
 1106              		.loc 1 214 125 view .LVU293
 1107 0144 0799     		ldr	r1, [sp, #28]
 1108 0146 891A     		subs	r1, r1, r2
 214:Src/core.c    ****         else
 1109              		.loc 1 214 13 view .LVU294
 1110 0148 2948     		ldr	r0, .L99+52
 1111 014a 80FB0124 		smull	r2, r4, r0, r1
 1112 014e 0C44     		add	r4, r4, r1
 1113 0150 CA17     		asrs	r2, r1, #31
 1114 0152 80FB0301 		smull	r0, r1, r0, r3
 1115 0156 1944     		add	r1, r1, r3
 1116 0158 DB17     		asrs	r3, r3, #31
 1117 015a C2EB6412 		rsb	r2, r2, r4, asr #5
 1118 015e C3EB6111 		rsb	r1, r3, r1, asr #5
 1119 0162 2B48     		ldr	r0, .L99+84
 1120 0164 FFF7FEFF 		bl	printf
 1121              	.LVL94:
 1122 0168 B7E7     		b	.L77
 1123              	.L94:
 1124              	.LBB10:
 219:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1125              		.loc 1 219 9 is_stmt 1 view .LVU295
 219:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1126              		.loc 1 219 37 is_stmt 0 view .LVU296
 1127 016a 079B     		ldr	r3, [sp, #28]
 219:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1128              		.loc 1 219 45 view .LVU297
 1129 016c 144A     		ldr	r2, .L99+4
 1130 016e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 219:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1131              		.loc 1 219 77 view .LVU298
 1132 0170 012A     		cmp	r2, #1
 1133 0172 1BD0     		beq	.L96
 219:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1134              		.loc 1 219 77 discriminator 2 view .LVU299
ARM GAS  /tmp/ccZUXJMg.s 			page 26


 1135 0174 1249     		ldr	r1, .L99+4
 1136 0176 096A     		ldr	r1, [r1, #32]
 1137              	.L79:
 219:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1138              		.loc 1 219 37 discriminator 4 view .LVU300
 1139 0178 5B1A     		subs	r3, r3, r1
 219:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1140              		.loc 1 219 13 discriminator 4 view .LVU301
 1141 017a 1D49     		ldr	r1, .L99+52
 1142 017c 81FB0301 		smull	r0, r1, r1, r3
 1143 0180 1944     		add	r1, r1, r3
 1144 0182 DB17     		asrs	r3, r3, #31
 1145 0184 C3EB6113 		rsb	r3, r3, r1, asr #5
 1146              	.LVL95:
 220:Src/core.c    ****         printf("There are %d minutes before air-con %s\n", remainingTime, state.sw == SYS_ON ? "clo
 1147              		.loc 1 220 9 is_stmt 1 discriminator 4 view .LVU302
 220:Src/core.c    ****         printf("There are %d minutes before air-con %s\n", remainingTime, state.sw == SYS_ON ? "clo
 1148              		.loc 1 220 68 is_stmt 0 discriminator 4 view .LVU303
 1149 0188 012A     		cmp	r2, #1
 1150 018a 12D0     		beq	.L97
 220:Src/core.c    ****         printf("There are %d minutes before air-con %s\n", remainingTime, state.sw == SYS_ON ? "clo
 1151              		.loc 1 220 68 discriminator 2 view .LVU304
 1152 018c 0C49     		ldr	r1, .L99+4
 1153 018e 0969     		ldr	r1, [r1, #16]
 1154              	.L81:
 220:Src/core.c    ****         printf("There are %d minutes before air-con %s\n", remainingTime, state.sw == SYS_ON ? "clo
 1155              		.loc 1 220 13 discriminator 4 view .LVU305
 1156 0190 C91A     		subs	r1, r1, r3
 1157              	.LVL96:
 221:Src/core.c    ****         printf("Open for %d mins and close for %d mins\n", state.tarTime[0], state.tarTime[1]);
 1158              		.loc 1 221 9 is_stmt 1 discriminator 4 view .LVU306
 1159 0192 012A     		cmp	r2, #1
 1160 0194 10D0     		beq	.L98
 221:Src/core.c    ****         printf("Open for %d mins and close for %d mins\n", state.tarTime[0], state.tarTime[1]);
 1161              		.loc 1 221 9 is_stmt 0 view .LVU307
 1162 0196 1F4A     		ldr	r2, .L99+88
 1163              	.L82:
 221:Src/core.c    ****         printf("Open for %d mins and close for %d mins\n", state.tarTime[0], state.tarTime[1]);
 1164              		.loc 1 221 9 discriminator 4 view .LVU308
 1165 0198 1F48     		ldr	r0, .L99+92
 1166 019a FFF7FEFF 		bl	printf
 1167              	.LVL97:
 222:Src/core.c    ****     }
 1168              		.loc 1 222 9 is_stmt 1 discriminator 4 view .LVU309
 1169 019e 084B     		ldr	r3, .L99+4
 1170 01a0 1A69     		ldr	r2, [r3, #16]
 1171 01a2 D968     		ldr	r1, [r3, #12]
 1172 01a4 1D48     		ldr	r0, .L99+96
 1173 01a6 FFF7FEFF 		bl	printf
 1174              	.LVL98:
 1175 01aa 96E7     		b	.L77
 1176              	.L96:
 219:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1177              		.loc 1 219 77 is_stmt 0 discriminator 1 view .LVU310
 1178 01ac 0449     		ldr	r1, .L99+4
 1179 01ae C969     		ldr	r1, [r1, #28]
 1180 01b0 E2E7     		b	.L79
ARM GAS  /tmp/ccZUXJMg.s 			page 27


 1181              	.LVL99:
 1182              	.L97:
 220:Src/core.c    ****         printf("There are %d minutes before air-con %s\n", remainingTime, state.sw == SYS_ON ? "clo
 1183              		.loc 1 220 68 discriminator 1 view .LVU311
 1184 01b2 0349     		ldr	r1, .L99+4
 1185 01b4 C968     		ldr	r1, [r1, #12]
 1186 01b6 EBE7     		b	.L81
 1187              	.LVL100:
 1188              	.L98:
 221:Src/core.c    ****         printf("Open for %d mins and close for %d mins\n", state.tarTime[0], state.tarTime[1]);
 1189              		.loc 1 221 9 view .LVU312
 1190 01b8 194A     		ldr	r2, .L99+100
 1191 01ba EDE7     		b	.L82
 1192              	.L100:
 1193              		.align	2
 1194              	.L99:
 1195 01bc 50000000 		.word	.LC11
 1196 01c0 00000000 		.word	state
 1197 01c4 00000000 		.word	.LC2
 1198 01c8 64000000 		.word	.LC12
 1199 01cc 0C000000 		.word	.LC4
 1200 01d0 08000000 		.word	.LC3
 1201 01d4 28000000 		.word	.LC6
 1202 01d8 18000000 		.word	.LC5
 1203 01dc 7C000000 		.word	.LC13
 1204 01e0 00000000 		.word	runningTime
 1205 01e4 9C000000 		.word	.LC14
 1206 01e8 34000000 		.word	.LC7
 1207 01ec B0000000 		.word	.LC15
 1208 01f0 89888888 		.word	-2004318071
 1209 01f4 B8000000 		.word	.LC16
 1210 01f8 C4000000 		.word	.LC17
 1211 01fc 3C000000 		.word	.LC8
 1212 0200 CC000000 		.word	.LC18
 1213 0204 00000000 		.word	.LANCHOR5
 1214 0208 F0000000 		.word	.LC19
 1215 020c 44010000 		.word	.LC21
 1216 0210 18010000 		.word	.LC20
 1217 0214 40000000 		.word	.LC9
 1218 0218 70010000 		.word	.LC22
 1219 021c 98010000 		.word	.LC23
 1220 0220 48000000 		.word	.LC10
 1221              	.LBE10:
 1222              		.cfi_endproc
 1223              	.LFE73:
 1225              		.global	__aeabi_f2iz
 1226              		.section	.text.move,"ax",%progbits
 1227              		.align	1
 1228              		.global	move
 1229              		.syntax unified
 1230              		.thumb
 1231              		.thumb_func
 1232              		.fpu softvfp
 1234              	move:
 1235              	.LVL101:
 1236              	.LFB74:
 228:Src/core.c    **** 
ARM GAS  /tmp/ccZUXJMg.s 			page 28


 229:Src/core.c    **** int validCheckCounter = 0;
 230:Src/core.c    **** int initTemp = 0;
 231:Src/core.c    **** void move(enum SystemSwitch pos) {
 1237              		.loc 1 231 34 is_stmt 1 view -0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 0
 1240              		@ frame_needed = 0, uses_anonymous_args = 0
 1241              		.loc 1 231 34 is_stmt 0 view .LVU314
 1242 0000 08B5     		push	{r3, lr}
 1243              	.LCFI11:
 1244              		.cfi_def_cfa_offset 8
 1245              		.cfi_offset 3, -8
 1246              		.cfi_offset 14, -4
 232:Src/core.c    ****     if(pos == SYS_ON) {
 1247              		.loc 1 232 5 is_stmt 1 view .LVU315
 1248              		.loc 1 232 7 is_stmt 0 view .LVU316
 1249 0002 0128     		cmp	r0, #1
 1250 0004 1ED0     		beq	.L110
 233:Src/core.c    ****         HAL_Delay(100);
 234:Src/core.c    ****         __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, servo2_up);
 235:Src/core.c    ****         HAL_Delay(2000);
 236:Src/core.c    ****         __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_1, servo1_up);
 237:Src/core.c    ****         HAL_Delay(100);
 238:Src/core.c    **** 
 239:Src/core.c    ****         while(HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET) {
 240:Src/core.c    ****             HAL_Delay(100);
 241:Src/core.c    ****         }
 242:Src/core.c    **** 
 243:Src/core.c    ****         state.startTime = runningTime;
 244:Src/core.c    ****         if (state.mode == TEMP_MODE) {initTemp = state.temp; validCheckCounter = 0;}
 245:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_RESET);
 246:Src/core.c    ****     }
 247:Src/core.c    **** 
 248:Src/core.c    ****     else {
 249:Src/core.c    ****         HAL_Delay(100);
 1251              		.loc 1 249 9 is_stmt 1 view .LVU317
 1252 0006 6420     		movs	r0, #100
 1253              	.LVL102:
 1254              		.loc 1 249 9 is_stmt 0 view .LVU318
 1255 0008 FFF7FEFF 		bl	HAL_Delay
 1256              	.LVL103:
 250:Src/core.c    ****         __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_1, servo1_down);
 1257              		.loc 1 250 9 is_stmt 1 view .LVU319
 1258 000c 2E4B     		ldr	r3, .L113
 1259 000e 1B68     		ldr	r3, [r3]
 1260 0010 2E4A     		ldr	r2, .L113+4
 1261 0012 1268     		ldr	r2, [r2]
 1262 0014 5A63     		str	r2, [r3, #52]
 251:Src/core.c    ****         HAL_Delay(2000);
 1263              		.loc 1 251 9 view .LVU320
 1264 0016 4FF4FA60 		mov	r0, #2000
 1265 001a FFF7FEFF 		bl	HAL_Delay
 1266              	.LVL104:
 252:Src/core.c    ****         __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, servo2_down);
 1267              		.loc 1 252 9 view .LVU321
 1268 001e 2C4B     		ldr	r3, .L113+8
 1269 0020 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccZUXJMg.s 			page 29


 1270 0022 2C4A     		ldr	r2, .L113+12
 1271 0024 1268     		ldr	r2, [r2]
 1272 0026 5A63     		str	r2, [r3, #52]
 253:Src/core.c    ****         HAL_Delay(100);
 1273              		.loc 1 253 9 view .LVU322
 1274 0028 6420     		movs	r0, #100
 1275 002a FFF7FEFF 		bl	HAL_Delay
 1276              	.LVL105:
 254:Src/core.c    **** 
 255:Src/core.c    ****         while(HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_SET) {
 1277              		.loc 1 255 9 view .LVU323
 1278              	.L107:
 1279              		.loc 1 255 15 is_stmt 0 view .LVU324
 1280 002e 4FF40061 		mov	r1, #2048
 1281 0032 2948     		ldr	r0, .L113+16
 1282 0034 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1283              	.LVL106:
 1284              		.loc 1 255 14 view .LVU325
 1285 0038 0128     		cmp	r0, #1
 1286 003a 3AD1     		bne	.L111
 256:Src/core.c    ****             HAL_Delay(100);
 1287              		.loc 1 256 13 is_stmt 1 view .LVU326
 1288 003c 6420     		movs	r0, #100
 1289 003e FFF7FEFF 		bl	HAL_Delay
 1290              	.LVL107:
 1291 0042 F4E7     		b	.L107
 1292              	.LVL108:
 1293              	.L110:
 233:Src/core.c    ****         __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, servo2_up);
 1294              		.loc 1 233 9 view .LVU327
 1295 0044 6420     		movs	r0, #100
 1296              	.LVL109:
 233:Src/core.c    ****         __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, servo2_up);
 1297              		.loc 1 233 9 is_stmt 0 view .LVU328
 1298 0046 FFF7FEFF 		bl	HAL_Delay
 1299              	.LVL110:
 234:Src/core.c    ****         HAL_Delay(2000);
 1300              		.loc 1 234 9 is_stmt 1 view .LVU329
 1301 004a 214B     		ldr	r3, .L113+8
 1302 004c 1B68     		ldr	r3, [r3]
 1303 004e 234A     		ldr	r2, .L113+20
 1304 0050 1268     		ldr	r2, [r2]
 1305 0052 5A63     		str	r2, [r3, #52]
 235:Src/core.c    ****         __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_1, servo1_up);
 1306              		.loc 1 235 9 view .LVU330
 1307 0054 4FF4FA60 		mov	r0, #2000
 1308 0058 FFF7FEFF 		bl	HAL_Delay
 1309              	.LVL111:
 236:Src/core.c    ****         HAL_Delay(100);
 1310              		.loc 1 236 9 view .LVU331
 1311 005c 1A4B     		ldr	r3, .L113
 1312 005e 1B68     		ldr	r3, [r3]
 1313 0060 1F4A     		ldr	r2, .L113+24
 1314 0062 1268     		ldr	r2, [r2]
 1315 0064 5A63     		str	r2, [r3, #52]
 237:Src/core.c    **** 
 1316              		.loc 1 237 9 view .LVU332
ARM GAS  /tmp/ccZUXJMg.s 			page 30


 1317 0066 6420     		movs	r0, #100
 1318 0068 FFF7FEFF 		bl	HAL_Delay
 1319              	.LVL112:
 239:Src/core.c    ****             HAL_Delay(100);
 1320              		.loc 1 239 9 view .LVU333
 239:Src/core.c    ****             HAL_Delay(100);
 1321              		.loc 1 239 14 is_stmt 0 view .LVU334
 1322 006c 02E0     		b	.L103
 1323              	.L104:
 240:Src/core.c    ****         }
 1324              		.loc 1 240 13 is_stmt 1 view .LVU335
 1325 006e 6420     		movs	r0, #100
 1326 0070 FFF7FEFF 		bl	HAL_Delay
 1327              	.LVL113:
 1328              	.L103:
 239:Src/core.c    ****             HAL_Delay(100);
 1329              		.loc 1 239 15 is_stmt 0 view .LVU336
 1330 0074 4FF40061 		mov	r1, #2048
 1331 0078 1748     		ldr	r0, .L113+16
 1332 007a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1333              	.LVL114:
 239:Src/core.c    ****             HAL_Delay(100);
 1334              		.loc 1 239 14 view .LVU337
 1335 007e 0028     		cmp	r0, #0
 1336 0080 F5D0     		beq	.L104
 243:Src/core.c    ****         if (state.mode == TEMP_MODE) {initTemp = state.temp; validCheckCounter = 0;}
 1337              		.loc 1 243 9 is_stmt 1 view .LVU338
 243:Src/core.c    ****         if (state.mode == TEMP_MODE) {initTemp = state.temp; validCheckCounter = 0;}
 1338              		.loc 1 243 25 is_stmt 0 view .LVU339
 1339 0082 184B     		ldr	r3, .L113+28
 1340 0084 184A     		ldr	r2, .L113+32
 1341 0086 1268     		ldr	r2, [r2]
 1342 0088 DA61     		str	r2, [r3, #28]
 244:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_RESET);
 1343              		.loc 1 244 9 is_stmt 1 view .LVU340
 244:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_RESET);
 1344              		.loc 1 244 18 is_stmt 0 view .LVU341
 1345 008a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 244:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_RESET);
 1346              		.loc 1 244 12 view .LVU342
 1347 008c 022B     		cmp	r3, #2
 1348 008e 06D0     		beq	.L112
 1349              	.L105:
 245:Src/core.c    ****     }
 1350              		.loc 1 245 9 is_stmt 1 view .LVU343
 1351 0090 0022     		movs	r2, #0
 1352 0092 4FF40051 		mov	r1, #8192
 1353 0096 1548     		ldr	r0, .L113+36
 1354 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1355              	.LVL115:
 1356 009c 13E0     		b	.L101
 1357              	.L112:
 244:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_RESET);
 1358              		.loc 1 244 39 discriminator 1 view .LVU344
 244:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_RESET);
 1359              		.loc 1 244 48 is_stmt 0 discriminator 1 view .LVU345
 1360 009e 114B     		ldr	r3, .L113+28
ARM GAS  /tmp/ccZUXJMg.s 			page 31


 1361 00a0 9869     		ldr	r0, [r3, #24]	@ float
 1362 00a2 FFF7FEFF 		bl	__aeabi_f2iz
 1363              	.LVL116:
 1364 00a6 124B     		ldr	r3, .L113+40
 1365 00a8 1860     		str	r0, [r3]
 244:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_RESET);
 1366              		.loc 1 244 62 is_stmt 1 discriminator 1 view .LVU346
 244:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_RESET);
 1367              		.loc 1 244 80 is_stmt 0 discriminator 1 view .LVU347
 1368 00aa 124B     		ldr	r3, .L113+44
 1369 00ac 0022     		movs	r2, #0
 1370 00ae 1A60     		str	r2, [r3]
 1371 00b0 EEE7     		b	.L105
 1372              	.L111:
 257:Src/core.c    ****         }
 258:Src/core.c    **** 
 259:Src/core.c    ****         state.shutDownTime = runningTime;
 1373              		.loc 1 259 9 is_stmt 1 view .LVU348
 1374              		.loc 1 259 28 is_stmt 0 view .LVU349
 1375 00b2 0D4B     		ldr	r3, .L113+32
 1376 00b4 1A68     		ldr	r2, [r3]
 1377 00b6 0B4B     		ldr	r3, .L113+28
 1378 00b8 1A62     		str	r2, [r3, #32]
 260:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_SET);
 1379              		.loc 1 260 9 is_stmt 1 view .LVU350
 1380 00ba 0122     		movs	r2, #1
 1381 00bc 4FF40051 		mov	r1, #8192
 1382 00c0 0A48     		ldr	r0, .L113+36
 1383 00c2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1384              	.LVL117:
 1385              	.L101:
 261:Src/core.c    ****     }
 262:Src/core.c    **** }
 1386              		.loc 1 262 1 is_stmt 0 view .LVU351
 1387 00c6 08BD     		pop	{r3, pc}
 1388              	.L114:
 1389              		.align	2
 1390              	.L113:
 1391 00c8 00000000 		.word	htim1
 1392 00cc 00000000 		.word	.LANCHOR1
 1393 00d0 00000000 		.word	htim2
 1394 00d4 00000000 		.word	.LANCHOR0
 1395 00d8 000C0140 		.word	1073810432
 1396 00dc 00000000 		.word	.LANCHOR2
 1397 00e0 00000000 		.word	.LANCHOR3
 1398 00e4 00000000 		.word	state
 1399 00e8 00000000 		.word	runningTime
 1400 00ec 00100140 		.word	1073811456
 1401 00f0 00000000 		.word	.LANCHOR6
 1402 00f4 00000000 		.word	.LANCHOR7
 1403              		.cfi_endproc
 1404              	.LFE74:
 1406              		.global	__aeabi_ui2f
 1407              		.global	__aeabi_fmul
 1408              		.section	.text.update_info,"ax",%progbits
 1409              		.align	1
 1410              		.global	update_info
ARM GAS  /tmp/ccZUXJMg.s 			page 32


 1411              		.syntax unified
 1412              		.thumb
 1413              		.thumb_func
 1414              		.fpu softvfp
 1416              	update_info:
 1417              	.LFB72:
 154:Src/core.c    ****     strcpy(msg, "");
 1418              		.loc 1 154 20 is_stmt 1 view -0
 1419              		.cfi_startproc
 1420              		@ args = 0, pretend = 0, frame = 0
 1421              		@ frame_needed = 0, uses_anonymous_args = 0
 1422 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1423              	.LCFI12:
 1424              		.cfi_def_cfa_offset 24
 1425              		.cfi_offset 3, -24
 1426              		.cfi_offset 4, -20
 1427              		.cfi_offset 5, -16
 1428              		.cfi_offset 6, -12
 1429              		.cfi_offset 7, -8
 1430              		.cfi_offset 14, -4
 155:Src/core.c    ****     msg[0] = '0';
 1431              		.loc 1 155 5 view .LVU353
 156:Src/core.c    ****     enum SystemSwitch last = state.sw;
 1432              		.loc 1 156 5 view .LVU354
 156:Src/core.c    ****     enum SystemSwitch last = state.sw;
 1433              		.loc 1 156 12 is_stmt 0 view .LVU355
 1434 0002 4E4B     		ldr	r3, .L133
 1435 0004 3022     		movs	r2, #48
 1436 0006 1A60     		str	r2, [r3]
 157:Src/core.c    ****     enum Mode lastMode = state.mode;
 1437              		.loc 1 157 5 is_stmt 1 view .LVU356
 157:Src/core.c    ****     enum Mode lastMode = state.mode;
 1438              		.loc 1 157 23 is_stmt 0 view .LVU357
 1439 0008 4D4C     		ldr	r4, .L133+4
 1440 000a 2778     		ldrb	r7, [r4]	@ zero_extendqisi2
 1441              	.LVL118:
 158:Src/core.c    ****     state.re_sw = HAL_GPIO_ReadPin(REMOTE_SWITCH_GPIO_Port, REMOTE_SWITCH_Pin) == GPIO_PIN_RESET ? 
 1442              		.loc 1 158 5 is_stmt 1 view .LVU358
 158:Src/core.c    ****     state.re_sw = HAL_GPIO_ReadPin(REMOTE_SWITCH_GPIO_Port, REMOTE_SWITCH_Pin) == GPIO_PIN_RESET ? 
 1443              		.loc 1 158 15 is_stmt 0 view .LVU359
 1444 000c 2679     		ldrb	r6, [r4, #4]	@ zero_extendqisi2
 1445              	.LVL119:
 159:Src/core.c    ****     if(state.re_sw != REMOTE_ON) {
 1446              		.loc 1 159 5 is_stmt 1 view .LVU360
 159:Src/core.c    ****     if(state.re_sw != REMOTE_ON) {
 1447              		.loc 1 159 19 is_stmt 0 view .LVU361
 1448 000e 0221     		movs	r1, #2
 1449 0010 4C48     		ldr	r0, .L133+8
 1450 0012 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1451              	.LVL120:
 159:Src/core.c    ****     if(state.re_sw != REMOTE_ON) {
 1452              		.loc 1 159 110 view .LVU362
 1453 0016 0030     		adds	r0, r0, #0
 1454 0018 18BF     		it	ne
 1455 001a 0120     		movne	r0, #1
 159:Src/core.c    ****     if(state.re_sw != REMOTE_ON) {
 1456              		.loc 1 159 17 view .LVU363
ARM GAS  /tmp/ccZUXJMg.s 			page 33


 1457 001c E070     		strb	r0, [r4, #3]
 160:Src/core.c    ****         state.sw = HAL_GPIO_ReadPin(MAIN_SWITCH_GPIO_Port, MAIN_SWITCH_Pin) == GPIO_PIN_RESET ? SYS
 1458              		.loc 1 160 5 is_stmt 1 view .LVU364
 160:Src/core.c    ****         state.sw = HAL_GPIO_ReadPin(MAIN_SWITCH_GPIO_Port, MAIN_SWITCH_Pin) == GPIO_PIN_RESET ? SYS
 1459              		.loc 1 160 7 is_stmt 0 view .LVU365
 1460 001e 0028     		cmp	r0, #0
 1461 0020 3AD1     		bne	.L127
 1462              	.L116:
 169:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 1463              		.loc 1 169 5 is_stmt 1 view .LVU366
 169:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 1464              		.loc 1 169 13 is_stmt 0 view .LVU367
 1465 0022 474B     		ldr	r3, .L133+4
 1466 0024 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 169:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 1467              		.loc 1 169 7 view .LVU368
 1468 0026 1BB9     		cbnz	r3, .L117
 169:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 1469              		.loc 1 169 49 discriminator 1 view .LVU369
 1470 0028 474B     		ldr	r3, .L133+12
 1471 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 169:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 1472              		.loc 1 169 33 discriminator 1 view .LVU370
 1473 002c 002B     		cmp	r3, #0
 1474 002e 4DD1     		bne	.L128
 1475              	.L117:
 170:Src/core.c    ****     state.off_sw = HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET ? OFF_O
 1476              		.loc 1 170 5 is_stmt 1 view .LVU371
 170:Src/core.c    ****     state.off_sw = HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET ? OFF_O
 1477              		.loc 1 170 19 is_stmt 0 view .LVU372
 1478 0030 444D     		ldr	r5, .L133+8
 1479 0032 4FF48061 		mov	r1, #1024
 1480 0036 2846     		mov	r0, r5
 1481 0038 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1482              	.LVL121:
 170:Src/core.c    ****     state.off_sw = HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET ? OFF_O
 1483              		.loc 1 170 99 view .LVU373
 1484 003c 0030     		adds	r0, r0, #0
 1485 003e 18BF     		it	ne
 1486 0040 0120     		movne	r0, #1
 170:Src/core.c    ****     state.off_sw = HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET ? OFF_O
 1487              		.loc 1 170 17 view .LVU374
 1488 0042 3F4C     		ldr	r4, .L133+4
 1489 0044 6070     		strb	r0, [r4, #1]
 171:Src/core.c    ****     state.temp = HAL_ADC_GetValue(&hadc1) * 0.0008056f * 100;
 1490              		.loc 1 171 5 is_stmt 1 view .LVU375
 171:Src/core.c    ****     state.temp = HAL_ADC_GetValue(&hadc1) * 0.0008056f * 100;
 1491              		.loc 1 171 20 is_stmt 0 view .LVU376
 1492 0046 4FF40061 		mov	r1, #2048
 1493 004a 2846     		mov	r0, r5
 1494 004c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1495              	.LVL122:
 171:Src/core.c    ****     state.temp = HAL_ADC_GetValue(&hadc1) * 0.0008056f * 100;
 1496              		.loc 1 171 103 view .LVU377
 1497 0050 0030     		adds	r0, r0, #0
 1498 0052 18BF     		it	ne
 1499 0054 0120     		movne	r0, #1
ARM GAS  /tmp/ccZUXJMg.s 			page 34


 171:Src/core.c    ****     state.temp = HAL_ADC_GetValue(&hadc1) * 0.0008056f * 100;
 1500              		.loc 1 171 18 view .LVU378
 1501 0056 A070     		strb	r0, [r4, #2]
 172:Src/core.c    ****     if(last != state.sw) {
 1502              		.loc 1 172 5 is_stmt 1 view .LVU379
 172:Src/core.c    ****     if(last != state.sw) {
 1503              		.loc 1 172 18 is_stmt 0 view .LVU380
 1504 0058 3C48     		ldr	r0, .L133+16
 1505 005a FFF7FEFF 		bl	HAL_ADC_GetValue
 1506              	.LVL123:
 172:Src/core.c    ****     if(last != state.sw) {
 1507              		.loc 1 172 43 view .LVU381
 1508 005e FFF7FEFF 		bl	__aeabi_ui2f
 1509              	.LVL124:
 1510 0062 3B49     		ldr	r1, .L133+20
 1511 0064 FFF7FEFF 		bl	__aeabi_fmul
 1512              	.LVL125:
 172:Src/core.c    ****     if(last != state.sw) {
 1513              		.loc 1 172 56 view .LVU382
 1514 0068 3A49     		ldr	r1, .L133+24
 1515 006a FFF7FEFF 		bl	__aeabi_fmul
 1516              	.LVL126:
 172:Src/core.c    ****     if(last != state.sw) {
 1517              		.loc 1 172 16 view .LVU383
 1518 006e A061     		str	r0, [r4, #24]	@ float
 173:Src/core.c    ****         move(state.sw);
 1519              		.loc 1 173 5 is_stmt 1 view .LVU384
 173:Src/core.c    ****         move(state.sw);
 1520              		.loc 1 173 21 is_stmt 0 view .LVU385
 1521 0070 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 173:Src/core.c    ****         move(state.sw);
 1522              		.loc 1 173 7 view .LVU386
 1523 0072 B842     		cmp	r0, r7
 1524 0074 2ED1     		bne	.L129
 1525              	.L118:
 178:Src/core.c    ****         move(state.sw);
 1526              		.loc 1 178 5 is_stmt 1 view .LVU387
 178:Src/core.c    ****         move(state.sw);
 1527              		.loc 1 178 25 is_stmt 0 view .LVU388
 1528 0076 324B     		ldr	r3, .L133+4
 1529 0078 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 178:Src/core.c    ****         move(state.sw);
 1530              		.loc 1 178 7 view .LVU389
 1531 007a B342     		cmp	r3, r6
 1532 007c 40D1     		bne	.L130
 1533              	.L120:
 184:Src/core.c    ****     if(msg[0] != '0') printf(msg);
 1534              		.loc 1 184 5 is_stmt 1 view .LVU390
 1535 007e 304B     		ldr	r3, .L133+4
 1536 0080 5969     		ldr	r1, [r3, #20]
 1537 0082 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 1538 0084 FFF7FEFF 		bl	changeLight
 1539              	.LVL127:
 185:Src/core.c    **** }
 1540              		.loc 1 185 5 view .LVU391
 185:Src/core.c    **** }
 1541              		.loc 1 185 11 is_stmt 0 view .LVU392
ARM GAS  /tmp/ccZUXJMg.s 			page 35


 1542 0088 2C4B     		ldr	r3, .L133
 1543 008a 1B68     		ldr	r3, [r3]
 185:Src/core.c    **** }
 1544              		.loc 1 185 7 view .LVU393
 1545 008c 302B     		cmp	r3, #48
 1546 008e 02D0     		beq	.L115
 185:Src/core.c    **** }
 1547              		.loc 1 185 23 is_stmt 1 discriminator 1 view .LVU394
 1548 0090 2A48     		ldr	r0, .L133
 1549 0092 FFF7FEFF 		bl	printf
 1550              	.LVL128:
 1551              	.L115:
 186:Src/core.c    **** 
 1552              		.loc 1 186 1 is_stmt 0 view .LVU395
 1553 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1554              	.LVL129:
 1555              	.L127:
 161:Src/core.c    ****         state.mode = ONOFF_MODE;
 1556              		.loc 1 161 9 is_stmt 1 view .LVU396
 161:Src/core.c    ****         state.mode = ONOFF_MODE;
 1557              		.loc 1 161 20 is_stmt 0 view .LVU397
 1558 0098 0121     		movs	r1, #1
 1559 009a 2A48     		ldr	r0, .L133+8
 1560 009c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1561              	.LVL130:
 161:Src/core.c    ****         state.mode = ONOFF_MODE;
 1562              		.loc 1 161 104 view .LVU398
 1563 00a0 B0FA80F0 		clz	r0, r0
 1564 00a4 4009     		lsrs	r0, r0, #5
 161:Src/core.c    ****         state.mode = ONOFF_MODE;
 1565              		.loc 1 161 18 view .LVU399
 1566 00a6 2070     		strb	r0, [r4]
 162:Src/core.c    ****         if(Uart1_Rx_Cnt != 0) {
 1567              		.loc 1 162 9 is_stmt 1 view .LVU400
 162:Src/core.c    ****         if(Uart1_Rx_Cnt != 0) {
 1568              		.loc 1 162 20 is_stmt 0 view .LVU401
 1569 00a8 0022     		movs	r2, #0
 1570 00aa 2271     		strb	r2, [r4, #4]
 163:Src/core.c    ****             Uart1_Rx_Cnt = 0;
 1571              		.loc 1 163 9 is_stmt 1 view .LVU402
 163:Src/core.c    ****             Uart1_Rx_Cnt = 0;
 1572              		.loc 1 163 25 is_stmt 0 view .LVU403
 1573 00ac 264B     		ldr	r3, .L133+12
 1574 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 163:Src/core.c    ****             Uart1_Rx_Cnt = 0;
 1575              		.loc 1 163 11 view .LVU404
 1576 00b0 002B     		cmp	r3, #0
 1577 00b2 B6D0     		beq	.L116
 164:Src/core.c    ****             memset(RxBuffer, 0x00, sizeof(RxBuffer));
 1578              		.loc 1 164 13 is_stmt 1 view .LVU405
 164:Src/core.c    ****             memset(RxBuffer, 0x00, sizeof(RxBuffer));
 1579              		.loc 1 164 26 is_stmt 0 view .LVU406
 1580 00b4 1146     		mov	r1, r2
 1581 00b6 244B     		ldr	r3, .L133+12
 1582 00b8 1A70     		strb	r2, [r3]
 165:Src/core.c    ****             printf("Remote control is not ON\n");
 1583              		.loc 1 165 13 is_stmt 1 view .LVU407
ARM GAS  /tmp/ccZUXJMg.s 			page 36


 1584 00ba 4FF40072 		mov	r2, #512
 1585 00be 2648     		ldr	r0, .L133+28
 1586 00c0 FFF7FEFF 		bl	memset
 1587              	.LVL131:
 166:Src/core.c    ****         }
 1588              		.loc 1 166 13 view .LVU408
 1589 00c4 2548     		ldr	r0, .L133+32
 1590 00c6 FFF7FEFF 		bl	puts
 1591              	.LVL132:
 1592 00ca AAE7     		b	.L116
 1593              	.L128:
 169:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 1594              		.loc 1 169 55 discriminator 2 view .LVU409
 1595 00cc 1B48     		ldr	r0, .L133
 1596 00ce FFF7FEFF 		bl	bluetooth_decode
 1597              	.LVL133:
 1598 00d2 ADE7     		b	.L117
 1599              	.L129:
 1600              	.LBB11:
 174:Src/core.c    ****         strcpy(msg, "Change the system to ");
 1601              		.loc 1 174 9 view .LVU410
 1602 00d4 FFF7FEFF 		bl	move
 1603              	.LVL134:
 175:Src/core.c    ****         strcat(msg, state.sw == SYS_ON ? "ON\n" : "OFF\n");
 1604              		.loc 1 175 9 view .LVU411
 1605 00d8 184C     		ldr	r4, .L133
 1606 00da 214D     		ldr	r5, .L133+36
 1607 00dc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1608 00de 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1609 00e0 95E80300 		ldm	r5, {r0, r1}
 1610 00e4 44F8040B 		str	r0, [r4], #4
 1611 00e8 2180     		strh	r1, [r4]	@ movhi
 176:Src/core.c    ****     }
 1612              		.loc 1 176 9 view .LVU412
 176:Src/core.c    ****     }
 1613              		.loc 1 176 26 is_stmt 0 view .LVU413
 1614 00ea 154B     		ldr	r3, .L133+4
 1615 00ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 176:Src/core.c    ****     }
 1616              		.loc 1 176 9 view .LVU414
 1617 00ee 012B     		cmp	r3, #1
 1618 00f0 04D0     		beq	.L131
 1619 00f2 1C49     		ldr	r1, .L133+40
 1620              	.L119:
 176:Src/core.c    ****     }
 1621              		.loc 1 176 9 discriminator 4 view .LVU415
 1622 00f4 1148     		ldr	r0, .L133
 1623 00f6 FFF7FEFF 		bl	strcat
 1624              	.LVL135:
 1625 00fa BCE7     		b	.L118
 1626              	.L131:
 176:Src/core.c    ****     }
 1627              		.loc 1 176 9 view .LVU416
 1628 00fc 1A49     		ldr	r1, .L133+44
 1629 00fe F9E7     		b	.L119
 1630              	.L130:
 1631              	.LBE11:
ARM GAS  /tmp/ccZUXJMg.s 			page 37


 1632              	.LBB12:
 179:Src/core.c    ****         strcpy(msg, "Change mode to ");
 1633              		.loc 1 179 9 is_stmt 1 view .LVU417
 179:Src/core.c    ****         strcpy(msg, "Change mode to ");
 1634              		.loc 1 179 19 is_stmt 0 view .LVU418
 1635 0100 0F4D     		ldr	r5, .L133+4
 179:Src/core.c    ****         strcpy(msg, "Change mode to ");
 1636              		.loc 1 179 9 view .LVU419
 1637 0102 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1638 0104 FFF7FEFF 		bl	move
 1639              	.LVL136:
 180:Src/core.c    ****         strcat(msg, state.mode == ONOFF_MODE ? "ONOFF mode\n" : state.mode == TIME_MODE ? "TIME mod
 1640              		.loc 1 180 9 is_stmt 1 view .LVU420
 1641 0108 0C4C     		ldr	r4, .L133
 1642 010a 184B     		ldr	r3, .L133+48
 1643 010c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1644 010e 84E80F00 		stm	r4, {r0, r1, r2, r3}
 181:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 1645              		.loc 1 181 9 view .LVU421
 181:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 1646              		.loc 1 181 26 is_stmt 0 view .LVU422
 1647 0112 2C79     		ldrb	r4, [r5, #4]	@ zero_extendqisi2
 181:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 1648              		.loc 1 181 9 view .LVU423
 1649 0114 2CB1     		cbz	r4, .L124
 181:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 1650              		.loc 1 181 9 discriminator 1 view .LVU424
 1651 0116 012C     		cmp	r4, #1
 1652 0118 01D0     		beq	.L132
 181:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 1653              		.loc 1 181 9 view .LVU425
 1654 011a 1549     		ldr	r1, .L133+52
 1655 011c 02E0     		b	.L121
 1656              	.L132:
 1657 011e 1549     		ldr	r1, .L133+56
 1658 0120 00E0     		b	.L121
 1659              	.L124:
 1660 0122 1549     		ldr	r1, .L133+60
 1661              	.L121:
 181:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 1662              		.loc 1 181 9 discriminator 8 view .LVU426
 1663 0124 0548     		ldr	r0, .L133
 1664 0126 FFF7FEFF 		bl	strcat
 1665              	.LVL137:
 182:Src/core.c    ****     }
 1666              		.loc 1 182 9 is_stmt 1 discriminator 8 view .LVU427
 182:Src/core.c    ****     }
 1667              		.loc 1 182 11 is_stmt 0 discriminator 8 view .LVU428
 1668 012a 012C     		cmp	r4, #1
 1669 012c A7D1     		bne	.L120
 182:Src/core.c    ****     }
 1670              		.loc 1 182 38 is_stmt 1 discriminator 1 view .LVU429
 182:Src/core.c    ****     }
 1671              		.loc 1 182 54 is_stmt 0 discriminator 1 view .LVU430
 1672 012e 134B     		ldr	r3, .L133+64
 1673 0130 1A68     		ldr	r2, [r3]
 1674 0132 034B     		ldr	r3, .L133+4
ARM GAS  /tmp/ccZUXJMg.s 			page 38


 1675 0134 DA61     		str	r2, [r3, #28]
 182:Src/core.c    ****     }
 1676              		.loc 1 182 69 is_stmt 1 discriminator 1 view .LVU431
 182:Src/core.c    ****     }
 1677              		.loc 1 182 88 is_stmt 0 discriminator 1 view .LVU432
 1678 0136 1A62     		str	r2, [r3, #32]
 1679 0138 A1E7     		b	.L120
 1680              	.L134:
 1681 013a 00BF     		.align	2
 1682              	.L133:
 1683 013c 00000000 		.word	msg
 1684 0140 00000000 		.word	state
 1685 0144 000C0140 		.word	1073810432
 1686 0148 00000000 		.word	.LANCHOR4
 1687 014c 00000000 		.word	hadc1
 1688 0150 E72E533A 		.word	978530023
 1689 0154 0000C842 		.word	1120403456
 1690 0158 00000000 		.word	RxBuffer
 1691 015c 24000000 		.word	.LC27
 1692 0160 40000000 		.word	.LC28
 1693 0164 00000000 		.word	.LC2
 1694 0168 08000000 		.word	.LC3
 1695 016c 58000000 		.word	.LC29
 1696 0170 00000000 		.word	.LC24
 1697 0174 18000000 		.word	.LC26
 1698 0178 0C000000 		.word	.LC25
 1699 017c 00000000 		.word	runningTime
 1700              	.LBE12:
 1701              		.cfi_endproc
 1702              	.LFE72:
 1704              		.global	__aeabi_dsub
 1705              		.global	__aeabi_dcmplt
 1706              		.global	__aeabi_dadd
 1707              		.global	__aeabi_dcmpgt
 1708              		.global	__aeabi_fcmpgt
 1709              		.section	.text.tempCheck,"ax",%progbits
 1710              		.align	1
 1711              		.global	tempCheck
 1712              		.syntax unified
 1713              		.thumb
 1714              		.thumb_func
 1715              		.fpu softvfp
 1717              	tempCheck:
 1718              	.LFB75:
 263:Src/core.c    **** 
 264:Src/core.c    **** int checkounter = 0;
 265:Src/core.c    **** void tempCheck() {
 1719              		.loc 1 265 18 is_stmt 1 view -0
 1720              		.cfi_startproc
 1721              		@ args = 0, pretend = 0, frame = 0
 1722              		@ frame_needed = 0, uses_anonymous_args = 0
 1723 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1724              	.LCFI13:
 1725              		.cfi_def_cfa_offset 24
 1726              		.cfi_offset 3, -24
 1727              		.cfi_offset 4, -20
 1728              		.cfi_offset 5, -16
ARM GAS  /tmp/ccZUXJMg.s 			page 39


 1729              		.cfi_offset 6, -12
 1730              		.cfi_offset 7, -8
 1731              		.cfi_offset 14, -4
 266:Src/core.c    ****     if(state.sw == SYS_ON)
 1732              		.loc 1 266 5 view .LVU434
 1733              		.loc 1 266 13 is_stmt 0 view .LVU435
 1734 0002 454B     		ldr	r3, .L157
 1735 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1736              		.loc 1 266 7 view .LVU436
 1737 0006 012C     		cmp	r4, #1
 1738 0008 3CD0     		beq	.L154
 1739              	.L136:
 267:Src/core.c    ****         if(state.temp < state.tarTemp - 0.5)
 268:Src/core.c    ****             state.tempAchieveCounter++;
 269:Src/core.c    ****     if(state.sw == SYS_OFF)
 1740              		.loc 1 269 5 is_stmt 1 view .LVU437
 1741              		.loc 1 269 7 is_stmt 0 view .LVU438
 1742 000a B4B9     		cbnz	r4, .L138
 270:Src/core.c    ****         if(state.temp > state.tarTemp + 0.5)
 1743              		.loc 1 270 9 is_stmt 1 view .LVU439
 1744              		.loc 1 270 17 is_stmt 0 view .LVU440
 1745 000c 424D     		ldr	r5, .L157
 1746 000e A869     		ldr	r0, [r5, #24]	@ float
 1747 0010 FFF7FEFF 		bl	__aeabi_f2d
 1748              	.LVL138:
 1749 0014 0646     		mov	r6, r0
 1750 0016 0F46     		mov	r7, r1
 1751              		.loc 1 270 30 view .LVU441
 1752 0018 A868     		ldr	r0, [r5, #8]	@ float
 1753 001a FFF7FEFF 		bl	__aeabi_f2d
 1754              	.LVL139:
 1755              		.loc 1 270 39 view .LVU442
 1756 001e 0022     		movs	r2, #0
 1757 0020 3E4B     		ldr	r3, .L157+4
 1758 0022 FFF7FEFF 		bl	__aeabi_dadd
 1759              	.LVL140:
 1760              		.loc 1 270 11 view .LVU443
 1761 0026 0246     		mov	r2, r0
 1762 0028 0B46     		mov	r3, r1
 1763 002a 3046     		mov	r0, r6
 1764 002c 3946     		mov	r1, r7
 1765 002e FFF7FEFF 		bl	__aeabi_dcmpgt
 1766              	.LVL141:
 1767 0032 10B1     		cbz	r0, .L138
 271:Src/core.c    ****             state.tempAchieveCounter++;
 1768              		.loc 1 271 13 is_stmt 1 view .LVU444
 1769              		.loc 1 271 18 is_stmt 0 view .LVU445
 1770 0034 6B6A     		ldr	r3, [r5, #36]
 1771              		.loc 1 271 37 view .LVU446
 1772 0036 0133     		adds	r3, r3, #1
 1773 0038 6B62     		str	r3, [r5, #36]
 1774              	.L138:
 272:Src/core.c    ****     if(checkounter >= 60) {
 1775              		.loc 1 272 5 is_stmt 1 view .LVU447
 1776              		.loc 1 272 20 is_stmt 0 view .LVU448
 1777 003a 394B     		ldr	r3, .L157+8
 1778 003c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccZUXJMg.s 			page 40


 1779              		.loc 1 272 7 view .LVU449
 1780 003e 3B2B     		cmp	r3, #59
 1781 0040 3DDD     		ble	.L140
 273:Src/core.c    ****         if(state.tempAchieveCounter >= 54) {
 1782              		.loc 1 273 9 is_stmt 1 view .LVU450
 1783              		.loc 1 273 17 is_stmt 0 view .LVU451
 1784 0042 354B     		ldr	r3, .L157
 1785 0044 5B6A     		ldr	r3, [r3, #36]
 1786              		.loc 1 273 11 view .LVU452
 1787 0046 352B     		cmp	r3, #53
 1788 0048 08DD     		ble	.L141
 274:Src/core.c    ****             if(state.sw == SYS_ON) state.sw = SYS_OFF;
 1789              		.loc 1 274 13 is_stmt 1 view .LVU453
 1790              		.loc 1 274 15 is_stmt 0 view .LVU454
 1791 004a 012C     		cmp	r4, #1
 1792 004c 33D0     		beq	.L155
 275:Src/core.c    ****             else state.sw = SYS_ON;
 1793              		.loc 1 275 18 is_stmt 1 view .LVU455
 1794              		.loc 1 275 27 is_stmt 0 view .LVU456
 1795 004e 324B     		ldr	r3, .L157
 1796 0050 0122     		movs	r2, #1
 1797 0052 1A70     		strb	r2, [r3]
 1798              	.L143:
 276:Src/core.c    ****             move(state.sw);
 1799              		.loc 1 276 13 is_stmt 1 view .LVU457
 1800 0054 304B     		ldr	r3, .L157
 1801 0056 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1802 0058 FFF7FEFF 		bl	move
 1803              	.LVL142:
 1804              	.L141:
 277:Src/core.c    ****         }
 278:Src/core.c    ****         checkounter = 0;
 1805              		.loc 1 278 9 view .LVU458
 1806              		.loc 1 278 21 is_stmt 0 view .LVU459
 1807 005c 0022     		movs	r2, #0
 1808 005e 304B     		ldr	r3, .L157+8
 1809 0060 1A60     		str	r2, [r3]
 279:Src/core.c    ****         lastAchievement = state.tempAchieveCounter;
 1810              		.loc 1 279 9 is_stmt 1 view .LVU460
 1811              		.loc 1 279 32 is_stmt 0 view .LVU461
 1812 0062 2D4B     		ldr	r3, .L157
 1813 0064 586A     		ldr	r0, [r3, #36]
 1814              		.loc 1 279 25 view .LVU462
 1815 0066 2F49     		ldr	r1, .L157+12
 1816 0068 0860     		str	r0, [r1]
 280:Src/core.c    ****         state.tempAchieveCounter = 0;
 1817              		.loc 1 280 9 is_stmt 1 view .LVU463
 1818              		.loc 1 280 34 is_stmt 0 view .LVU464
 1819 006a 5A62     		str	r2, [r3, #36]
 1820              	.L144:
 281:Src/core.c    ****     }
 282:Src/core.c    ****     else checkounter++;
 283:Src/core.c    **** 
 284:Src/core.c    ****     if(validCheckCounter >= 180){
 1821              		.loc 1 284 5 is_stmt 1 view .LVU465
 1822              		.loc 1 284 26 is_stmt 0 view .LVU466
 1823 006c 2E4B     		ldr	r3, .L157+16
ARM GAS  /tmp/ccZUXJMg.s 			page 41


 1824 006e 1C68     		ldr	r4, [r3]
 1825              		.loc 1 284 7 view .LVU467
 1826 0070 B32C     		cmp	r4, #179
 1827 0072 4CDD     		ble	.L145
 285:Src/core.c    ****         if(state.sw == SYS_ON && state.temp > initTemp) {
 1828              		.loc 1 285 9 is_stmt 1 view .LVU468
 1829              		.loc 1 285 17 is_stmt 0 view .LVU469
 1830 0074 284B     		ldr	r3, .L157
 1831 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1832              		.loc 1 285 11 view .LVU470
 1833 0078 012B     		cmp	r3, #1
 1834 007a 24D0     		beq	.L156
 1835              	.L146:
 286:Src/core.c    ****             validCheckCounter++;
 287:Src/core.c    ****             if (validCheckCounter >= 188) {
 288:Src/core.c    ****                 state.sw = SYS_OFF;
 289:Src/core.c    ****                 move(state.sw);
 290:Src/core.c    ****                 if(servo1_up < 1900)
 291:Src/core.c    ****                     servo1_up += 100;
 292:Src/core.c    ****                 HAL_Delay(1000);
 293:Src/core.c    ****             }
 294:Src/core.c    ****         }
 295:Src/core.c    ****         else validCheckCounter = 0;
 1836              		.loc 1 295 14 is_stmt 1 view .LVU471
 1837              		.loc 1 295 32 is_stmt 0 view .LVU472
 1838 007c 2A4B     		ldr	r3, .L157+16
 1839 007e 0022     		movs	r2, #0
 1840 0080 1A60     		str	r2, [r3]
 1841 0082 47E0     		b	.L135
 1842              	.L154:
 267:Src/core.c    ****             state.tempAchieveCounter++;
 1843              		.loc 1 267 9 is_stmt 1 view .LVU473
 267:Src/core.c    ****             state.tempAchieveCounter++;
 1844              		.loc 1 267 17 is_stmt 0 view .LVU474
 1845 0084 1D46     		mov	r5, r3
 1846 0086 9869     		ldr	r0, [r3, #24]	@ float
 1847 0088 FFF7FEFF 		bl	__aeabi_f2d
 1848              	.LVL143:
 1849 008c 0646     		mov	r6, r0
 1850 008e 0F46     		mov	r7, r1
 267:Src/core.c    ****             state.tempAchieveCounter++;
 1851              		.loc 1 267 30 view .LVU475
 1852 0090 A868     		ldr	r0, [r5, #8]	@ float
 1853 0092 FFF7FEFF 		bl	__aeabi_f2d
 1854              	.LVL144:
 267:Src/core.c    ****             state.tempAchieveCounter++;
 1855              		.loc 1 267 39 view .LVU476
 1856 0096 0022     		movs	r2, #0
 1857 0098 204B     		ldr	r3, .L157+4
 1858 009a FFF7FEFF 		bl	__aeabi_dsub
 1859              	.LVL145:
 267:Src/core.c    ****             state.tempAchieveCounter++;
 1860              		.loc 1 267 11 view .LVU477
 1861 009e 0246     		mov	r2, r0
 1862 00a0 0B46     		mov	r3, r1
 1863 00a2 3046     		mov	r0, r6
 1864 00a4 3946     		mov	r1, r7
ARM GAS  /tmp/ccZUXJMg.s 			page 42


 1865 00a6 FFF7FEFF 		bl	__aeabi_dcmplt
 1866              	.LVL146:
 1867 00aa 0028     		cmp	r0, #0
 1868 00ac ADD0     		beq	.L136
 268:Src/core.c    ****     if(state.sw == SYS_OFF)
 1869              		.loc 1 268 13 is_stmt 1 view .LVU478
 268:Src/core.c    ****     if(state.sw == SYS_OFF)
 1870              		.loc 1 268 18 is_stmt 0 view .LVU479
 1871 00ae 6B6A     		ldr	r3, [r5, #36]
 268:Src/core.c    ****     if(state.sw == SYS_OFF)
 1872              		.loc 1 268 37 view .LVU480
 1873 00b0 0133     		adds	r3, r3, #1
 1874 00b2 6B62     		str	r3, [r5, #36]
 1875 00b4 A9E7     		b	.L136
 1876              	.L155:
 274:Src/core.c    ****             else state.sw = SYS_ON;
 1877              		.loc 1 274 36 is_stmt 1 discriminator 1 view .LVU481
 274:Src/core.c    ****             else state.sw = SYS_ON;
 1878              		.loc 1 274 45 is_stmt 0 discriminator 1 view .LVU482
 1879 00b6 184B     		ldr	r3, .L157
 1880 00b8 0022     		movs	r2, #0
 1881 00ba 1A70     		strb	r2, [r3]
 1882 00bc CAE7     		b	.L143
 1883              	.L140:
 282:Src/core.c    **** 
 1884              		.loc 1 282 10 is_stmt 1 view .LVU483
 282:Src/core.c    **** 
 1885              		.loc 1 282 21 is_stmt 0 view .LVU484
 1886 00be 0133     		adds	r3, r3, #1
 1887 00c0 174A     		ldr	r2, .L157+8
 1888 00c2 1360     		str	r3, [r2]
 1889 00c4 D2E7     		b	.L144
 1890              	.L156:
 285:Src/core.c    ****             validCheckCounter++;
 1891              		.loc 1 285 39 discriminator 1 view .LVU485
 1892 00c6 144B     		ldr	r3, .L157
 1893 00c8 9D69     		ldr	r5, [r3, #24]	@ float
 285:Src/core.c    ****             validCheckCounter++;
 1894              		.loc 1 285 45 discriminator 1 view .LVU486
 1895 00ca 184B     		ldr	r3, .L157+20
 1896 00cc 1868     		ldr	r0, [r3]
 1897 00ce FFF7FEFF 		bl	__aeabi_i2f
 1898              	.LVL147:
 285:Src/core.c    ****             validCheckCounter++;
 1899              		.loc 1 285 31 discriminator 1 view .LVU487
 1900 00d2 0146     		mov	r1, r0
 1901 00d4 2846     		mov	r0, r5
 1902 00d6 FFF7FEFF 		bl	__aeabi_fcmpgt
 1903              	.LVL148:
 1904 00da 0028     		cmp	r0, #0
 1905 00dc CED0     		beq	.L146
 286:Src/core.c    ****             if (validCheckCounter >= 188) {
 1906              		.loc 1 286 13 is_stmt 1 view .LVU488
 286:Src/core.c    ****             if (validCheckCounter >= 188) {
 1907              		.loc 1 286 30 is_stmt 0 view .LVU489
 1908 00de 0134     		adds	r4, r4, #1
 1909 00e0 114B     		ldr	r3, .L157+16
ARM GAS  /tmp/ccZUXJMg.s 			page 43


 1910 00e2 1C60     		str	r4, [r3]
 287:Src/core.c    ****                 state.sw = SYS_OFF;
 1911              		.loc 1 287 13 is_stmt 1 view .LVU490
 287:Src/core.c    ****                 state.sw = SYS_OFF;
 1912              		.loc 1 287 16 is_stmt 0 view .LVU491
 1913 00e4 BB2C     		cmp	r4, #187
 1914 00e6 15DD     		ble	.L135
 288:Src/core.c    ****                 move(state.sw);
 1915              		.loc 1 288 17 is_stmt 1 view .LVU492
 288:Src/core.c    ****                 move(state.sw);
 1916              		.loc 1 288 26 is_stmt 0 view .LVU493
 1917 00e8 0020     		movs	r0, #0
 1918 00ea 0B4B     		ldr	r3, .L157
 1919 00ec 1870     		strb	r0, [r3]
 289:Src/core.c    ****                 if(servo1_up < 1900)
 1920              		.loc 1 289 17 is_stmt 1 view .LVU494
 1921 00ee FFF7FEFF 		bl	move
 1922              	.LVL149:
 290:Src/core.c    ****                     servo1_up += 100;
 1923              		.loc 1 290 17 view .LVU495
 290:Src/core.c    ****                     servo1_up += 100;
 1924              		.loc 1 290 30 is_stmt 0 view .LVU496
 1925 00f2 0F4B     		ldr	r3, .L157+24
 1926 00f4 1B68     		ldr	r3, [r3]
 290:Src/core.c    ****                     servo1_up += 100;
 1927              		.loc 1 290 19 view .LVU497
 1928 00f6 40F26B72 		movw	r2, #1899
 1929 00fa 9342     		cmp	r3, r2
 1930 00fc 02DC     		bgt	.L149
 291:Src/core.c    ****                 HAL_Delay(1000);
 1931              		.loc 1 291 21 is_stmt 1 view .LVU498
 291:Src/core.c    ****                 HAL_Delay(1000);
 1932              		.loc 1 291 31 is_stmt 0 view .LVU499
 1933 00fe 6433     		adds	r3, r3, #100
 1934 0100 0B4A     		ldr	r2, .L157+24
 1935 0102 1360     		str	r3, [r2]
 1936              	.L149:
 292:Src/core.c    ****             }
 1937              		.loc 1 292 17 is_stmt 1 view .LVU500
 1938 0104 4FF47A70 		mov	r0, #1000
 1939 0108 FFF7FEFF 		bl	HAL_Delay
 1940              	.LVL150:
 1941 010c 02E0     		b	.L135
 1942              	.L145:
 296:Src/core.c    ****     }
 297:Src/core.c    ****     else validCheckCounter++;
 1943              		.loc 1 297 10 view .LVU501
 1944              		.loc 1 297 27 is_stmt 0 view .LVU502
 1945 010e 0134     		adds	r4, r4, #1
 1946 0110 054B     		ldr	r3, .L157+16
 1947 0112 1C60     		str	r4, [r3]
 1948              	.L135:
 298:Src/core.c    **** }
 1949              		.loc 1 298 1 view .LVU503
 1950 0114 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1951              	.L158:
 1952 0116 00BF     		.align	2
ARM GAS  /tmp/ccZUXJMg.s 			page 44


 1953              	.L157:
 1954 0118 00000000 		.word	state
 1955 011c 0000E03F 		.word	1071644672
 1956 0120 00000000 		.word	.LANCHOR8
 1957 0124 00000000 		.word	.LANCHOR5
 1958 0128 00000000 		.word	.LANCHOR7
 1959 012c 00000000 		.word	.LANCHOR6
 1960 0130 00000000 		.word	.LANCHOR3
 1961              		.cfi_endproc
 1962              	.LFE75:
 1964              		.section	.text.timeCheck,"ax",%progbits
 1965              		.align	1
 1966              		.global	timeCheck
 1967              		.syntax unified
 1968              		.thumb
 1969              		.thumb_func
 1970              		.fpu softvfp
 1972              	timeCheck:
 1973              	.LFB76:
 299:Src/core.c    **** 
 300:Src/core.c    **** void timeCheck() {
 1974              		.loc 1 300 18 is_stmt 1 view -0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 0
 1977              		@ frame_needed = 0, uses_anonymous_args = 0
 1978 0000 2DE90048 		push	{fp, lr}
 1979              	.LCFI14:
 1980              		.cfi_def_cfa_offset 8
 1981              		.cfi_offset 11, -8
 1982              		.cfi_offset 14, -4
 301:Src/core.c    ****     if(state.sw == SYS_ON){
 1983              		.loc 1 301 5 view .LVU505
 1984              		.loc 1 301 13 is_stmt 0 view .LVU506
 1985 0004 1A4B     		ldr	r3, .L165
 1986 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1987              		.loc 1 301 7 view .LVU507
 1988 0008 012B     		cmp	r3, #1
 1989 000a 13D0     		beq	.L163
 302:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 303:Src/core.c    ****             state.sw = SYS_OFF;
 304:Src/core.c    ****             move(state.sw);
 305:Src/core.c    ****         }
 306:Src/core.c    ****     }
 307:Src/core.c    ****     else {
 308:Src/core.c    ****         if(runningTime - state.shutDownTime >= state.tarTime[1]*60) {
 1990              		.loc 1 308 9 is_stmt 1 view .LVU508
 1991              		.loc 1 308 31 is_stmt 0 view .LVU509
 1992 000c 184B     		ldr	r3, .L165
 1993 000e 1A6A     		ldr	r2, [r3, #32]
 1994              		.loc 1 308 24 view .LVU510
 1995 0010 1849     		ldr	r1, .L165+4
 1996 0012 D1E90001 		ldrd	r0, [r1]
 1997 0016 B0EB020B 		subs	fp, r0, r2
 1998 001a 61EBE27C 		sbc	ip, r1, r2, asr #31
 1999              		.loc 1 308 61 view .LVU511
 2000 001e 1B69     		ldr	r3, [r3, #16]
 2001              		.loc 1 308 64 view .LVU512
ARM GAS  /tmp/ccZUXJMg.s 			page 45


 2002 0020 C3EB0313 		rsb	r3, r3, r3, lsl #4
 2003 0024 9A00     		lsls	r2, r3, #2
 2004 0026 D317     		asrs	r3, r2, #31
 2005              		.loc 1 308 11 view .LVU513
 2006 0028 9C45     		cmp	ip, r3
 2007 002a 08BF     		it	eq
 2008 002c 9345     		cmpeq	fp, r2
 2009 002e 19D2     		bcs	.L164
 2010              	.L159:
 309:Src/core.c    ****             state.sw = SYS_ON;
 310:Src/core.c    ****             move(state.sw);
 311:Src/core.c    ****         }
 312:Src/core.c    ****     }
 313:Src/core.c    **** 
 314:Src/core.c    **** }
 2011              		.loc 1 314 1 view .LVU514
 2012 0030 BDE80088 		pop	{fp, pc}
 2013              	.L163:
 302:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 2014              		.loc 1 302 9 is_stmt 1 view .LVU515
 302:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 2015              		.loc 1 302 31 is_stmt 0 view .LVU516
 2016 0034 0E4B     		ldr	r3, .L165
 2017 0036 DA69     		ldr	r2, [r3, #28]
 302:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 2018              		.loc 1 302 24 view .LVU517
 2019 0038 0E49     		ldr	r1, .L165+4
 2020 003a D1E90001 		ldrd	r0, [r1]
 2021 003e B0EB020B 		subs	fp, r0, r2
 2022 0042 61EBE27C 		sbc	ip, r1, r2, asr #31
 302:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 2023              		.loc 1 302 58 view .LVU518
 2024 0046 DB68     		ldr	r3, [r3, #12]
 302:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 2025              		.loc 1 302 61 view .LVU519
 2026 0048 C3EB0313 		rsb	r3, r3, r3, lsl #4
 2027 004c 9A00     		lsls	r2, r3, #2
 2028 004e D317     		asrs	r3, r2, #31
 302:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 2029              		.loc 1 302 11 view .LVU520
 2030 0050 9C45     		cmp	ip, r3
 2031 0052 08BF     		it	eq
 2032 0054 9345     		cmpeq	fp, r2
 2033 0056 EBD3     		bcc	.L159
 303:Src/core.c    ****             move(state.sw);
 2034              		.loc 1 303 13 is_stmt 1 view .LVU521
 303:Src/core.c    ****             move(state.sw);
 2035              		.loc 1 303 22 is_stmt 0 view .LVU522
 2036 0058 0020     		movs	r0, #0
 2037 005a 054B     		ldr	r3, .L165
 2038 005c 1870     		strb	r0, [r3]
 304:Src/core.c    ****         }
 2039              		.loc 1 304 13 is_stmt 1 view .LVU523
 2040 005e FFF7FEFF 		bl	move
 2041              	.LVL151:
 2042 0062 E5E7     		b	.L159
 2043              	.L164:
ARM GAS  /tmp/ccZUXJMg.s 			page 46


 309:Src/core.c    ****             state.sw = SYS_ON;
 2044              		.loc 1 309 13 view .LVU524
 309:Src/core.c    ****             state.sw = SYS_ON;
 2045              		.loc 1 309 22 is_stmt 0 view .LVU525
 2046 0064 0120     		movs	r0, #1
 2047 0066 024B     		ldr	r3, .L165
 2048 0068 1870     		strb	r0, [r3]
 310:Src/core.c    ****         }
 2049              		.loc 1 310 13 is_stmt 1 view .LVU526
 2050 006a FFF7FEFF 		bl	move
 2051              	.LVL152:
 2052              		.loc 1 314 1 is_stmt 0 view .LVU527
 2053 006e DFE7     		b	.L159
 2054              	.L166:
 2055              		.align	2
 2056              	.L165:
 2057 0070 00000000 		.word	state
 2058 0074 00000000 		.word	runningTime
 2059              		.cfi_endproc
 2060              	.LFE76:
 2062              		.global	checkounter
 2063              		.global	initTemp
 2064              		.global	validCheckCounter
 2065              		.global	lastAchievement
 2066              		.comm	msg,120,4
 2067              		.global	Uart1_Rx_Cnt
 2068              		.comm	aRxBuffer,1,1
 2069              		.comm	RxBuffer,512,4
 2070              		.comm	state,40,4
 2071              		.global	servo2_down
 2072              		.global	servo2_up
 2073              		.global	servo1_down
 2074              		.global	servo1_up
 2075              		.section	.bss.Uart1_Rx_Cnt,"aw",%nobits
 2076              		.set	.LANCHOR4,. + 0
 2079              	Uart1_Rx_Cnt:
 2080 0000 00       		.space	1
 2081              		.section	.bss.checkounter,"aw",%nobits
 2082              		.align	2
 2083              		.set	.LANCHOR8,. + 0
 2086              	checkounter:
 2087 0000 00000000 		.space	4
 2088              		.section	.bss.initTemp,"aw",%nobits
 2089              		.align	2
 2090              		.set	.LANCHOR6,. + 0
 2093              	initTemp:
 2094 0000 00000000 		.space	4
 2095              		.section	.bss.lastAchievement,"aw",%nobits
 2096              		.align	2
 2097              		.set	.LANCHOR5,. + 0
 2100              	lastAchievement:
 2101 0000 00000000 		.space	4
 2102              		.section	.bss.validCheckCounter,"aw",%nobits
 2103              		.align	2
 2104              		.set	.LANCHOR7,. + 0
 2107              	validCheckCounter:
 2108 0000 00000000 		.space	4
ARM GAS  /tmp/ccZUXJMg.s 			page 47


 2109              		.section	.data.servo1_down,"aw"
 2110              		.align	2
 2111              		.set	.LANCHOR1,. + 0
 2114              	servo1_down:
 2115 0000 B6030000 		.word	950
 2116              		.section	.data.servo1_up,"aw"
 2117              		.align	2
 2118              		.set	.LANCHOR3,. + 0
 2121              	servo1_up:
 2122 0000 40060000 		.word	1600
 2123              		.section	.data.servo2_down,"aw"
 2124              		.align	2
 2125              		.set	.LANCHOR0,. + 0
 2128              	servo2_down:
 2129 0000 B6030000 		.word	950
 2130              		.section	.data.servo2_up,"aw"
 2131              		.align	2
 2132              		.set	.LANCHOR2,. + 0
 2135              	servo2_up:
 2136 0000 40060000 		.word	1600
 2137              		.section	.rodata.bluetooth_decode.str1.4,"aMS",%progbits,1
 2138              		.align	2
 2139              	.LC0:
 2140 0000 4368616E 		.ascii	"Changed the time to %d mins ON and %d mins OFF\012\000"
 2140      67656420 
 2140      74686520 
 2140      74696D65 
 2140      20746F20 
 2141              	.LC1:
 2142 0030 4368616E 		.ascii	"Changed the target temp to %3.1f\012\000"
 2142      67656420 
 2142      74686520 
 2142      74617267 
 2142      65742074 
 2143              		.section	.rodata.send_state.str1.4,"aMS",%progbits,1
 2144              		.align	2
 2145              	.LC2:
 2146 0000 4F46460A 		.ascii	"OFF\012\000"
 2146      00
 2147 0005 000000   		.space	3
 2148              	.LC3:
 2149 0008 4F4E0A00 		.ascii	"ON\012\000"
 2150              	.LC4:
 2151 000c 54696D65 		.ascii	"Time Mode\012\000"
 2151      204D6F64 
 2151      650A00
 2152 0017 00       		.space	1
 2153              	.LC5:
 2154 0018 4F4E2F4F 		.ascii	"ON/OFF Mode\012\000"
 2154      4646204D 
 2154      6F64650A 
 2154      00
 2155 0025 000000   		.space	3
 2156              	.LC6:
 2157 0028 54656D70 		.ascii	"Temp Mode\012\000"
 2157      204D6F64 
 2157      650A00
ARM GAS  /tmp/ccZUXJMg.s 			page 48


 2158 0033 00       		.space	1
 2159              	.LC7:
 2160 0034 636C6F73 		.ascii	"closed\000"
 2160      656400
 2161 003b 00       		.space	1
 2162              	.LC8:
 2163 003c 72756E00 		.ascii	"run\000"
 2164              	.LC9:
 2165 0040 73746172 		.ascii	"start\000"
 2165      7400
 2166 0046 0000     		.space	2
 2167              	.LC10:
 2168 0048 636C6F73 		.ascii	"close\000"
 2168      6500
 2169 004e 0000     		.space	2
 2170              	.LC11:
 2171 0050 4E6F7720 		.ascii	"Now the air-con is \000"
 2171      74686520 
 2171      6169722D 
 2171      636F6E20 
 2171      69732000 
 2172              	.LC12:
 2173 0064 54686520 		.ascii	"The current mode is \000"
 2173      63757272 
 2173      656E7420 
 2173      6D6F6465 
 2173      20697320 
 2174 0079 000000   		.space	3
 2175              	.LC13:
 2176 007c 43757272 		.ascii	"Current temperature is : %3.1f\012\000"
 2176      656E7420 
 2176      74656D70 
 2176      65726174 
 2176      75726520 
 2177              	.LC14:
 2178 009c 54686520 		.ascii	"The air-con has \000"
 2178      6169722D 
 2178      636F6E20 
 2178      68617320 
 2178      00
 2179 00ad 000000   		.space	3
 2180              	.LC15:
 2181 00b0 20666F72 		.ascii	" for \000"
 2181      2000
 2182 00b6 0000     		.space	2
 2183              	.LC16:
 2184 00b8 206D696E 		.ascii	" minutes\012\000"
 2184      75746573 
 2184      0A00
 2185 00c2 0000     		.space	2
 2186              	.LC17:
 2187 00c4 25732564 		.ascii	"%s%d%s\000"
 2187      257300
 2188 00cb 00       		.space	1
 2189              	.LC18:
 2190 00cc 54686520 		.ascii	"The target temperature is %3.1f\012\000"
 2190      74617267 
ARM GAS  /tmp/ccZUXJMg.s 			page 49


 2190      65742074 
 2190      656D7065 
 2190      72617475 
 2191 00ed 000000   		.space	3
 2192              	.LC19:
 2193 00f0 54686520 		.ascii	"The last temperature achievement is %d\012\000"
 2193      6C617374 
 2193      2074656D 
 2193      70657261 
 2193      74757265 
 2194              	.LC20:
 2195 0118 436C6F73 		.ascii	"Closed for %d mins and Opened for %d mins\012\000"
 2195      65642066 
 2195      6F722025 
 2195      64206D69 
 2195      6E732061 
 2196 0143 00       		.space	1
 2197              	.LC21:
 2198 0144 4F70656E 		.ascii	"Opened for %d mins and closed for %d mins\012\000"
 2198      65642066 
 2198      6F722025 
 2198      64206D69 
 2198      6E732061 
 2199 016f 00       		.space	1
 2200              	.LC22:
 2201 0170 54686572 		.ascii	"There are %d minutes before air-con %s\012\000"
 2201      65206172 
 2201      65202564 
 2201      206D696E 
 2201      75746573 
 2202              	.LC23:
 2203 0198 4F70656E 		.ascii	"Open for %d mins and close for %d mins\012\000"
 2203      20666F72 
 2203      20256420 
 2203      6D696E73 
 2203      20616E64 
 2204              		.section	.rodata.update_info.str1.4,"aMS",%progbits,1
 2205              		.align	2
 2206              	.LC24:
 2207 0000 54454D50 		.ascii	"TEMP mode\012\000"
 2207      206D6F64 
 2207      650A00
 2208 000b 00       		.space	1
 2209              	.LC25:
 2210 000c 4F4E4F46 		.ascii	"ONOFF mode\012\000"
 2210      46206D6F 
 2210      64650A00 
 2211              	.LC26:
 2212 0018 54494D45 		.ascii	"TIME mode\012\000"
 2212      206D6F64 
 2212      650A00
 2213 0023 00       		.space	1
 2214              	.LC27:
 2215 0024 52656D6F 		.ascii	"Remote control is not ON\000"
 2215      74652063 
 2215      6F6E7472 
 2215      6F6C2069 
ARM GAS  /tmp/ccZUXJMg.s 			page 50


 2215      73206E6F 
 2216 003d 000000   		.space	3
 2217              	.LC28:
 2218 0040 4368616E 		.ascii	"Change the system to \000"
 2218      67652074 
 2218      68652073 
 2218      79737465 
 2218      6D20746F 
 2219 0056 0000     		.space	2
 2220              	.LC29:
 2221 0058 4368616E 		.ascii	"Change mode to \000"
 2221      6765206D 
 2221      6F646520 
 2221      746F2000 
 2222              		.text
 2223              	.Letext0:
 2224              		.file 2 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default_type
 2225              		.file 3 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
 2226              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 2227              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2228              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2229              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2230              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2231              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2232              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2233              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2234              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 2235              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 2236              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2237              		.file 15 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/lib/gcc/arm-none-eabi/8.3.1/include/stddef
 2238              		.file 16 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_types.h"
 2239              		.file 17 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/reent.h"
 2240              		.file 18 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/lock.h"
 2241              		.file 19 "Inc/adc.h"
 2242              		.file 20 "Inc/tim.h"
 2243              		.file 21 "Inc/usart.h"
 2244              		.file 22 "Inc/core.h"
 2245              		.file 23 "Inc/timer.h"
 2246              		.file 24 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/stdio.h"
 2247              		.file 25 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/string.h"
 2248              		.file 26 "<built-in>"
 2249              		.file 27 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc_ex.h"
ARM GAS  /tmp/ccZUXJMg.s 			page 51


DEFINED SYMBOLS
                            *ABS*:0000000000000000 core.c
     /tmp/ccZUXJMg.s:16     .text.init_system:0000000000000000 $t
     /tmp/ccZUXJMg.s:24     .text.init_system:0000000000000000 init_system
     /tmp/ccZUXJMg.s:240    .text.init_system:0000000000000120 $d
                            *COM*:0000000000000028 state
                            *COM*:0000000000000001 aRxBuffer
     /tmp/ccZUXJMg.s:258    .text.string2int:0000000000000000 $t
     /tmp/ccZUXJMg.s:265    .text.string2int:0000000000000000 string2int
     /tmp/ccZUXJMg.s:381    .text.bluetooth_decode:0000000000000000 $t
     /tmp/ccZUXJMg.s:388    .text.bluetooth_decode:0000000000000000 bluetooth_decode
     /tmp/ccZUXJMg.s:495    .text.bluetooth_decode:0000000000000060 $d
     /tmp/ccZUXJMg.s:499    .text.bluetooth_decode:0000000000000064 $t
     /tmp/ccZUXJMg.s:751    .text.bluetooth_decode:0000000000000160 $d
                            *COM*:0000000000000200 RxBuffer
     /tmp/ccZUXJMg.s:760    .text.changeLight:0000000000000000 $t
     /tmp/ccZUXJMg.s:767    .text.changeLight:0000000000000000 changeLight
     /tmp/ccZUXJMg.s:846    .text.changeLight:0000000000000054 $d
     /tmp/ccZUXJMg.s:851    .text.send_state:0000000000000000 $t
     /tmp/ccZUXJMg.s:858    .text.send_state:0000000000000000 send_state
     /tmp/ccZUXJMg.s:1195   .text.send_state:00000000000001bc $d
     /tmp/ccZUXJMg.s:1227   .text.move:0000000000000000 $t
     /tmp/ccZUXJMg.s:1234   .text.move:0000000000000000 move
     /tmp/ccZUXJMg.s:1391   .text.move:00000000000000c8 $d
     /tmp/ccZUXJMg.s:1409   .text.update_info:0000000000000000 $t
     /tmp/ccZUXJMg.s:1416   .text.update_info:0000000000000000 update_info
     /tmp/ccZUXJMg.s:1683   .text.update_info:000000000000013c $d
                            *COM*:0000000000000078 msg
     /tmp/ccZUXJMg.s:1710   .text.tempCheck:0000000000000000 $t
     /tmp/ccZUXJMg.s:1717   .text.tempCheck:0000000000000000 tempCheck
     /tmp/ccZUXJMg.s:1954   .text.tempCheck:0000000000000118 $d
     /tmp/ccZUXJMg.s:1965   .text.timeCheck:0000000000000000 $t
     /tmp/ccZUXJMg.s:1972   .text.timeCheck:0000000000000000 timeCheck
     /tmp/ccZUXJMg.s:2057   .text.timeCheck:0000000000000070 $d
     /tmp/ccZUXJMg.s:2086   .bss.checkounter:0000000000000000 checkounter
     /tmp/ccZUXJMg.s:2093   .bss.initTemp:0000000000000000 initTemp
     /tmp/ccZUXJMg.s:2107   .bss.validCheckCounter:0000000000000000 validCheckCounter
     /tmp/ccZUXJMg.s:2100   .bss.lastAchievement:0000000000000000 lastAchievement
     /tmp/ccZUXJMg.s:2079   .bss.Uart1_Rx_Cnt:0000000000000000 Uart1_Rx_Cnt
     /tmp/ccZUXJMg.s:2128   .data.servo2_down:0000000000000000 servo2_down
     /tmp/ccZUXJMg.s:2135   .data.servo2_up:0000000000000000 servo2_up
     /tmp/ccZUXJMg.s:2114   .data.servo1_down:0000000000000000 servo1_down
     /tmp/ccZUXJMg.s:2121   .data.servo1_up:0000000000000000 servo1_up
     /tmp/ccZUXJMg.s:2080   .bss.Uart1_Rx_Cnt:0000000000000000 $d
     /tmp/ccZUXJMg.s:2082   .bss.checkounter:0000000000000000 $d
     /tmp/ccZUXJMg.s:2089   .bss.initTemp:0000000000000000 $d
     /tmp/ccZUXJMg.s:2096   .bss.lastAchievement:0000000000000000 $d
     /tmp/ccZUXJMg.s:2103   .bss.validCheckCounter:0000000000000000 $d
     /tmp/ccZUXJMg.s:2110   .data.servo1_down:0000000000000000 $d
     /tmp/ccZUXJMg.s:2117   .data.servo1_up:0000000000000000 $d
     /tmp/ccZUXJMg.s:2124   .data.servo2_down:0000000000000000 $d
     /tmp/ccZUXJMg.s:2131   .data.servo2_up:0000000000000000 $d
     /tmp/ccZUXJMg.s:2138   .rodata.bluetooth_decode.str1.4:0000000000000000 $d
     /tmp/ccZUXJMg.s:2144   .rodata.send_state.str1.4:0000000000000000 $d
     /tmp/ccZUXJMg.s:2205   .rodata.update_info.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
ARM GAS  /tmp/ccZUXJMg.s 			page 52


HAL_GPIO_ReadPin
timerInit
HAL_ADCEx_Calibration_Start
HAL_Delay
HAL_ADC_Start
HAL_UART_Receive_IT
HAL_TIM_PWM_Start
HAL_GPIO_WritePin
hadc1
huart1
htim1
htim2
__aeabi_i2f
__aeabi_f2d
printf
memset
strcat
strlen
putchar
runningTime
__aeabi_f2iz
__aeabi_ui2f
__aeabi_fmul
HAL_ADC_GetValue
puts
__aeabi_dsub
__aeabi_dcmplt
__aeabi_dadd
__aeabi_dcmpgt
__aeabi_fcmpgt
