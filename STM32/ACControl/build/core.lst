ARM GAS  /tmp/ccsSrQjn.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"core.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.init_system,"ax",%progbits
  16              		.align	1
  17              		.global	init_system
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	init_system:
  25              	.LFB68:
  26              		.file 1 "Src/core.c"
   1:Src/core.c    **** #include "core.h"
   2:Src/core.c    **** #include <string.h>
   3:Src/core.c    **** #include "timer.h"
   4:Src/core.c    **** #include <stdio.h>
   5:Src/core.c    **** 
   6:Src/core.c    **** // int _write(int fd, char *ptr, int len) {
   7:Src/core.c    **** //   HAL_UART_Transmit(&huart1, (uint8_t *)ptr, len, 0xFFFF);
   8:Src/core.c    **** //   return len;
   9:Src/core.c    **** // }
  10:Src/core.c    **** 
  11:Src/core.c    **** int servo1_up = 2000;
  12:Src/core.c    **** int servo1_down = 1300;
  13:Src/core.c    **** int servo2_up = 1750;
  14:Src/core.c    **** int servo2_down = 1100;
  15:Src/core.c    **** 
  16:Src/core.c    **** struct State state;
  17:Src/core.c    **** 
  18:Src/core.c    **** char RxBuffer[RXBUFFERSIZE]; //接收数据
  19:Src/core.c    **** uint8_t aRxBuffer;           //接收中断缓冲
  20:Src/core.c    **** uint8_t Uart1_Rx_Cnt = 0;    //接收缓冲计数
  21:Src/core.c    **** 
  22:Src/core.c    **** int init_system() {
  27              		.loc 1 22 19 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 70B5     		push	{r4, r5, r6, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
ARM GAS  /tmp/ccsSrQjn.s 			page 2


  37              		.cfi_offset 14, -4
  23:Src/core.c    ****     state.sw = HAL_GPIO_ReadPin(MAIN_SWITCH_GPIO_Port, MAIN_SWITCH_Pin) == GPIO_PIN_RESET ? SYS_ON 
  38              		.loc 1 23 5 view .LVU1
  39              		.loc 1 23 16 is_stmt 0 view .LVU2
  40 0002 474D     		ldr	r5, .L9
  41 0004 0121     		movs	r1, #1
  42 0006 2846     		mov	r0, r5
  43 0008 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  44              	.LVL0:
  45              		.loc 1 23 100 view .LVU3
  46 000c B0FA80F0 		clz	r0, r0
  47 0010 4009     		lsrs	r0, r0, #5
  48              		.loc 1 23 14 view .LVU4
  49 0012 444C     		ldr	r4, .L9+4
  50 0014 2070     		strb	r0, [r4]
  24:Src/core.c    ****     state.re_sw = HAL_GPIO_ReadPin(REMOTE_SWITCH_GPIO_Port, REMOTE_SWITCH_Pin) == GPIO_PIN_RESET ? 
  51              		.loc 1 24 5 is_stmt 1 view .LVU5
  52              		.loc 1 24 19 is_stmt 0 view .LVU6
  53 0016 0221     		movs	r1, #2
  54 0018 2846     		mov	r0, r5
  55 001a FFF7FEFF 		bl	HAL_GPIO_ReadPin
  56              	.LVL1:
  57              		.loc 1 24 110 view .LVU7
  58 001e 0038     		subs	r0, r0, #0
  59 0020 18BF     		it	ne
  60 0022 0120     		movne	r0, #1
  61              		.loc 1 24 17 view .LVU8
  62 0024 E070     		strb	r0, [r4, #3]
  25:Src/core.c    ****     state.mode = ONOFF_MODE;
  63              		.loc 1 25 5 is_stmt 1 view .LVU9
  64              		.loc 1 25 16 is_stmt 0 view .LVU10
  65 0026 0025     		movs	r5, #0
  66 0028 2571     		strb	r5, [r4, #4]
  26:Src/core.c    ****     state.lightOff = 0;
  67              		.loc 1 26 5 is_stmt 1 view .LVU11
  68              		.loc 1 26 20 is_stmt 0 view .LVU12
  69 002a 6561     		str	r5, [r4, #20]
  27:Src/core.c    ****     state.tarTemp = 24;
  70              		.loc 1 27 5 is_stmt 1 view .LVU13
  71              		.loc 1 27 19 is_stmt 0 view .LVU14
  72 002c 3E4B     		ldr	r3, .L9+8
  73 002e A360     		str	r3, [r4, #8]	@ float
  28:Src/core.c    ****     state.tarTime[0] = 30;
  74              		.loc 1 28 5 is_stmt 1 view .LVU15
  75              		.loc 1 28 22 is_stmt 0 view .LVU16
  76 0030 1E23     		movs	r3, #30
  77 0032 E360     		str	r3, [r4, #12]
  29:Src/core.c    ****     state.tarTime[1] = 30;
  78              		.loc 1 29 5 is_stmt 1 view .LVU17
  79              		.loc 1 29 22 is_stmt 0 view .LVU18
  80 0034 2361     		str	r3, [r4, #16]
  30:Src/core.c    ****     state.startTime = 0;
  81              		.loc 1 30 5 is_stmt 1 view .LVU19
  82              		.loc 1 30 21 is_stmt 0 view .LVU20
  83 0036 E561     		str	r5, [r4, #28]
  31:Src/core.c    ****     state.shutDownTime = 0;
  84              		.loc 1 31 5 is_stmt 1 view .LVU21
ARM GAS  /tmp/ccsSrQjn.s 			page 3


  85              		.loc 1 31 24 is_stmt 0 view .LVU22
  86 0038 2562     		str	r5, [r4, #32]
  32:Src/core.c    ****     state.tempAchieveCounter = 0;
  87              		.loc 1 32 5 is_stmt 1 view .LVU23
  88              		.loc 1 32 30 is_stmt 0 view .LVU24
  89 003a 6562     		str	r5, [r4, #36]
  33:Src/core.c    **** 
  34:Src/core.c    ****     // usDelayInit();
  35:Src/core.c    ****     timerInit();
  90              		.loc 1 35 5 is_stmt 1 view .LVU25
  91 003c FFF7FEFF 		bl	timerInit
  92              	.LVL2:
  36:Src/core.c    ****     HAL_ADCEx_Calibration_Start(&hadc1);
  93              		.loc 1 36 5 view .LVU26
  94 0040 3A4E     		ldr	r6, .L9+12
  95 0042 3046     		mov	r0, r6
  96 0044 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
  97              	.LVL3:
  37:Src/core.c    ****     HAL_Delay(500);
  98              		.loc 1 37 5 view .LVU27
  99 0048 4FF4FA70 		mov	r0, #500
 100 004c FFF7FEFF 		bl	HAL_Delay
 101              	.LVL4:
  38:Src/core.c    **** 
  39:Src/core.c    ****     HAL_ADC_Start(&hadc1);
 102              		.loc 1 39 5 view .LVU28
 103 0050 3046     		mov	r0, r6
 104 0052 FFF7FEFF 		bl	HAL_ADC_Start
 105              	.LVL5:
  40:Src/core.c    ****     HAL_UART_Receive_IT(&huart1, (uint8_t *)&aRxBuffer, 1);
 106              		.loc 1 40 5 view .LVU29
 107 0056 0122     		movs	r2, #1
 108 0058 3549     		ldr	r1, .L9+16
 109 005a 3648     		ldr	r0, .L9+20
 110 005c FFF7FEFF 		bl	HAL_UART_Receive_IT
 111              	.LVL6:
  41:Src/core.c    ****     HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 112              		.loc 1 41 5 view .LVU30
 113 0060 2946     		mov	r1, r5
 114 0062 3548     		ldr	r0, .L9+24
 115 0064 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 116              	.LVL7:
  42:Src/core.c    ****     HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 117              		.loc 1 42 5 view .LVU31
 118 0068 2946     		mov	r1, r5
 119 006a 3448     		ldr	r0, .L9+28
 120 006c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 121              	.LVL8:
  43:Src/core.c    ****     if(state.sw == SYS_OFF) {
 122              		.loc 1 43 5 view .LVU32
 123              		.loc 1 43 13 is_stmt 0 view .LVU33
 124 0070 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 125              		.loc 1 43 7 view .LVU34
 126 0072 D3B9     		cbnz	r3, .L2
  44:Src/core.c    ****         __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, servo2_down);
 127              		.loc 1 44 9 is_stmt 1 view .LVU35
 128 0074 314B     		ldr	r3, .L9+28
ARM GAS  /tmp/ccsSrQjn.s 			page 4


 129 0076 1B68     		ldr	r3, [r3]
 130 0078 314A     		ldr	r2, .L9+32
 131 007a 1268     		ldr	r2, [r2]
 132 007c 5A63     		str	r2, [r3, #52]
  45:Src/core.c    ****         __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_1, servo1_down);
 133              		.loc 1 45 9 view .LVU36
 134 007e 2E4B     		ldr	r3, .L9+24
 135 0080 1B68     		ldr	r3, [r3]
 136 0082 304A     		ldr	r2, .L9+36
 137 0084 1268     		ldr	r2, [r2]
 138 0086 5A63     		str	r2, [r3, #52]
  46:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_SET);
 139              		.loc 1 46 9 view .LVU37
 140 0088 0122     		movs	r2, #1
 141 008a 4FF40051 		mov	r1, #8192
 142 008e 2E48     		ldr	r0, .L9+40
 143 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 144              	.LVL9:
  47:Src/core.c    **** 
  48:Src/core.c    ****         while(HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_SET) {
 145              		.loc 1 48 9 view .LVU38
 146              	.L3:
 147              		.loc 1 48 14 view .LVU39
 148              		.loc 1 48 15 is_stmt 0 view .LVU40
 149 0094 4FF40061 		mov	r1, #2048
 150 0098 2148     		ldr	r0, .L9
 151 009a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 152              	.LVL10:
 153              		.loc 1 48 14 view .LVU41
 154 009e 0128     		cmp	r0, #1
 155 00a0 1DD1     		bne	.L5
  49:Src/core.c    ****             HAL_Delay(100);
 156              		.loc 1 49 13 is_stmt 1 view .LVU42
 157 00a2 6420     		movs	r0, #100
 158 00a4 FFF7FEFF 		bl	HAL_Delay
 159              	.LVL11:
 160 00a8 F4E7     		b	.L3
 161              	.L2:
  50:Src/core.c    ****         }
  51:Src/core.c    ****     }
  52:Src/core.c    ****     else {
  53:Src/core.c    ****         __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, servo2_up);
 162              		.loc 1 53 9 view .LVU43
 163 00aa 244B     		ldr	r3, .L9+28
 164 00ac 1B68     		ldr	r3, [r3]
 165 00ae 274A     		ldr	r2, .L9+44
 166 00b0 1268     		ldr	r2, [r2]
 167 00b2 5A63     		str	r2, [r3, #52]
  54:Src/core.c    ****         __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_1, servo1_up);
 168              		.loc 1 54 9 view .LVU44
 169 00b4 204B     		ldr	r3, .L9+24
 170 00b6 1B68     		ldr	r3, [r3]
 171 00b8 254A     		ldr	r2, .L9+48
 172 00ba 1268     		ldr	r2, [r2]
 173 00bc 5A63     		str	r2, [r3, #52]
  55:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_RESET);
 174              		.loc 1 55 9 view .LVU45
ARM GAS  /tmp/ccsSrQjn.s 			page 5


 175 00be 0022     		movs	r2, #0
 176 00c0 4FF40051 		mov	r1, #8192
 177 00c4 2048     		ldr	r0, .L9+40
 178 00c6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 179              	.LVL12:
  56:Src/core.c    **** 
  57:Src/core.c    ****         while(HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET) {
 180              		.loc 1 57 9 view .LVU46
 181              	.L6:
 182              		.loc 1 57 14 view .LVU47
 183              		.loc 1 57 15 is_stmt 0 view .LVU48
 184 00ca 4FF40061 		mov	r1, #2048
 185 00ce 1448     		ldr	r0, .L9
 186 00d0 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 187              	.LVL13:
 188              		.loc 1 57 14 view .LVU49
 189 00d4 18B9     		cbnz	r0, .L5
  58:Src/core.c    ****             HAL_Delay(100);
 190              		.loc 1 58 13 is_stmt 1 view .LVU50
 191 00d6 6420     		movs	r0, #100
 192 00d8 FFF7FEFF 		bl	HAL_Delay
 193              	.LVL14:
 194 00dc F5E7     		b	.L6
 195              	.L5:
  59:Src/core.c    ****         }
  60:Src/core.c    ****     }
  61:Src/core.c    **** 
  62:Src/core.c    ****     HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, state.mode == ONOFF_MODE ? GPIO_PIN_RESET : GPIO_PI
 196              		.loc 1 62 5 view .LVU51
 197              		.loc 1 62 54 is_stmt 0 view .LVU52
 198 00de 114D     		ldr	r5, .L9+4
 199 00e0 2A79     		ldrb	r2, [r5, #4]	@ zero_extendqisi2
 200              		.loc 1 62 5 view .LVU53
 201 00e2 1C4C     		ldr	r4, .L9+52
 202 00e4 003A     		subs	r2, r2, #0
 203 00e6 18BF     		it	ne
 204 00e8 0122     		movne	r2, #1
 205 00ea 0821     		movs	r1, #8
 206 00ec 2046     		mov	r0, r4
 207 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 208              	.LVL15:
  63:Src/core.c    ****     HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, state.mode == TIME_MODE  ? GPIO_PIN_RESET : GPIO_PI
 209              		.loc 1 63 5 is_stmt 1 view .LVU54
 210              		.loc 1 63 54 is_stmt 0 view .LVU55
 211 00f2 2A79     		ldrb	r2, [r5, #4]	@ zero_extendqisi2
 212              		.loc 1 63 5 view .LVU56
 213 00f4 013A     		subs	r2, r2, #1
 214 00f6 18BF     		it	ne
 215 00f8 0122     		movne	r2, #1
 216 00fa 1021     		movs	r1, #16
 217 00fc 2046     		mov	r0, r4
 218 00fe FFF7FEFF 		bl	HAL_GPIO_WritePin
 219              	.LVL16:
  64:Src/core.c    ****     HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, state.mode == TEMP_MODE  ? GPIO_PIN_RESET : GPIO_PI
 220              		.loc 1 64 5 is_stmt 1 view .LVU57
 221              		.loc 1 64 54 is_stmt 0 view .LVU58
 222 0102 2A79     		ldrb	r2, [r5, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccsSrQjn.s 			page 6


 223              		.loc 1 64 5 view .LVU59
 224 0104 023A     		subs	r2, r2, #2
 225 0106 18BF     		it	ne
 226 0108 0122     		movne	r2, #1
 227 010a 2021     		movs	r1, #32
 228 010c 2046     		mov	r0, r4
 229 010e FFF7FEFF 		bl	HAL_GPIO_WritePin
 230              	.LVL17:
  65:Src/core.c    **** 
  66:Src/core.c    ****     HAL_Delay(500);
 231              		.loc 1 66 5 is_stmt 1 view .LVU60
 232 0112 4FF4FA70 		mov	r0, #500
 233 0116 FFF7FEFF 		bl	HAL_Delay
 234              	.LVL18:
  67:Src/core.c    **** 
  68:Src/core.c    ****     return 1;    
 235              		.loc 1 68 5 view .LVU61
  69:Src/core.c    **** }
 236              		.loc 1 69 1 is_stmt 0 view .LVU62
 237 011a 0120     		movs	r0, #1
 238 011c 70BD     		pop	{r4, r5, r6, pc}
 239              	.L10:
 240 011e 00BF     		.align	2
 241              	.L9:
 242 0120 000C0140 		.word	1073810432
 243 0124 00000000 		.word	state
 244 0128 0000C041 		.word	1103101952
 245 012c 00000000 		.word	hadc1
 246 0130 00000000 		.word	aRxBuffer
 247 0134 00000000 		.word	huart1
 248 0138 00000000 		.word	htim1
 249 013c 00000000 		.word	htim2
 250 0140 00000000 		.word	.LANCHOR0
 251 0144 00000000 		.word	.LANCHOR1
 252 0148 00100140 		.word	1073811456
 253 014c 00000000 		.word	.LANCHOR2
 254 0150 00000000 		.word	.LANCHOR3
 255 0154 00080140 		.word	1073809408
 256              		.cfi_endproc
 257              	.LFE68:
 259              		.section	.text.string2int,"ax",%progbits
 260              		.align	1
 261              		.global	string2int
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu softvfp
 267              	string2int:
 268              	.LVL19:
 269              	.LFB69:
  70:Src/core.c    **** 
  71:Src/core.c    **** int string2int(char* array, int start, int end) {
 270              		.loc 1 71 49 is_stmt 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              		@ link register save eliminated.
ARM GAS  /tmp/ccsSrQjn.s 			page 7


  72:Src/core.c    **** 	if(start > end) return 0;
 275              		.loc 1 72 2 view .LVU64
 276              		.loc 1 72 4 is_stmt 0 view .LVU65
 277 0000 9142     		cmp	r1, r2
 278 0002 12DC     		bgt	.L17
  71:Src/core.c    **** 	if(start > end) return 0;
 279              		.loc 1 71 49 view .LVU66
 280 0004 70B4     		push	{r4, r5, r6}
 281              	.LCFI1:
 282              		.cfi_def_cfa_offset 12
 283              		.cfi_offset 4, -12
 284              		.cfi_offset 5, -8
 285              		.cfi_offset 6, -4
 286 0006 0646     		mov	r6, r0
 287              	.LBB2:
  73:Src/core.c    ****     int result = 0;
  74:Src/core.c    ****     for(int i = end; i >= start; i--) {
 288              		.loc 1 74 13 view .LVU67
 289 0008 1546     		mov	r5, r2
 290              	.LBE2:
  73:Src/core.c    ****     int result = 0;
 291              		.loc 1 73 9 view .LVU68
 292 000a 0020     		movs	r0, #0
 293              	.LVL20:
  73:Src/core.c    ****     int result = 0;
 294              		.loc 1 73 9 view .LVU69
 295 000c 07E0     		b	.L13
 296              	.LVL21:
 297              	.L15:
 298              	.LBB7:
 299              	.LBB3:
 300              	.LBB4:
  75:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
  76:Src/core.c    ****         for(int j = end - i; j > 0; j--) num *= 10;
 301              		.loc 1 76 42 is_stmt 1 discriminator 3 view .LVU70
 302              		.loc 1 76 46 is_stmt 0 discriminator 3 view .LVU71
 303 000e 03EB8303 		add	r3, r3, r3, lsl #2
 304              	.LVL22:
 305              		.loc 1 76 46 discriminator 3 view .LVU72
 306 0012 5B00     		lsls	r3, r3, #1
 307              	.LVL23:
 308              		.loc 1 76 37 is_stmt 1 discriminator 3 view .LVU73
 309              		.loc 1 76 38 is_stmt 0 discriminator 3 view .LVU74
 310 0014 013C     		subs	r4, r4, #1
 311              	.LVL24:
 312              	.L14:
 313              		.loc 1 76 30 is_stmt 1 discriminator 1 view .LVU75
 314              		.loc 1 76 9 is_stmt 0 discriminator 1 view .LVU76
 315 0016 002C     		cmp	r4, #0
 316 0018 F9DC     		bgt	.L15
 317              		.loc 1 76 9 discriminator 1 view .LVU77
 318              	.LBE4:
  77:Src/core.c    **** 		// printf("%d\n", num);
  78:Src/core.c    ****         result += num;
 319              		.loc 1 78 9 is_stmt 1 discriminator 2 view .LVU78
 320              		.loc 1 78 16 is_stmt 0 discriminator 2 view .LVU79
 321 001a 1844     		add	r0, r0, r3
ARM GAS  /tmp/ccsSrQjn.s 			page 8


 322              	.LVL25:
 323              		.loc 1 78 16 discriminator 2 view .LVU80
 324              	.LBE3:
  74:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 325              		.loc 1 74 34 is_stmt 1 discriminator 2 view .LVU81
  74:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 326              		.loc 1 74 35 is_stmt 0 discriminator 2 view .LVU82
 327 001c 013D     		subs	r5, r5, #1
 328              	.LVL26:
 329              	.L13:
  74:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 330              		.loc 1 74 22 is_stmt 1 discriminator 1 view .LVU83
  74:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 331              		.loc 1 74 5 is_stmt 0 discriminator 1 view .LVU84
 332 001e 8D42     		cmp	r5, r1
 333 0020 05DB     		blt	.L22
 334              	.LBB6:
  75:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 335              		.loc 1 75 9 is_stmt 1 view .LVU85
  75:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 336              		.loc 1 75 30 is_stmt 0 view .LVU86
 337 0022 735D     		ldrb	r3, [r6, r5]	@ zero_extendqisi2
  75:Src/core.c    ****         int num = ((int)array[i] - (int)'0');
 338              		.loc 1 75 13 view .LVU87
 339 0024 303B     		subs	r3, r3, #48
 340              	.LVL27:
  76:Src/core.c    **** 		// printf("%d\n", num);
 341              		.loc 1 76 9 is_stmt 1 view .LVU88
 342              	.LBB5:
  76:Src/core.c    **** 		// printf("%d\n", num);
 343              		.loc 1 76 13 view .LVU89
  76:Src/core.c    **** 		// printf("%d\n", num);
 344              		.loc 1 76 17 is_stmt 0 view .LVU90
 345 0026 541B     		subs	r4, r2, r5
 346              	.LVL28:
  76:Src/core.c    **** 		// printf("%d\n", num);
 347              		.loc 1 76 9 view .LVU91
 348 0028 F5E7     		b	.L14
 349              	.LVL29:
 350              	.L17:
 351              	.LCFI2:
 352              		.cfi_def_cfa_offset 0
 353              		.cfi_restore 4
 354              		.cfi_restore 5
 355              		.cfi_restore 6
  76:Src/core.c    **** 		// printf("%d\n", num);
 356              		.loc 1 76 9 view .LVU92
 357              	.LBE5:
 358              	.LBE6:
 359              	.LBE7:
  72:Src/core.c    ****     int result = 0;
 360              		.loc 1 72 25 view .LVU93
 361 002a 0020     		movs	r0, #0
 362              	.LVL30:
  79:Src/core.c    ****     }
  80:Src/core.c    ****     return result;
  81:Src/core.c    **** }
ARM GAS  /tmp/ccsSrQjn.s 			page 9


 363              		.loc 1 81 1 view .LVU94
 364 002c 7047     		bx	lr
 365              	.LVL31:
 366              	.L22:
 367              	.LCFI3:
 368              		.cfi_def_cfa_offset 12
 369              		.cfi_offset 4, -12
 370              		.cfi_offset 5, -8
 371              		.cfi_offset 6, -4
 372              		.loc 1 81 1 view .LVU95
 373 002e 70BC     		pop	{r4, r5, r6}
 374              	.LCFI4:
 375              		.cfi_restore 6
 376              		.cfi_restore 5
 377              		.cfi_restore 4
 378              		.cfi_def_cfa_offset 0
 379              	.LVL32:
 380              		.loc 1 81 1 view .LVU96
 381 0030 7047     		bx	lr
 382              		.cfi_endproc
 383              	.LFE69:
 385              		.section	.rodata.bluetooth_decode.str1.4,"aMS",%progbits,1
 386              		.align	2
 387              	.LC0:
 388 0000 4368616E 		.ascii	"Changed the time to %d mins ON and %d mins OFF\012\000"
 388      67656420 
 388      74686520 
 388      74696D65 
 388      20746F20 
 389              		.global	__aeabi_i2f
 390              		.global	__aeabi_f2d
 391              		.align	2
 392              	.LC1:
 393 0030 4368616E 		.ascii	"Changed the target temp to %3.1f\012\000"
 393      67656420 
 393      74686520 
 393      74617267 
 393      65742074 
 394              		.section	.text.bluetooth_decode,"ax",%progbits
 395              		.align	1
 396              		.global	bluetooth_decode
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 400              		.fpu softvfp
 402              	bluetooth_decode:
 403              	.LVL33:
 404              	.LFB70:
  82:Src/core.c    **** 
  83:Src/core.c    **** void bluetooth_decode(char* msg) {
 405              		.loc 1 83 34 is_stmt 1 view -0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409              		.loc 1 83 34 is_stmt 0 view .LVU98
 410 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 411              	.LCFI5:
ARM GAS  /tmp/ccsSrQjn.s 			page 10


 412              		.cfi_def_cfa_offset 24
 413              		.cfi_offset 3, -24
 414              		.cfi_offset 4, -20
 415              		.cfi_offset 5, -16
 416              		.cfi_offset 6, -12
 417              		.cfi_offset 7, -8
 418              		.cfi_offset 14, -4
  84:Src/core.c    ****     int startInd = -1, endInd = -1;
 419              		.loc 1 84 5 is_stmt 1 view .LVU99
 420              	.LVL34:
  85:Src/core.c    ****     int count = 0;
 421              		.loc 1 85 5 view .LVU100
  86:Src/core.c    ****     while((startInd == -1 || endInd == -1) && count < Uart1_Rx_Cnt) {
 422              		.loc 1 86 5 view .LVU101
  85:Src/core.c    ****     int count = 0;
 423              		.loc 1 85 9 is_stmt 0 view .LVU102
 424 0002 0023     		movs	r3, #0
  84:Src/core.c    ****     int startInd = -1, endInd = -1;
 425              		.loc 1 84 24 view .LVU103
 426 0004 4FF0FF34 		mov	r4, #-1
  84:Src/core.c    ****     int startInd = -1, endInd = -1;
 427              		.loc 1 84 9 view .LVU104
 428 0008 2146     		mov	r1, r4
 429              		.loc 1 86 10 view .LVU105
 430 000a 04E0     		b	.L24
 431              	.LVL35:
 432              	.L51:
  87:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 433              		.loc 1 87 29 is_stmt 1 discriminator 1 view .LVU106
 434              		.loc 1 87 40 is_stmt 0 discriminator 1 view .LVU107
 435 000c 544A     		ldr	r2, .L57
 436 000e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 437              		.loc 1 87 31 discriminator 1 view .LVU108
 438 0010 262A     		cmp	r2, #38
 439 0012 13D0     		beq	.L50
 440              	.LVL36:
 441              	.L26:
  88:Src/core.c    ****         else {if(RxBuffer[count] == '.') endInd = count;}
  89:Src/core.c    ****         count++;
 442              		.loc 1 89 9 is_stmt 1 view .LVU109
 443              		.loc 1 89 14 is_stmt 0 view .LVU110
 444 0014 0133     		adds	r3, r3, #1
 445              	.LVL37:
 446              	.L24:
  86:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 447              		.loc 1 86 10 is_stmt 1 view .LVU111
 448 0016 B1F1FF3F 		cmp	r1, #-1
 449 001a 02D0     		beq	.L27
  86:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 450              		.loc 1 86 27 is_stmt 0 discriminator 2 view .LVU112
 451 001c B4F1FF3F 		cmp	r4, #-1
 452 0020 0ED1     		bne	.L28
 453              	.L27:
  86:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 454              		.loc 1 86 53 discriminator 3 view .LVU113
 455 0022 504A     		ldr	r2, .L57+4
 456 0024 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  /tmp/ccsSrQjn.s 			page 11


  86:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 457              		.loc 1 86 44 discriminator 3 view .LVU114
 458 0026 9A42     		cmp	r2, r3
 459 0028 0ADD     		ble	.L28
  87:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 460              		.loc 1 87 9 is_stmt 1 view .LVU115
  87:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 461              		.loc 1 87 11 is_stmt 0 view .LVU116
 462 002a B1F1FF3F 		cmp	r1, #-1
 463 002e EDD0     		beq	.L51
  88:Src/core.c    ****         else {if(RxBuffer[count] == '.') endInd = count;}
 464              		.loc 1 88 15 is_stmt 1 view .LVU117
  88:Src/core.c    ****         else {if(RxBuffer[count] == '.') endInd = count;}
 465              		.loc 1 88 26 is_stmt 0 view .LVU118
 466 0030 4B4A     		ldr	r2, .L57
 467 0032 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
  88:Src/core.c    ****         else {if(RxBuffer[count] == '.') endInd = count;}
 468              		.loc 1 88 17 view .LVU119
 469 0034 2E2A     		cmp	r2, #46
 470 0036 EDD1     		bne	.L26
  88:Src/core.c    ****         else {if(RxBuffer[count] == '.') endInd = count;}
 471              		.loc 1 88 49 view .LVU120
 472 0038 1C46     		mov	r4, r3
 473              	.LVL38:
  88:Src/core.c    ****         else {if(RxBuffer[count] == '.') endInd = count;}
 474              		.loc 1 88 49 view .LVU121
 475 003a EBE7     		b	.L26
 476              	.LVL39:
 477              	.L50:
  87:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 478              		.loc 1 87 65 view .LVU122
 479 003c 1946     		mov	r1, r3
 480              	.LVL40:
  87:Src/core.c    ****         if(startInd == -1) {if(RxBuffer[count] == '&') startInd = count;}
 481              		.loc 1 87 65 view .LVU123
 482 003e E9E7     		b	.L26
 483              	.LVL41:
 484              	.L28:
  90:Src/core.c    ****     }
  91:Src/core.c    **** 
  92:Src/core.c    ****     if(startInd == -1 || endInd == -1) return ;
 485              		.loc 1 92 5 is_stmt 1 view .LVU124
 486              		.loc 1 92 7 is_stmt 0 view .LVU125
 487 0040 B1F1FF3F 		cmp	r1, #-1
 488 0044 00F08A80 		beq	.L23
 489              		.loc 1 92 23 discriminator 2 view .LVU126
 490 0048 B4F1FF3F 		cmp	r4, #-1
 491 004c 00F08680 		beq	.L23
 492              	.LBB8:
  93:Src/core.c    ****     else {
  94:Src/core.c    ****         int middleInd = 0;
 493              		.loc 1 94 9 is_stmt 1 view .LVU127
 494              	.LVL42:
  95:Src/core.c    ****         int input_temp = 0;
 495              		.loc 1 95 9 view .LVU128
  96:Src/core.c    ****         switch(RxBuffer[startInd+1]) {
 496              		.loc 1 96 9 view .LVU129
ARM GAS  /tmp/ccsSrQjn.s 			page 12


 497              		.loc 1 96 33 is_stmt 0 view .LVU130
 498 0050 4B1C     		adds	r3, r1, #1
 499              	.LVL43:
 500              		.loc 1 96 24 view .LVU131
 501 0052 434A     		ldr	r2, .L57
 502 0054 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 503 0056 303B     		subs	r3, r3, #48
 504 0058 032B     		cmp	r3, #3
 505 005a 77D8     		bhi	.L31
 506 005c DFE803F0 		tbb	[pc, r3]
 507              	.L33:
 508 0060 02       		.byte	(.L36-.L33)/2
 509 0061 13       		.byte	(.L35-.L33)/2
 510 0062 43       		.byte	(.L47-.L33)/2
 511 0063 60       		.byte	(.L32-.L33)/2
 512              		.p2align 1
 513              	.L36:
  97:Src/core.c    ****             case '0':
  98:Src/core.c    ****             if(RxBuffer[endInd - 1] == '2') {
 514              		.loc 1 98 13 is_stmt 1 view .LVU132
 515              		.loc 1 98 32 is_stmt 0 view .LVU133
 516 0064 013C     		subs	r4, r4, #1
 517              	.LVL44:
 518              		.loc 1 98 24 view .LVU134
 519 0066 3E4B     		ldr	r3, .L57
 520 0068 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 521              		.loc 1 98 15 view .LVU135
 522 006a 322B     		cmp	r3, #50
 523 006c 6ED1     		bne	.L31
  99:Src/core.c    ****                 if(state.sw == SYS_ON) state.sw = SYS_OFF;
 524              		.loc 1 99 17 is_stmt 1 view .LVU136
 525              		.loc 1 99 25 is_stmt 0 view .LVU137
 526 006e 3E4B     		ldr	r3, .L57+8
 527 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 528              		.loc 1 99 19 view .LVU138
 529 0072 012B     		cmp	r3, #1
 530 0074 03D0     		beq	.L52
 100:Src/core.c    ****                 else state.sw = SYS_ON;
 531              		.loc 1 100 22 is_stmt 1 view .LVU139
 532              		.loc 1 100 31 is_stmt 0 view .LVU140
 533 0076 3C4B     		ldr	r3, .L57+8
 534 0078 0122     		movs	r2, #1
 535 007a 1A70     		strb	r2, [r3]
 536 007c 66E0     		b	.L31
 537              	.L52:
  99:Src/core.c    ****                 if(state.sw == SYS_ON) state.sw = SYS_OFF;
 538              		.loc 1 99 40 is_stmt 1 discriminator 1 view .LVU141
  99:Src/core.c    ****                 if(state.sw == SYS_ON) state.sw = SYS_OFF;
 539              		.loc 1 99 49 is_stmt 0 discriminator 1 view .LVU142
 540 007e 3A4B     		ldr	r3, .L57+8
 541 0080 0022     		movs	r2, #0
 542 0082 1A70     		strb	r2, [r3]
 543 0084 62E0     		b	.L31
 544              	.LVL45:
 545              	.L35:
 101:Src/core.c    ****                 // strcpy(msg, "Change the system to ");
 102:Src/core.c    ****                 // strcat(msg, state.sw == SYS_ON ? "ON\n" : "OFF\n");
ARM GAS  /tmp/ccsSrQjn.s 			page 13


 103:Src/core.c    ****             }
 104:Src/core.c    ****             break;
 105:Src/core.c    ****             case '1': 
 106:Src/core.c    ****             if(RxBuffer[endInd - 2] == ',') {
 546              		.loc 1 106 13 is_stmt 1 view .LVU143
 547              		.loc 1 106 32 is_stmt 0 view .LVU144
 548 0086 A31E     		subs	r3, r4, #2
 549              		.loc 1 106 24 view .LVU145
 550 0088 354A     		ldr	r2, .L57
 551 008a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 552              		.loc 1 106 15 view .LVU146
 553 008c 2C2B     		cmp	r3, #44
 554 008e 5DD1     		bne	.L31
 107:Src/core.c    ****                 if(RxBuffer[startInd + 3] == '0') state.mode = ONOFF_MODE;
 555              		.loc 1 107 17 is_stmt 1 view .LVU147
 556              		.loc 1 107 38 is_stmt 0 view .LVU148
 557 0090 0331     		adds	r1, r1, #3
 558              	.LVL46:
 559              		.loc 1 107 28 view .LVU149
 560 0092 535C     		ldrb	r3, [r2, r1]	@ zero_extendqisi2
 561              		.loc 1 107 19 view .LVU150
 562 0094 302B     		cmp	r3, #48
 563 0096 07D0     		beq	.L53
 108:Src/core.c    ****                 else if(RxBuffer[startInd + 3] == '1') state.mode = TIME_MODE;
 564              		.loc 1 108 22 is_stmt 1 view .LVU151
 565              		.loc 1 108 24 is_stmt 0 view .LVU152
 566 0098 312B     		cmp	r3, #49
 567 009a 13D0     		beq	.L54
 109:Src/core.c    ****                 else if(RxBuffer[startInd + 3] == '2') state.mode = TEMP_MODE;
 568              		.loc 1 109 22 is_stmt 1 view .LVU153
 569              		.loc 1 109 24 is_stmt 0 view .LVU154
 570 009c 322B     		cmp	r3, #50
 571 009e 06D1     		bne	.L39
 572              		.loc 1 109 56 is_stmt 1 discriminator 1 view .LVU155
 573              		.loc 1 109 67 is_stmt 0 discriminator 1 view .LVU156
 574 00a0 314B     		ldr	r3, .L57+8
 575 00a2 0222     		movs	r2, #2
 576 00a4 1A71     		strb	r2, [r3, #4]
 577 00a6 02E0     		b	.L39
 578              	.L53:
 107:Src/core.c    ****                 if(RxBuffer[startInd + 3] == '0') state.mode = ONOFF_MODE;
 579              		.loc 1 107 51 is_stmt 1 discriminator 1 view .LVU157
 107:Src/core.c    ****                 if(RxBuffer[startInd + 3] == '0') state.mode = ONOFF_MODE;
 580              		.loc 1 107 62 is_stmt 0 discriminator 1 view .LVU158
 581 00a8 2F4B     		ldr	r3, .L57+8
 582 00aa 0022     		movs	r2, #0
 583 00ac 1A71     		strb	r2, [r3, #4]
 584              	.L39:
 110:Src/core.c    ****                 if(RxBuffer[endInd - 1] == '0') state.lightOff = 0;
 585              		.loc 1 110 17 is_stmt 1 view .LVU159
 586              		.loc 1 110 36 is_stmt 0 view .LVU160
 587 00ae 013C     		subs	r4, r4, #1
 588              	.LVL47:
 589              		.loc 1 110 28 view .LVU161
 590 00b0 2B4B     		ldr	r3, .L57
 591 00b2 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 592              		.loc 1 110 19 view .LVU162
ARM GAS  /tmp/ccsSrQjn.s 			page 14


 593 00b4 302B     		cmp	r3, #48
 594 00b6 09D0     		beq	.L55
 111:Src/core.c    ****                 else if(RxBuffer[endInd - 1] == '1') state.lightOff = 1;
 595              		.loc 1 111 22 is_stmt 1 view .LVU163
 596              		.loc 1 111 24 is_stmt 0 view .LVU164
 597 00b8 312B     		cmp	r3, #49
 598 00ba 47D1     		bne	.L31
 599              		.loc 1 111 54 is_stmt 1 discriminator 1 view .LVU165
 600              		.loc 1 111 69 is_stmt 0 discriminator 1 view .LVU166
 601 00bc 2A4B     		ldr	r3, .L57+8
 602 00be 0122     		movs	r2, #1
 603 00c0 5A61     		str	r2, [r3, #20]
 604 00c2 43E0     		b	.L31
 605              	.LVL48:
 606              	.L54:
 108:Src/core.c    ****                 else if(RxBuffer[startInd + 3] == '2') state.mode = TEMP_MODE;
 607              		.loc 1 108 56 is_stmt 1 discriminator 1 view .LVU167
 108:Src/core.c    ****                 else if(RxBuffer[startInd + 3] == '2') state.mode = TEMP_MODE;
 608              		.loc 1 108 67 is_stmt 0 discriminator 1 view .LVU168
 609 00c4 284B     		ldr	r3, .L57+8
 610 00c6 0122     		movs	r2, #1
 611 00c8 1A71     		strb	r2, [r3, #4]
 612 00ca F0E7     		b	.L39
 613              	.LVL49:
 614              	.L55:
 110:Src/core.c    ****                 if(RxBuffer[endInd - 1] == '0') state.lightOff = 0;
 615              		.loc 1 110 49 is_stmt 1 discriminator 1 view .LVU169
 110:Src/core.c    ****                 if(RxBuffer[endInd - 1] == '0') state.lightOff = 0;
 616              		.loc 1 110 64 is_stmt 0 discriminator 1 view .LVU170
 617 00cc 264B     		ldr	r3, .L57+8
 618 00ce 0022     		movs	r2, #0
 619 00d0 5A61     		str	r2, [r3, #20]
 620 00d2 3BE0     		b	.L31
 621              	.LVL50:
 622              	.L42:
 623              	.LBB9:
 112:Src/core.c    ****             }
 113:Src/core.c    ****             break;
 114:Src/core.c    ****             case '2':
 115:Src/core.c    ****             
 116:Src/core.c    ****             for(int i = startInd; i < endInd; i++) 
 624              		.loc 1 116 47 is_stmt 1 discriminator 2 view .LVU171
 625              		.loc 1 116 48 is_stmt 0 discriminator 2 view .LVU172
 626 00d4 0133     		adds	r3, r3, #1
 627              	.LVL51:
 628              	.L34:
 629              		.loc 1 116 35 is_stmt 1 discriminator 1 view .LVU173
 630              		.loc 1 116 13 is_stmt 0 discriminator 1 view .LVU174
 631 00d6 9C42     		cmp	r4, r3
 632 00d8 08DD     		ble	.L56
 117:Src/core.c    ****                 if(RxBuffer[i] == ',')
 633              		.loc 1 117 17 is_stmt 1 view .LVU175
 634              		.loc 1 117 28 is_stmt 0 view .LVU176
 635 00da 214A     		ldr	r2, .L57
 636 00dc D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 637              		.loc 1 117 19 view .LVU177
 638 00de 2C2A     		cmp	r2, #44
ARM GAS  /tmp/ccsSrQjn.s 			page 15


 639 00e0 F8D1     		bne	.L42
 118:Src/core.c    ****                     middleInd = i;
 640              		.loc 1 118 31 view .LVU178
 641 00e2 1D46     		mov	r5, r3
 642              	.LVL52:
 643              		.loc 1 118 31 view .LVU179
 644 00e4 F6E7     		b	.L42
 645              	.LVL53:
 646              	.L47:
 647              		.loc 1 118 31 view .LVU180
 648              	.LBE9:
  96:Src/core.c    ****             case '0':
 649              		.loc 1 96 24 view .LVU181
 650 00e6 0B46     		mov	r3, r1
 651 00e8 0025     		movs	r5, #0
 652 00ea F4E7     		b	.L34
 653              	.LVL54:
 654              	.L56:
 119:Src/core.c    ****             if(middleInd != 0) {
 655              		.loc 1 119 13 is_stmt 1 view .LVU182
 656              		.loc 1 119 15 is_stmt 0 view .LVU183
 657 00ec 75B3     		cbz	r5, .L31
 658              	.LBB10:
 120:Src/core.c    ****                 int on_time = string2int(RxBuffer, startInd + 3, middleInd - 1);
 659              		.loc 1 120 17 is_stmt 1 view .LVU184
 660              		.loc 1 120 31 is_stmt 0 view .LVU185
 661 00ee 1C4F     		ldr	r7, .L57
 662 00f0 6A1E     		subs	r2, r5, #1
 663 00f2 0331     		adds	r1, r1, #3
 664              	.LVL55:
 665              		.loc 1 120 31 view .LVU186
 666 00f4 3846     		mov	r0, r7
 667              	.LVL56:
 668              		.loc 1 120 31 view .LVU187
 669 00f6 FFF7FEFF 		bl	string2int
 670              	.LVL57:
 671              		.loc 1 120 31 view .LVU188
 672 00fa 0646     		mov	r6, r0
 673              	.LVL58:
 121:Src/core.c    ****                 int off_time = string2int(RxBuffer, middleInd + 1, endInd - 1);
 674              		.loc 1 121 17 is_stmt 1 view .LVU189
 675              		.loc 1 121 32 is_stmt 0 view .LVU190
 676 00fc 621E     		subs	r2, r4, #1
 677 00fe 691C     		adds	r1, r5, #1
 678 0100 3846     		mov	r0, r7
 679              	.LVL59:
 680              		.loc 1 121 32 view .LVU191
 681 0102 FFF7FEFF 		bl	string2int
 682              	.LVL60:
 122:Src/core.c    ****                 if(on_time >= 15 && off_time >= 15) {
 683              		.loc 1 122 17 is_stmt 1 view .LVU192
 684              		.loc 1 122 19 is_stmt 0 view .LVU193
 685 0106 0E2E     		cmp	r6, #14
 686 0108 20DD     		ble	.L31
 687              		.loc 1 122 34 discriminator 1 view .LVU194
 688 010a 0E28     		cmp	r0, #14
 689 010c 1EDD     		ble	.L31
ARM GAS  /tmp/ccsSrQjn.s 			page 16


 123:Src/core.c    ****                     state.tarTime[0] = on_time;
 690              		.loc 1 123 21 is_stmt 1 view .LVU195
 691              		.loc 1 123 38 is_stmt 0 view .LVU196
 692 010e 164B     		ldr	r3, .L57+8
 693 0110 DE60     		str	r6, [r3, #12]
 124:Src/core.c    ****                     state.tarTime[1] = off_time;
 694              		.loc 1 124 21 is_stmt 1 view .LVU197
 695              		.loc 1 124 38 is_stmt 0 view .LVU198
 696 0112 1861     		str	r0, [r3, #16]
 125:Src/core.c    ****                     printf("Changed the time to %d mins ON and %d mins OFF\n", on_time, off_time);
 697              		.loc 1 125 21 is_stmt 1 view .LVU199
 698 0114 0246     		mov	r2, r0
 699 0116 3146     		mov	r1, r6
 700 0118 1448     		ldr	r0, .L57+12
 701              	.LVL61:
 702              		.loc 1 125 21 is_stmt 0 view .LVU200
 703 011a FFF7FEFF 		bl	printf
 704              	.LVL62:
 705              		.loc 1 125 21 view .LVU201
 706 011e 15E0     		b	.L31
 707              	.LVL63:
 708              	.L32:
 709              		.loc 1 125 21 view .LVU202
 710              	.LBE10:
 126:Src/core.c    ****                 }
 127:Src/core.c    ****             }
 128:Src/core.c    ****             break;
 129:Src/core.c    ****             case '3':
 130:Src/core.c    ****             input_temp = string2int(RxBuffer, startInd + 3, endInd - 1);
 711              		.loc 1 130 13 is_stmt 1 view .LVU203
 712              		.loc 1 130 26 is_stmt 0 view .LVU204
 713 0120 621E     		subs	r2, r4, #1
 714 0122 0331     		adds	r1, r1, #3
 715              	.LVL64:
 716              		.loc 1 130 26 view .LVU205
 717 0124 0E48     		ldr	r0, .L57
 718              	.LVL65:
 719              		.loc 1 130 26 view .LVU206
 720 0126 FFF7FEFF 		bl	string2int
 721              	.LVL66:
 131:Src/core.c    ****             if(input_temp <= 30 && input_temp >= 15) state.tarTemp = input_temp;
 722              		.loc 1 131 13 is_stmt 1 view .LVU207
 723              		.loc 1 131 33 is_stmt 0 view .LVU208
 724 012a A0F10F03 		sub	r3, r0, #15
 725              		.loc 1 131 15 view .LVU209
 726 012e 0F2B     		cmp	r3, #15
 727 0130 03D8     		bhi	.L44
 728              		.loc 1 131 54 is_stmt 1 discriminator 1 view .LVU210
 729              		.loc 1 131 68 is_stmt 0 discriminator 1 view .LVU211
 730 0132 FFF7FEFF 		bl	__aeabi_i2f
 731              	.LVL67:
 732              		.loc 1 131 68 discriminator 1 view .LVU212
 733 0136 0C4B     		ldr	r3, .L57+8
 734 0138 9860     		str	r0, [r3, #8]	@ float
 735              	.L44:
 132:Src/core.c    ****             printf("Changed the target temp to %3.1f\n", state.tarTemp);
 736              		.loc 1 132 13 is_stmt 1 view .LVU213
ARM GAS  /tmp/ccsSrQjn.s 			page 17


 737 013a 0B4B     		ldr	r3, .L57+8
 738 013c 9868     		ldr	r0, [r3, #8]	@ float
 739 013e FFF7FEFF 		bl	__aeabi_f2d
 740              	.LVL68:
 741 0142 0246     		mov	r2, r0
 742 0144 0B46     		mov	r3, r1
 743 0146 0A48     		ldr	r0, .L57+16
 744 0148 FFF7FEFF 		bl	printf
 745              	.LVL69:
 133:Src/core.c    ****             break;
 746              		.loc 1 133 13 view .LVU214
 747              	.L31:
 134:Src/core.c    ****         }
 135:Src/core.c    ****         Uart1_Rx_Cnt = 0;
 748              		.loc 1 135 9 view .LVU215
 749              		.loc 1 135 22 is_stmt 0 view .LVU216
 750 014c 0021     		movs	r1, #0
 751 014e 054B     		ldr	r3, .L57+4
 752 0150 1970     		strb	r1, [r3]
 136:Src/core.c    ****         memset(RxBuffer, 0x00, sizeof(RxBuffer));
 753              		.loc 1 136 9 is_stmt 1 view .LVU217
 754 0152 4FF40072 		mov	r2, #512
 755 0156 0248     		ldr	r0, .L57
 756 0158 FFF7FEFF 		bl	memset
 757              	.LVL70:
 758              	.L23:
 759              		.loc 1 136 9 is_stmt 0 view .LVU218
 760              	.LBE8:
 137:Src/core.c    ****     }
 138:Src/core.c    **** }
 761              		.loc 1 138 1 view .LVU219
 762 015c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 763              	.L58:
 764 015e 00BF     		.align	2
 765              	.L57:
 766 0160 00000000 		.word	RxBuffer
 767 0164 00000000 		.word	.LANCHOR4
 768 0168 00000000 		.word	state
 769 016c 00000000 		.word	.LC0
 770 0170 30000000 		.word	.LC1
 771              		.cfi_endproc
 772              	.LFE70:
 774              		.section	.text.changeLight,"ax",%progbits
 775              		.align	1
 776              		.global	changeLight
 777              		.syntax unified
 778              		.thumb
 779              		.thumb_func
 780              		.fpu softvfp
 782              	changeLight:
 783              	.LVL71:
 784              	.LFB71:
 139:Src/core.c    **** 
 140:Src/core.c    **** void changeLight(enum Mode mode, int lightOff) {
 785              		.loc 1 140 48 is_stmt 1 view -0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccsSrQjn.s 			page 18


 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789              		.loc 1 140 48 is_stmt 0 view .LVU221
 790 0000 70B5     		push	{r4, r5, r6, lr}
 791              	.LCFI6:
 792              		.cfi_def_cfa_offset 16
 793              		.cfi_offset 4, -16
 794              		.cfi_offset 5, -12
 795              		.cfi_offset 6, -8
 796              		.cfi_offset 14, -4
 797 0002 0646     		mov	r6, r0
 798 0004 0C46     		mov	r4, r1
 141:Src/core.c    ****     HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_SET);
 799              		.loc 1 141 5 is_stmt 1 view .LVU222
 800 0006 134D     		ldr	r5, .L66
 801 0008 0122     		movs	r2, #1
 802 000a 0821     		movs	r1, #8
 803              	.LVL72:
 804              		.loc 1 141 5 is_stmt 0 view .LVU223
 805 000c 2846     		mov	r0, r5
 806              	.LVL73:
 807              		.loc 1 141 5 view .LVU224
 808 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 809              	.LVL74:
 142:Src/core.c    ****     HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_SET);
 810              		.loc 1 142 5 is_stmt 1 view .LVU225
 811 0012 0122     		movs	r2, #1
 812 0014 1021     		movs	r1, #16
 813 0016 2846     		mov	r0, r5
 814 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 815              	.LVL75:
 143:Src/core.c    ****     HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_SET);
 816              		.loc 1 143 5 view .LVU226
 817 001c 0122     		movs	r2, #1
 818 001e 2021     		movs	r1, #32
 819 0020 2846     		mov	r0, r5
 820 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 821              	.LVL76:
 144:Src/core.c    ****     if(!lightOff) 
 822              		.loc 1 144 5 view .LVU227
 823              		.loc 1 144 7 is_stmt 0 view .LVU228
 824 0026 3CB9     		cbnz	r4, .L59
 145:Src/core.c    ****         if(mode == ONOFF_MODE)
 825              		.loc 1 145 9 is_stmt 1 view .LVU229
 826              		.loc 1 145 11 is_stmt 0 view .LVU230
 827 0028 3EB1     		cbz	r6, .L64
 146:Src/core.c    ****             HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_RESET);
 147:Src/core.c    ****         else if(mode == TIME_MODE)
 828              		.loc 1 147 14 is_stmt 1 view .LVU231
 829              		.loc 1 147 16 is_stmt 0 view .LVU232
 830 002a 012E     		cmp	r6, #1
 831 002c 0BD0     		beq	.L65
 148:Src/core.c    ****             HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_RESET);
 149:Src/core.c    ****         else
 150:Src/core.c    ****             HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
 832              		.loc 1 150 13 is_stmt 1 view .LVU233
 833 002e 0022     		movs	r2, #0
 834 0030 2021     		movs	r1, #32
ARM GAS  /tmp/ccsSrQjn.s 			page 19


 835 0032 0848     		ldr	r0, .L66
 836 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 837              	.LVL77:
 838              	.L59:
 151:Src/core.c    **** }
 839              		.loc 1 151 1 is_stmt 0 view .LVU234
 840 0038 70BD     		pop	{r4, r5, r6, pc}
 841              	.LVL78:
 842              	.L64:
 146:Src/core.c    ****             HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_RESET);
 843              		.loc 1 146 13 is_stmt 1 view .LVU235
 844 003a 0022     		movs	r2, #0
 845 003c 0821     		movs	r1, #8
 846 003e 2846     		mov	r0, r5
 847 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 848              	.LVL79:
 849 0044 F8E7     		b	.L59
 850              	.L65:
 148:Src/core.c    ****             HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_RESET);
 851              		.loc 1 148 13 view .LVU236
 852 0046 0022     		movs	r2, #0
 853 0048 1021     		movs	r1, #16
 854 004a 0248     		ldr	r0, .L66
 855 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 856              	.LVL80:
 857 0050 F2E7     		b	.L59
 858              	.L67:
 859 0052 00BF     		.align	2
 860              	.L66:
 861 0054 00080140 		.word	1073809408
 862              		.cfi_endproc
 863              	.LFE71:
 865              		.section	.rodata.send_state.str1.4,"aMS",%progbits,1
 866              		.align	2
 867              	.LC2:
 868 0000 4F46460A 		.ascii	"OFF\012\000"
 868      00
 869 0005 000000   		.align	2
 870              	.LC3:
 871 0008 4F4E0A00 		.ascii	"ON\012\000"
 872              		.align	2
 873              	.LC4:
 874 000c 54696D65 		.ascii	"Time Mode\012\000"
 874      204D6F64 
 874      650A00
 875 0017 00       		.align	2
 876              	.LC5:
 877 0018 4F4E2F4F 		.ascii	"ON/OFF Mode\012\000"
 877      4646204D 
 877      6F64650A 
 877      00
 878 0025 000000   		.align	2
 879              	.LC6:
 880 0028 54656D70 		.ascii	"Temp Mode\012\000"
 880      204D6F64 
 880      650A00
 881 0033 00       		.align	2
ARM GAS  /tmp/ccsSrQjn.s 			page 20


 882              	.LC7:
 883 0034 636C6F73 		.ascii	"closed\000"
 883      656400
 884 003b 00       		.align	2
 885              	.LC8:
 886 003c 72756E00 		.ascii	"run\000"
 887              		.align	2
 888              	.LC9:
 889 0040 73746172 		.ascii	"start\000"
 889      7400
 890 0046 0000     		.align	2
 891              	.LC10:
 892 0048 636C6F73 		.ascii	"close\000"
 892      6500
 893 004e 0000     		.align	2
 894              	.LC11:
 895 0050 4E6F7720 		.ascii	"Now the air-con is \000"
 895      74686520 
 895      6169722D 
 895      636F6E20 
 895      69732000 
 896              		.align	2
 897              	.LC12:
 898 0064 54686520 		.ascii	"The current mode is \000"
 898      63757272 
 898      656E7420 
 898      6D6F6465 
 898      20697320 
 899 0079 000000   		.align	2
 900              	.LC13:
 901 007c 43757272 		.ascii	"Current temperature is : %3.1f\012\000"
 901      656E7420 
 901      74656D70 
 901      65726174 
 901      75726520 
 902              		.align	2
 903              	.LC14:
 904 009c 54686520 		.ascii	"The air-con has \000"
 904      6169722D 
 904      636F6E20 
 904      68617320 
 904      00
 905 00ad 000000   		.align	2
 906              	.LC15:
 907 00b0 20666F72 		.ascii	" for \000"
 907      2000
 908 00b6 0000     		.align	2
 909              	.LC16:
 910 00b8 206D696E 		.ascii	" minutes\012\000"
 910      75746573 
 910      0A00
 911 00c2 0000     		.align	2
 912              	.LC17:
 913 00c4 25732564 		.ascii	"%s%d%s\000"
 913      257300
 914 00cb 00       		.align	2
 915              	.LC18:
ARM GAS  /tmp/ccsSrQjn.s 			page 21


 916 00cc 54686520 		.ascii	"The target temperature is %3.1f\012\000"
 916      74617267 
 916      65742074 
 916      656D7065 
 916      72617475 
 917 00ed 000000   		.align	2
 918              	.LC19:
 919 00f0 54686520 		.ascii	"The last temperature achievement is %d\012\000"
 919      6C617374 
 919      2074656D 
 919      70657261 
 919      74757265 
 920              		.align	2
 921              	.LC20:
 922 0118 436C6F73 		.ascii	"Closed for %d mins and Opened for %d mins\012\000"
 922      65642066 
 922      6F722025 
 922      64206D69 
 922      6E732061 
 923 0143 00       		.align	2
 924              	.LC21:
 925 0144 4F70656E 		.ascii	"Opened for %d mins and closed for %d mins\012\000"
 925      65642066 
 925      6F722025 
 925      64206D69 
 925      6E732061 
 926 016f 00       		.align	2
 927              	.LC22:
 928 0170 54686572 		.ascii	"There are %d minutes before air-con %s\012\000"
 928      65206172 
 928      65202564 
 928      206D696E 
 928      75746573 
 929              		.align	2
 930              	.LC23:
 931 0198 4F70656E 		.ascii	"Open for %d mins and close for %d mins\012\000"
 931      20666F72 
 931      20256420 
 931      6D696E73 
 931      20616E64 
 932              		.section	.text.send_state,"ax",%progbits
 933              		.align	1
 934              		.global	send_state
 935              		.syntax unified
 936              		.thumb
 937              		.thumb_func
 938              		.fpu softvfp
 940              	send_state:
 941              	.LFB73:
 152:Src/core.c    **** 
 153:Src/core.c    **** char* msg[30];
 154:Src/core.c    **** void update_info() {
 155:Src/core.c    ****     strcpy(msg, "");
 156:Src/core.c    ****     msg[0] = '0';
 157:Src/core.c    ****     enum SystemSwitch last = state.sw;
 158:Src/core.c    ****     enum Mode lastMode = state.mode;
 159:Src/core.c    ****     state.re_sw = HAL_GPIO_ReadPin(REMOTE_SWITCH_GPIO_Port, REMOTE_SWITCH_Pin) == GPIO_PIN_RESET ? 
ARM GAS  /tmp/ccsSrQjn.s 			page 22


 160:Src/core.c    ****     if(state.re_sw != REMOTE_ON) {
 161:Src/core.c    ****         state.sw = HAL_GPIO_ReadPin(MAIN_SWITCH_GPIO_Port, MAIN_SWITCH_Pin) == GPIO_PIN_RESET ? SYS
 162:Src/core.c    ****         state.mode = ONOFF_MODE;
 163:Src/core.c    ****     }
 164:Src/core.c    ****     if(state.re_sw == REMOTE_ON && Uart1_Rx_Cnt != 0) bluetooth_decode(msg);
 165:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 166:Src/core.c    ****     state.off_sw = HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET ? OFF_O
 167:Src/core.c    ****     state.temp = HAL_ADC_GetValue(&hadc1) * 0.0008056f * 100;
 168:Src/core.c    ****     if(last != state.sw) {
 169:Src/core.c    ****         move(state.sw);
 170:Src/core.c    ****         strcpy(msg, "Change the system to ");
 171:Src/core.c    ****         strcat(msg, state.sw == SYS_ON ? "ON\n" : "OFF\n");
 172:Src/core.c    ****     }
 173:Src/core.c    ****     if(lastMode != state.mode) {
 174:Src/core.c    ****         move(state.sw);
 175:Src/core.c    ****         strcpy(msg, "Change mode to ");
 176:Src/core.c    ****         strcat(msg, state.mode == ONOFF_MODE ? "ONOFF mode\n" : state.mode == TIME_MODE ? "TIME mod
 177:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 178:Src/core.c    ****         changeLight(state.mode, state.lightOff);
 179:Src/core.c    ****     }
 180:Src/core.c    ****     if(msg[0] != '0') printf(msg);
 181:Src/core.c    **** }
 182:Src/core.c    **** 
 183:Src/core.c    **** int lastAchievement = 0;
 184:Src/core.c    **** void send_state() {
 942              		.loc 1 184 19 view -0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 88
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946 0000 70B5     		push	{r4, r5, r6, lr}
 947              	.LCFI7:
 948              		.cfi_def_cfa_offset 16
 949              		.cfi_offset 4, -16
 950              		.cfi_offset 5, -12
 951              		.cfi_offset 6, -8
 952              		.cfi_offset 14, -4
 953 0002 96B0     		sub	sp, sp, #88
 954              	.LCFI8:
 955              		.cfi_def_cfa_offset 104
 185:Src/core.c    ****     // char modeStr[15] = "ON/OFF Mode";
 186:Src/core.c    ****     char msg1[25];
 956              		.loc 1 186 5 view .LVU238
 187:Src/core.c    ****     strcpy(msg1, "Now the air-con is ");
 957              		.loc 1 187 5 view .LVU239
 958 0004 0FAC     		add	r4, sp, #60
 959 0006 6D4D     		ldr	r5, .L98
 960 0008 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 961 000a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 962 000c 2B68     		ldr	r3, [r5]
 963 000e 2360     		str	r3, [r4]
 188:Src/core.c    ****     strcat(msg1, state.sw == SYS_ON ? "ON\n" : "OFF\n");
 964              		.loc 1 188 5 view .LVU240
 965              		.loc 1 188 23 is_stmt 0 view .LVU241
 966 0010 6B4B     		ldr	r3, .L98+4
 967 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 968              		.loc 1 188 5 view .LVU242
 969 0014 012B     		cmp	r3, #1
ARM GAS  /tmp/ccsSrQjn.s 			page 23


 970 0016 16D0     		beq	.L88
 971 0018 6A49     		ldr	r1, .L98+8
 972              	.L69:
 973              		.loc 1 188 5 discriminator 4 view .LVU243
 974 001a 0FA8     		add	r0, sp, #60
 975 001c FFF7FEFF 		bl	strcat
 976              	.LVL81:
 189:Src/core.c    ****     printf(msg1);
 977              		.loc 1 189 5 is_stmt 1 discriminator 4 view .LVU244
 978 0020 0FA8     		add	r0, sp, #60
 979 0022 FFF7FEFF 		bl	printf
 980              	.LVL82:
 190:Src/core.c    **** 
 191:Src/core.c    ****     char msg2[25];
 981              		.loc 1 191 5 discriminator 4 view .LVU245
 192:Src/core.c    ****     strcpy(msg2, "The current mode is ");
 982              		.loc 1 192 5 discriminator 4 view .LVU246
 983 0026 08AC     		add	r4, sp, #32
 984 0028 674D     		ldr	r5, .L98+12
 985 002a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 986 002c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 987 002e 95E80300 		ldm	r5, {r0, r1}
 988 0032 44F8040B 		str	r0, [r4], #4
 989 0036 2170     		strb	r1, [r4]
 193:Src/core.c    ****     strcat(msg2, state.mode == ONOFF_MODE ? "ON/OFF Mode\n" : state.mode == TEMP_MODE ? "Temp Mode\
 990              		.loc 1 193 5 discriminator 4 view .LVU247
 991              		.loc 1 193 23 is_stmt 0 discriminator 4 view .LVU248
 992 0038 614B     		ldr	r3, .L98+4
 993 003a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 994              		.loc 1 193 5 discriminator 4 view .LVU249
 995 003c 3BB1     		cbz	r3, .L83
 996              		.loc 1 193 5 discriminator 1 view .LVU250
 997 003e 022B     		cmp	r3, #2
 998 0040 03D0     		beq	.L89
 999              		.loc 1 193 5 view .LVU251
 1000 0042 6249     		ldr	r1, .L98+16
 1001 0044 04E0     		b	.L70
 1002              	.L88:
 188:Src/core.c    ****     printf(msg1);
 1003              		.loc 1 188 5 view .LVU252
 1004 0046 6249     		ldr	r1, .L98+20
 1005 0048 E7E7     		b	.L69
 1006              	.L89:
 1007              		.loc 1 193 5 view .LVU253
 1008 004a 6249     		ldr	r1, .L98+24
 1009 004c 00E0     		b	.L70
 1010              	.L83:
 1011 004e 6249     		ldr	r1, .L98+28
 1012              	.L70:
 1013              		.loc 1 193 5 discriminator 8 view .LVU254
 1014 0050 08A8     		add	r0, sp, #32
 1015 0052 FFF7FEFF 		bl	strcat
 1016              	.LVL83:
 194:Src/core.c    ****     printf(msg2);
 1017              		.loc 1 194 5 is_stmt 1 discriminator 8 view .LVU255
 1018 0056 08A8     		add	r0, sp, #32
 1019 0058 FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccsSrQjn.s 			page 24


 1020              	.LVL84:
 195:Src/core.c    **** 
 196:Src/core.c    ****     printf("Current temperature is : %3.1f\n", state.temp);
 1021              		.loc 1 196 5 discriminator 8 view .LVU256
 1022              		.loc 1 196 53 is_stmt 0 discriminator 8 view .LVU257
 1023 005c 584E     		ldr	r6, .L98+4
 1024              		.loc 1 196 5 discriminator 8 view .LVU258
 1025 005e B069     		ldr	r0, [r6, #24]	@ float
 1026 0060 FFF7FEFF 		bl	__aeabi_f2d
 1027              	.LVL85:
 1028 0064 0246     		mov	r2, r0
 1029 0066 0B46     		mov	r3, r1
 1030 0068 5C48     		ldr	r0, .L98+32
 1031 006a FFF7FEFF 		bl	printf
 1032              	.LVL86:
 197:Src/core.c    **** 
 198:Src/core.c    ****     volatile int currentTime = runningTime;
 1033              		.loc 1 198 5 is_stmt 1 discriminator 8 view .LVU259
 1034              		.loc 1 198 18 is_stmt 0 discriminator 8 view .LVU260
 1035 006e 5C4B     		ldr	r3, .L98+36
 1036 0070 1B68     		ldr	r3, [r3]
 1037 0072 0793     		str	r3, [sp, #28]
 199:Src/core.c    ****     char msg3[25];
 1038              		.loc 1 199 5 is_stmt 1 discriminator 8 view .LVU261
 200:Src/core.c    ****     strcpy(msg3, "The air-con has ");
 1039              		.loc 1 200 5 discriminator 8 view .LVU262
 1040 0074 6C46     		mov	r4, sp
 1041 0076 5B4D     		ldr	r5, .L98+40
 1042 0078 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1043 007a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1044 007c 2B68     		ldr	r3, [r5]
 1045 007e 2370     		strb	r3, [r4]
 201:Src/core.c    ****     strcat(msg3, state.sw == SYS_ON ? "run" : "closed");
 1046              		.loc 1 201 5 discriminator 8 view .LVU263
 1047              		.loc 1 201 23 is_stmt 0 discriminator 8 view .LVU264
 1048 0080 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1049              		.loc 1 201 5 discriminator 8 view .LVU265
 1050 0082 012B     		cmp	r3, #1
 1051 0084 2ED0     		beq	.L90
 1052              		.loc 1 201 5 view .LVU266
 1053 0086 5849     		ldr	r1, .L98+44
 1054              	.L71:
 1055              		.loc 1 201 5 discriminator 4 view .LVU267
 1056 0088 6846     		mov	r0, sp
 1057 008a FFF7FEFF 		bl	strcat
 1058              	.LVL87:
 202:Src/core.c    ****     strcat(msg3, " for ");
 1059              		.loc 1 202 5 is_stmt 1 discriminator 4 view .LVU268
 1060 008e 6846     		mov	r0, sp
 1061 0090 FFF7FEFF 		bl	strlen
 1062              	.LVL88:
 1063 0094 0346     		mov	r3, r0
 1064 0096 0DEB0001 		add	r1, sp, r0
 1065 009a 544A     		ldr	r2, .L98+48
 1066 009c 1068     		ldr	r0, [r2]
 1067 009e 4DF80300 		str	r0, [sp, r3]	@ unaligned
 1068 00a2 9388     		ldrh	r3, [r2, #4]	@ unaligned
ARM GAS  /tmp/ccsSrQjn.s 			page 25


 1069 00a4 8B80     		strh	r3, [r1, #4]	@ unaligned
 203:Src/core.c    ****     printf("%s%d%s", msg3, (currentTime - (state.sw == SYS_ON ? state.startTime : state.shutDownTim
 1070              		.loc 1 203 5 discriminator 4 view .LVU269
 1071              		.loc 1 203 41 is_stmt 0 discriminator 4 view .LVU270
 1072 00a6 079B     		ldr	r3, [sp, #28]
 1073              		.loc 1 203 49 discriminator 4 view .LVU271
 1074 00a8 454A     		ldr	r2, .L98+4
 1075 00aa 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1076              		.loc 1 203 81 discriminator 4 view .LVU272
 1077 00ac 012A     		cmp	r2, #1
 1078 00ae 1BD0     		beq	.L91
 1079              		.loc 1 203 81 discriminator 2 view .LVU273
 1080 00b0 434A     		ldr	r2, .L98+4
 1081 00b2 126A     		ldr	r2, [r2, #32]
 1082              	.L73:
 1083              		.loc 1 203 41 discriminator 4 view .LVU274
 1084 00b4 9B1A     		subs	r3, r3, r2
 1085              		.loc 1 203 5 discriminator 4 view .LVU275
 1086 00b6 4E49     		ldr	r1, .L98+52
 1087 00b8 81FB0321 		smull	r2, r1, r1, r3
 1088 00bc 1944     		add	r1, r1, r3
 1089 00be DA17     		asrs	r2, r3, #31
 1090 00c0 4C4B     		ldr	r3, .L98+56
 1091 00c2 C2EB6112 		rsb	r2, r2, r1, asr #5
 1092 00c6 6946     		mov	r1, sp
 1093 00c8 4B48     		ldr	r0, .L98+60
 1094 00ca FFF7FEFF 		bl	printf
 1095              	.LVL89:
 204:Src/core.c    **** 
 205:Src/core.c    ****     if(state.mode == TEMP_MODE) {
 1096              		.loc 1 205 5 is_stmt 1 discriminator 4 view .LVU276
 1097              		.loc 1 205 13 is_stmt 0 discriminator 4 view .LVU277
 1098 00ce 3C4B     		ldr	r3, .L98+4
 1099 00d0 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1100              		.loc 1 205 7 discriminator 4 view .LVU278
 1101 00d2 022B     		cmp	r3, #2
 1102 00d4 0BD0     		beq	.L92
 206:Src/core.c    ****         printf("The target temperature is %3.1f\n", state.tarTemp);
 207:Src/core.c    ****         printf("The last temperature achievement is %d\n", lastAchievement);
 208:Src/core.c    ****         if(state.sw == SYS_ON)
 209:Src/core.c    ****             printf("Closed for %d mins and Opened for %d mins\n", (state.startTime - state.shutDown
 210:Src/core.c    ****         else
 211:Src/core.c    ****             printf("Opened for %d mins and closed for %d mins\n", (state.shutDownTime - state.start
 212:Src/core.c    ****     }
 213:Src/core.c    ****     else if(state.mode == TIME_MODE) {
 1103              		.loc 1 213 10 is_stmt 1 view .LVU279
 1104              		.loc 1 213 12 is_stmt 0 view .LVU280
 1105 00d6 012B     		cmp	r3, #1
 1106 00d8 47D0     		beq	.L93
 1107              	.L76:
 214:Src/core.c    ****         int passTime = (currentTime - (state.sw == SYS_ON ? state.startTime : state.shutDownTime)) 
 215:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 216:Src/core.c    ****         printf("There are %d minutes before air-con %s\n", remainingTime, state.sw == SYS_ON ? "clo
 217:Src/core.c    ****         printf("Open for %d mins and close for %d mins\n", state.tarTime[0], state.tarTime[1]);
 218:Src/core.c    ****     }
 219:Src/core.c    **** 
 220:Src/core.c    ****     // printf("%d  %d  %d\n", currentTime, state.startTime, state.shutDownTime);
ARM GAS  /tmp/ccsSrQjn.s 			page 26


 221:Src/core.c    ****     printf("\n");
 1108              		.loc 1 221 5 is_stmt 1 view .LVU281
 1109 00da 0A20     		movs	r0, #10
 1110 00dc FFF7FEFF 		bl	putchar
 1111              	.LVL90:
 222:Src/core.c    **** }
 1112              		.loc 1 222 1 is_stmt 0 view .LVU282
 1113 00e0 16B0     		add	sp, sp, #88
 1114              	.LCFI9:
 1115              		.cfi_remember_state
 1116              		.cfi_def_cfa_offset 16
 1117              		@ sp needed
 1118 00e2 70BD     		pop	{r4, r5, r6, pc}
 1119              	.L90:
 1120              	.LCFI10:
 1121              		.cfi_restore_state
 201:Src/core.c    ****     strcat(msg3, " for ");
 1122              		.loc 1 201 5 view .LVU283
 1123 00e4 4549     		ldr	r1, .L98+64
 1124 00e6 CFE7     		b	.L71
 1125              	.L91:
 203:Src/core.c    **** 
 1126              		.loc 1 203 81 discriminator 1 view .LVU284
 1127 00e8 354A     		ldr	r2, .L98+4
 1128 00ea D269     		ldr	r2, [r2, #28]
 1129 00ec E2E7     		b	.L73
 1130              	.L92:
 206:Src/core.c    ****         printf("The last temperature achievement is %d\n", lastAchievement);
 1131              		.loc 1 206 9 is_stmt 1 view .LVU285
 206:Src/core.c    ****         printf("The last temperature achievement is %d\n", lastAchievement);
 1132              		.loc 1 206 58 is_stmt 0 view .LVU286
 1133 00ee 344C     		ldr	r4, .L98+4
 206:Src/core.c    ****         printf("The last temperature achievement is %d\n", lastAchievement);
 1134              		.loc 1 206 9 view .LVU287
 1135 00f0 A068     		ldr	r0, [r4, #8]	@ float
 1136 00f2 FFF7FEFF 		bl	__aeabi_f2d
 1137              	.LVL91:
 1138 00f6 0246     		mov	r2, r0
 1139 00f8 0B46     		mov	r3, r1
 1140 00fa 4148     		ldr	r0, .L98+68
 1141 00fc FFF7FEFF 		bl	printf
 1142              	.LVL92:
 207:Src/core.c    ****         if(state.sw == SYS_ON)
 1143              		.loc 1 207 9 is_stmt 1 view .LVU288
 1144 0100 404B     		ldr	r3, .L98+72
 1145 0102 1968     		ldr	r1, [r3]
 1146 0104 4048     		ldr	r0, .L98+76
 1147 0106 FFF7FEFF 		bl	printf
 1148              	.LVL93:
 208:Src/core.c    ****             printf("Closed for %d mins and Opened for %d mins\n", (state.startTime - state.shutDown
 1149              		.loc 1 208 9 view .LVU289
 208:Src/core.c    ****             printf("Closed for %d mins and Opened for %d mins\n", (state.startTime - state.shutDown
 1150              		.loc 1 208 17 is_stmt 0 view .LVU290
 1151 010a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 208:Src/core.c    ****             printf("Closed for %d mins and Opened for %d mins\n", (state.startTime - state.shutDown
 1152              		.loc 1 208 11 view .LVU291
 1153 010c 012B     		cmp	r3, #1
ARM GAS  /tmp/ccsSrQjn.s 			page 27


 1154 010e 16D0     		beq	.L94
 211:Src/core.c    ****     }
 1155              		.loc 1 211 13 is_stmt 1 view .LVU292
 211:Src/core.c    ****     }
 1156              		.loc 1 211 73 is_stmt 0 view .LVU293
 1157 0110 2B4B     		ldr	r3, .L98+4
 1158 0112 1A6A     		ldr	r2, [r3, #32]
 211:Src/core.c    ****     }
 1159              		.loc 1 211 94 view .LVU294
 1160 0114 DB69     		ldr	r3, [r3, #28]
 211:Src/core.c    ****     }
 1161              		.loc 1 211 87 view .LVU295
 1162 0116 D31A     		subs	r3, r2, r3
 211:Src/core.c    ****     }
 1163              		.loc 1 211 125 view .LVU296
 1164 0118 0799     		ldr	r1, [sp, #28]
 1165 011a 891A     		subs	r1, r1, r2
 211:Src/core.c    ****     }
 1166              		.loc 1 211 13 view .LVU297
 1167 011c 3448     		ldr	r0, .L98+52
 1168 011e 80FB0124 		smull	r2, r4, r0, r1
 1169 0122 0C44     		add	r4, r4, r1
 1170 0124 CA17     		asrs	r2, r1, #31
 1171 0126 80FB0301 		smull	r0, r1, r0, r3
 1172 012a 1944     		add	r1, r1, r3
 1173 012c DB17     		asrs	r3, r3, #31
 1174 012e C2EB6412 		rsb	r2, r2, r4, asr #5
 1175 0132 C3EB6111 		rsb	r1, r3, r1, asr #5
 1176 0136 3548     		ldr	r0, .L98+80
 1177 0138 FFF7FEFF 		bl	printf
 1178              	.LVL94:
 1179 013c CDE7     		b	.L76
 1180              	.L94:
 209:Src/core.c    ****         else
 1181              		.loc 1 209 13 is_stmt 1 view .LVU298
 209:Src/core.c    ****         else
 1182              		.loc 1 209 73 is_stmt 0 view .LVU299
 1183 013e E269     		ldr	r2, [r4, #28]
 209:Src/core.c    ****         else
 1184              		.loc 1 209 91 view .LVU300
 1185 0140 236A     		ldr	r3, [r4, #32]
 209:Src/core.c    ****         else
 1186              		.loc 1 209 84 view .LVU301
 1187 0142 D31A     		subs	r3, r2, r3
 209:Src/core.c    ****         else
 1188              		.loc 1 209 125 view .LVU302
 1189 0144 0799     		ldr	r1, [sp, #28]
 1190 0146 891A     		subs	r1, r1, r2
 209:Src/core.c    ****         else
 1191              		.loc 1 209 13 view .LVU303
 1192 0148 2948     		ldr	r0, .L98+52
 1193 014a 80FB0124 		smull	r2, r4, r0, r1
 1194 014e 0C44     		add	r4, r4, r1
 1195 0150 CA17     		asrs	r2, r1, #31
 1196 0152 80FB0301 		smull	r0, r1, r0, r3
 1197 0156 1944     		add	r1, r1, r3
 1198 0158 DB17     		asrs	r3, r3, #31
ARM GAS  /tmp/ccsSrQjn.s 			page 28


 1199 015a C2EB6412 		rsb	r2, r2, r4, asr #5
 1200 015e C3EB6111 		rsb	r1, r3, r1, asr #5
 1201 0162 2B48     		ldr	r0, .L98+84
 1202 0164 FFF7FEFF 		bl	printf
 1203              	.LVL95:
 1204 0168 B7E7     		b	.L76
 1205              	.L93:
 1206              	.LBB11:
 214:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1207              		.loc 1 214 9 is_stmt 1 view .LVU304
 214:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1208              		.loc 1 214 37 is_stmt 0 view .LVU305
 1209 016a 079B     		ldr	r3, [sp, #28]
 214:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1210              		.loc 1 214 45 view .LVU306
 1211 016c 144A     		ldr	r2, .L98+4
 1212 016e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 214:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1213              		.loc 1 214 77 view .LVU307
 1214 0170 012A     		cmp	r2, #1
 1215 0172 1BD0     		beq	.L95
 214:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1216              		.loc 1 214 77 discriminator 2 view .LVU308
 1217 0174 1249     		ldr	r1, .L98+4
 1218 0176 096A     		ldr	r1, [r1, #32]
 1219              	.L78:
 214:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1220              		.loc 1 214 37 discriminator 4 view .LVU309
 1221 0178 5B1A     		subs	r3, r3, r1
 214:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1222              		.loc 1 214 13 discriminator 4 view .LVU310
 1223 017a 1D49     		ldr	r1, .L98+52
 1224 017c 81FB0301 		smull	r0, r1, r1, r3
 1225 0180 1944     		add	r1, r1, r3
 1226 0182 DB17     		asrs	r3, r3, #31
 1227 0184 C3EB6113 		rsb	r3, r3, r1, asr #5
 1228              	.LVL96:
 215:Src/core.c    ****         printf("There are %d minutes before air-con %s\n", remainingTime, state.sw == SYS_ON ? "clo
 1229              		.loc 1 215 9 is_stmt 1 discriminator 4 view .LVU311
 215:Src/core.c    ****         printf("There are %d minutes before air-con %s\n", remainingTime, state.sw == SYS_ON ? "clo
 1230              		.loc 1 215 68 is_stmt 0 discriminator 4 view .LVU312
 1231 0188 012A     		cmp	r2, #1
 1232 018a 12D0     		beq	.L96
 215:Src/core.c    ****         printf("There are %d minutes before air-con %s\n", remainingTime, state.sw == SYS_ON ? "clo
 1233              		.loc 1 215 68 discriminator 2 view .LVU313
 1234 018c 0C49     		ldr	r1, .L98+4
 1235 018e 0969     		ldr	r1, [r1, #16]
 1236              	.L80:
 215:Src/core.c    ****         printf("There are %d minutes before air-con %s\n", remainingTime, state.sw == SYS_ON ? "clo
 1237              		.loc 1 215 13 discriminator 4 view .LVU314
 1238 0190 C91A     		subs	r1, r1, r3
 1239              	.LVL97:
 216:Src/core.c    ****         printf("Open for %d mins and close for %d mins\n", state.tarTime[0], state.tarTime[1]);
 1240              		.loc 1 216 9 is_stmt 1 discriminator 4 view .LVU315
 1241 0192 012A     		cmp	r2, #1
 1242 0194 10D0     		beq	.L97
 216:Src/core.c    ****         printf("Open for %d mins and close for %d mins\n", state.tarTime[0], state.tarTime[1]);
ARM GAS  /tmp/ccsSrQjn.s 			page 29


 1243              		.loc 1 216 9 is_stmt 0 view .LVU316
 1244 0196 1F4A     		ldr	r2, .L98+88
 1245              	.L81:
 216:Src/core.c    ****         printf("Open for %d mins and close for %d mins\n", state.tarTime[0], state.tarTime[1]);
 1246              		.loc 1 216 9 discriminator 4 view .LVU317
 1247 0198 1F48     		ldr	r0, .L98+92
 1248 019a FFF7FEFF 		bl	printf
 1249              	.LVL98:
 217:Src/core.c    ****     }
 1250              		.loc 1 217 9 is_stmt 1 discriminator 4 view .LVU318
 1251 019e 084B     		ldr	r3, .L98+4
 1252 01a0 1A69     		ldr	r2, [r3, #16]
 1253 01a2 D968     		ldr	r1, [r3, #12]
 1254 01a4 1D48     		ldr	r0, .L98+96
 1255 01a6 FFF7FEFF 		bl	printf
 1256              	.LVL99:
 1257 01aa 96E7     		b	.L76
 1258              	.L95:
 214:Src/core.c    ****         int remainingTime = (state.sw == SYS_ON ? state.tarTime[0] : state.tarTime[1]) - passTime;
 1259              		.loc 1 214 77 is_stmt 0 discriminator 1 view .LVU319
 1260 01ac 0449     		ldr	r1, .L98+4
 1261 01ae C969     		ldr	r1, [r1, #28]
 1262 01b0 E2E7     		b	.L78
 1263              	.LVL100:
 1264              	.L96:
 215:Src/core.c    ****         printf("There are %d minutes before air-con %s\n", remainingTime, state.sw == SYS_ON ? "clo
 1265              		.loc 1 215 68 discriminator 1 view .LVU320
 1266 01b2 0349     		ldr	r1, .L98+4
 1267 01b4 C968     		ldr	r1, [r1, #12]
 1268 01b6 EBE7     		b	.L80
 1269              	.LVL101:
 1270              	.L97:
 216:Src/core.c    ****         printf("Open for %d mins and close for %d mins\n", state.tarTime[0], state.tarTime[1]);
 1271              		.loc 1 216 9 view .LVU321
 1272 01b8 194A     		ldr	r2, .L98+100
 1273 01ba EDE7     		b	.L81
 1274              	.L99:
 1275              		.align	2
 1276              	.L98:
 1277 01bc 50000000 		.word	.LC11
 1278 01c0 00000000 		.word	state
 1279 01c4 00000000 		.word	.LC2
 1280 01c8 64000000 		.word	.LC12
 1281 01cc 0C000000 		.word	.LC4
 1282 01d0 08000000 		.word	.LC3
 1283 01d4 28000000 		.word	.LC6
 1284 01d8 18000000 		.word	.LC5
 1285 01dc 7C000000 		.word	.LC13
 1286 01e0 00000000 		.word	runningTime
 1287 01e4 9C000000 		.word	.LC14
 1288 01e8 34000000 		.word	.LC7
 1289 01ec B0000000 		.word	.LC15
 1290 01f0 89888888 		.word	-2004318071
 1291 01f4 B8000000 		.word	.LC16
 1292 01f8 C4000000 		.word	.LC17
 1293 01fc 3C000000 		.word	.LC8
 1294 0200 CC000000 		.word	.LC18
ARM GAS  /tmp/ccsSrQjn.s 			page 30


 1295 0204 00000000 		.word	.LANCHOR5
 1296 0208 F0000000 		.word	.LC19
 1297 020c 44010000 		.word	.LC21
 1298 0210 18010000 		.word	.LC20
 1299 0214 40000000 		.word	.LC9
 1300 0218 70010000 		.word	.LC22
 1301 021c 98010000 		.word	.LC23
 1302 0220 48000000 		.word	.LC10
 1303              	.LBE11:
 1304              		.cfi_endproc
 1305              	.LFE73:
 1307              		.global	__aeabi_f2iz
 1308              		.section	.text.move,"ax",%progbits
 1309              		.align	1
 1310              		.global	move
 1311              		.syntax unified
 1312              		.thumb
 1313              		.thumb_func
 1314              		.fpu softvfp
 1316              	move:
 1317              	.LVL102:
 1318              	.LFB74:
 223:Src/core.c    **** 
 224:Src/core.c    **** int initTemp = 0;
 225:Src/core.c    **** void move(enum SystemSwitch pos) {
 1319              		.loc 1 225 34 is_stmt 1 view -0
 1320              		.cfi_startproc
 1321              		@ args = 0, pretend = 0, frame = 0
 1322              		@ frame_needed = 0, uses_anonymous_args = 0
 1323              		.loc 1 225 34 is_stmt 0 view .LVU323
 1324 0000 08B5     		push	{r3, lr}
 1325              	.LCFI11:
 1326              		.cfi_def_cfa_offset 8
 1327              		.cfi_offset 3, -8
 1328              		.cfi_offset 14, -4
 226:Src/core.c    ****     if(pos == SYS_ON) {
 1329              		.loc 1 226 5 is_stmt 1 view .LVU324
 1330              		.loc 1 226 7 is_stmt 0 view .LVU325
 1331 0002 0128     		cmp	r0, #1
 1332 0004 1ED0     		beq	.L108
 227:Src/core.c    ****         HAL_Delay(100);
 228:Src/core.c    ****         __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, servo2_up);
 229:Src/core.c    ****         HAL_Delay(2000);
 230:Src/core.c    ****         __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_1, servo1_up);
 231:Src/core.c    ****         HAL_Delay(100);
 232:Src/core.c    **** 
 233:Src/core.c    ****         while(HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET) {
 234:Src/core.c    ****             HAL_Delay(100);
 235:Src/core.c    ****         }
 236:Src/core.c    **** 
 237:Src/core.c    ****         state.startTime = runningTime;
 238:Src/core.c    ****         initTemp = state.temp;
 239:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_RESET);
 240:Src/core.c    ****     }
 241:Src/core.c    **** 
 242:Src/core.c    ****     else {
 243:Src/core.c    ****         HAL_Delay(100);
ARM GAS  /tmp/ccsSrQjn.s 			page 31


 1333              		.loc 1 243 9 is_stmt 1 view .LVU326
 1334 0006 6420     		movs	r0, #100
 1335              	.LVL103:
 1336              		.loc 1 243 9 is_stmt 0 view .LVU327
 1337 0008 FFF7FEFF 		bl	HAL_Delay
 1338              	.LVL104:
 244:Src/core.c    ****         __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_1, servo1_down);
 1339              		.loc 1 244 9 is_stmt 1 view .LVU328
 1340 000c 2A4B     		ldr	r3, .L111
 1341 000e 1B68     		ldr	r3, [r3]
 1342 0010 2A4A     		ldr	r2, .L111+4
 1343 0012 1268     		ldr	r2, [r2]
 1344 0014 5A63     		str	r2, [r3, #52]
 245:Src/core.c    ****         HAL_Delay(2000);
 1345              		.loc 1 245 9 view .LVU329
 1346 0016 4FF4FA60 		mov	r0, #2000
 1347 001a FFF7FEFF 		bl	HAL_Delay
 1348              	.LVL105:
 246:Src/core.c    ****         __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, servo2_down);
 1349              		.loc 1 246 9 view .LVU330
 1350 001e 284B     		ldr	r3, .L111+8
 1351 0020 1B68     		ldr	r3, [r3]
 1352 0022 284A     		ldr	r2, .L111+12
 1353 0024 1268     		ldr	r2, [r2]
 1354 0026 5A63     		str	r2, [r3, #52]
 247:Src/core.c    ****         HAL_Delay(100);
 1355              		.loc 1 247 9 view .LVU331
 1356 0028 6420     		movs	r0, #100
 1357 002a FFF7FEFF 		bl	HAL_Delay
 1358              	.LVL106:
 248:Src/core.c    **** 
 249:Src/core.c    ****         while(HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_SET) {
 1359              		.loc 1 249 9 view .LVU332
 1360              	.L105:
 1361              		.loc 1 249 14 view .LVU333
 1362              		.loc 1 249 15 is_stmt 0 view .LVU334
 1363 002e 4FF40061 		mov	r1, #2048
 1364 0032 2548     		ldr	r0, .L111+16
 1365 0034 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1366              	.LVL107:
 1367              		.loc 1 249 14 view .LVU335
 1368 0038 0128     		cmp	r0, #1
 1369 003a 31D1     		bne	.L109
 250:Src/core.c    ****             HAL_Delay(100);
 1370              		.loc 1 250 13 is_stmt 1 view .LVU336
 1371 003c 6420     		movs	r0, #100
 1372 003e FFF7FEFF 		bl	HAL_Delay
 1373              	.LVL108:
 1374 0042 F4E7     		b	.L105
 1375              	.LVL109:
 1376              	.L108:
 227:Src/core.c    ****         __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, servo2_up);
 1377              		.loc 1 227 9 view .LVU337
 1378 0044 6420     		movs	r0, #100
 1379              	.LVL110:
 227:Src/core.c    ****         __HAL_TIM_SetCompare(&htim2, TIM_CHANNEL_1, servo2_up);
 1380              		.loc 1 227 9 is_stmt 0 view .LVU338
ARM GAS  /tmp/ccsSrQjn.s 			page 32


 1381 0046 FFF7FEFF 		bl	HAL_Delay
 1382              	.LVL111:
 228:Src/core.c    ****         HAL_Delay(2000);
 1383              		.loc 1 228 9 is_stmt 1 view .LVU339
 1384 004a 1D4B     		ldr	r3, .L111+8
 1385 004c 1B68     		ldr	r3, [r3]
 1386 004e 1F4A     		ldr	r2, .L111+20
 1387 0050 1268     		ldr	r2, [r2]
 1388 0052 5A63     		str	r2, [r3, #52]
 229:Src/core.c    ****         __HAL_TIM_SetCompare(&htim1, TIM_CHANNEL_1, servo1_up);
 1389              		.loc 1 229 9 view .LVU340
 1390 0054 4FF4FA60 		mov	r0, #2000
 1391 0058 FFF7FEFF 		bl	HAL_Delay
 1392              	.LVL112:
 230:Src/core.c    ****         HAL_Delay(100);
 1393              		.loc 1 230 9 view .LVU341
 1394 005c 164B     		ldr	r3, .L111
 1395 005e 1B68     		ldr	r3, [r3]
 1396 0060 1B4A     		ldr	r2, .L111+24
 1397 0062 1268     		ldr	r2, [r2]
 1398 0064 5A63     		str	r2, [r3, #52]
 231:Src/core.c    **** 
 1399              		.loc 1 231 9 view .LVU342
 1400 0066 6420     		movs	r0, #100
 1401 0068 FFF7FEFF 		bl	HAL_Delay
 1402              	.LVL113:
 233:Src/core.c    ****             HAL_Delay(100);
 1403              		.loc 1 233 9 view .LVU343
 1404              	.L102:
 233:Src/core.c    ****             HAL_Delay(100);
 1405              		.loc 1 233 14 view .LVU344
 233:Src/core.c    ****             HAL_Delay(100);
 1406              		.loc 1 233 15 is_stmt 0 view .LVU345
 1407 006c 4FF40061 		mov	r1, #2048
 1408 0070 1548     		ldr	r0, .L111+16
 1409 0072 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1410              	.LVL114:
 233:Src/core.c    ****             HAL_Delay(100);
 1411              		.loc 1 233 14 view .LVU346
 1412 0076 18B9     		cbnz	r0, .L110
 234:Src/core.c    ****         }
 1413              		.loc 1 234 13 is_stmt 1 view .LVU347
 1414 0078 6420     		movs	r0, #100
 1415 007a FFF7FEFF 		bl	HAL_Delay
 1416              	.LVL115:
 1417 007e F5E7     		b	.L102
 1418              	.L110:
 237:Src/core.c    ****         initTemp = state.temp;
 1419              		.loc 1 237 9 view .LVU348
 237:Src/core.c    ****         initTemp = state.temp;
 1420              		.loc 1 237 25 is_stmt 0 view .LVU349
 1421 0080 144B     		ldr	r3, .L111+28
 1422 0082 154A     		ldr	r2, .L111+32
 1423 0084 1268     		ldr	r2, [r2]
 1424 0086 DA61     		str	r2, [r3, #28]
 238:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_RESET);
 1425              		.loc 1 238 9 is_stmt 1 view .LVU350
ARM GAS  /tmp/ccsSrQjn.s 			page 33


 238:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_RESET);
 1426              		.loc 1 238 18 is_stmt 0 view .LVU351
 1427 0088 9869     		ldr	r0, [r3, #24]	@ float
 1428 008a FFF7FEFF 		bl	__aeabi_f2iz
 1429              	.LVL116:
 1430 008e 134B     		ldr	r3, .L111+36
 1431 0090 1860     		str	r0, [r3]
 239:Src/core.c    ****     }
 1432              		.loc 1 239 9 is_stmt 1 view .LVU352
 1433 0092 0022     		movs	r2, #0
 1434 0094 4FF40051 		mov	r1, #8192
 1435 0098 1148     		ldr	r0, .L111+40
 1436 009a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1437              	.LVL117:
 1438 009e 09E0     		b	.L100
 1439              	.L109:
 251:Src/core.c    ****         }
 252:Src/core.c    **** 
 253:Src/core.c    ****         state.shutDownTime = runningTime;
 1440              		.loc 1 253 9 view .LVU353
 1441              		.loc 1 253 28 is_stmt 0 view .LVU354
 1442 00a0 0D4B     		ldr	r3, .L111+32
 1443 00a2 1A68     		ldr	r2, [r3]
 1444 00a4 0B4B     		ldr	r3, .L111+28
 1445 00a6 1A62     		str	r2, [r3, #32]
 254:Src/core.c    ****         HAL_GPIO_WritePin(LED_ON_BOARD_GPIO_Port, LED_ON_BOARD_Pin, GPIO_PIN_SET);
 1446              		.loc 1 254 9 is_stmt 1 view .LVU355
 1447 00a8 0122     		movs	r2, #1
 1448 00aa 4FF40051 		mov	r1, #8192
 1449 00ae 0C48     		ldr	r0, .L111+40
 1450 00b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1451              	.LVL118:
 1452              	.L100:
 255:Src/core.c    ****     }
 256:Src/core.c    **** }
 1453              		.loc 1 256 1 is_stmt 0 view .LVU356
 1454 00b4 08BD     		pop	{r3, pc}
 1455              	.L112:
 1456 00b6 00BF     		.align	2
 1457              	.L111:
 1458 00b8 00000000 		.word	htim1
 1459 00bc 00000000 		.word	.LANCHOR1
 1460 00c0 00000000 		.word	htim2
 1461 00c4 00000000 		.word	.LANCHOR0
 1462 00c8 000C0140 		.word	1073810432
 1463 00cc 00000000 		.word	.LANCHOR2
 1464 00d0 00000000 		.word	.LANCHOR3
 1465 00d4 00000000 		.word	state
 1466 00d8 00000000 		.word	runningTime
 1467 00dc 00000000 		.word	.LANCHOR6
 1468 00e0 00100140 		.word	1073811456
 1469              		.cfi_endproc
 1470              	.LFE74:
 1472              		.section	.rodata.update_info.str1.4,"aMS",%progbits,1
 1473              		.align	2
 1474              	.LC24:
 1475 0000 54454D50 		.ascii	"TEMP mode\012\000"
ARM GAS  /tmp/ccsSrQjn.s 			page 34


 1475      206D6F64 
 1475      650A00
 1476 000b 00       		.align	2
 1477              	.LC25:
 1478 000c 4F4E4F46 		.ascii	"ONOFF mode\012\000"
 1478      46206D6F 
 1478      64650A00 
 1479              		.align	2
 1480              	.LC26:
 1481 0018 54494D45 		.ascii	"TIME mode\012\000"
 1481      206D6F64 
 1481      650A00
 1482              		.global	__aeabi_ui2f
 1483              		.global	__aeabi_fmul
 1484 0023 00       		.align	2
 1485              	.LC27:
 1486 0024 4368616E 		.ascii	"Change the system to \000"
 1486      67652074 
 1486      68652073 
 1486      79737465 
 1486      6D20746F 
 1487 003a 0000     		.align	2
 1488              	.LC28:
 1489 003c 4368616E 		.ascii	"Change mode to \000"
 1489      6765206D 
 1489      6F646520 
 1489      746F2000 
 1490              		.section	.text.update_info,"ax",%progbits
 1491              		.align	1
 1492              		.global	update_info
 1493              		.syntax unified
 1494              		.thumb
 1495              		.thumb_func
 1496              		.fpu softvfp
 1498              	update_info:
 1499              	.LFB72:
 154:Src/core.c    ****     strcpy(msg, "");
 1500              		.loc 1 154 20 is_stmt 1 view -0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 0
 1503              		@ frame_needed = 0, uses_anonymous_args = 0
 1504 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1505              	.LCFI12:
 1506              		.cfi_def_cfa_offset 24
 1507              		.cfi_offset 3, -24
 1508              		.cfi_offset 4, -20
 1509              		.cfi_offset 5, -16
 1510              		.cfi_offset 6, -12
 1511              		.cfi_offset 7, -8
 1512              		.cfi_offset 14, -4
 155:Src/core.c    ****     msg[0] = '0';
 1513              		.loc 1 155 5 view .LVU358
 156:Src/core.c    ****     enum SystemSwitch last = state.sw;
 1514              		.loc 1 156 5 view .LVU359
 156:Src/core.c    ****     enum SystemSwitch last = state.sw;
 1515              		.loc 1 156 12 is_stmt 0 view .LVU360
 1516 0002 474B     		ldr	r3, .L133
ARM GAS  /tmp/ccsSrQjn.s 			page 35


 1517 0004 3022     		movs	r2, #48
 1518 0006 1A60     		str	r2, [r3]
 157:Src/core.c    ****     enum Mode lastMode = state.mode;
 1519              		.loc 1 157 5 is_stmt 1 view .LVU361
 157:Src/core.c    ****     enum Mode lastMode = state.mode;
 1520              		.loc 1 157 23 is_stmt 0 view .LVU362
 1521 0008 464C     		ldr	r4, .L133+4
 1522 000a 2578     		ldrb	r5, [r4]	@ zero_extendqisi2
 1523              	.LVL119:
 158:Src/core.c    ****     state.re_sw = HAL_GPIO_ReadPin(REMOTE_SWITCH_GPIO_Port, REMOTE_SWITCH_Pin) == GPIO_PIN_RESET ? 
 1524              		.loc 1 158 5 is_stmt 1 view .LVU363
 158:Src/core.c    ****     state.re_sw = HAL_GPIO_ReadPin(REMOTE_SWITCH_GPIO_Port, REMOTE_SWITCH_Pin) == GPIO_PIN_RESET ? 
 1525              		.loc 1 158 15 is_stmt 0 view .LVU364
 1526 000c 2679     		ldrb	r6, [r4, #4]	@ zero_extendqisi2
 1527              	.LVL120:
 159:Src/core.c    ****     if(state.re_sw != REMOTE_ON) {
 1528              		.loc 1 159 5 is_stmt 1 view .LVU365
 159:Src/core.c    ****     if(state.re_sw != REMOTE_ON) {
 1529              		.loc 1 159 19 is_stmt 0 view .LVU366
 1530 000e 0221     		movs	r1, #2
 1531 0010 4548     		ldr	r0, .L133+8
 1532 0012 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1533              	.LVL121:
 159:Src/core.c    ****     if(state.re_sw != REMOTE_ON) {
 1534              		.loc 1 159 110 view .LVU367
 1535 0016 0038     		subs	r0, r0, #0
 1536 0018 18BF     		it	ne
 1537 001a 0120     		movne	r0, #1
 159:Src/core.c    ****     if(state.re_sw != REMOTE_ON) {
 1538              		.loc 1 159 17 view .LVU368
 1539 001c E070     		strb	r0, [r4, #3]
 160:Src/core.c    ****         state.sw = HAL_GPIO_ReadPin(MAIN_SWITCH_GPIO_Port, MAIN_SWITCH_Pin) == GPIO_PIN_RESET ? SYS
 1540              		.loc 1 160 5 is_stmt 1 view .LVU369
 160:Src/core.c    ****         state.sw = HAL_GPIO_ReadPin(MAIN_SWITCH_GPIO_Port, MAIN_SWITCH_Pin) == GPIO_PIN_RESET ? SYS
 1541              		.loc 1 160 7 is_stmt 0 view .LVU370
 1542 001e 0028     		cmp	r0, #0
 1543 0020 35D1     		bne	.L126
 1544              	.L114:
 164:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 1545              		.loc 1 164 5 is_stmt 1 view .LVU371
 164:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 1546              		.loc 1 164 13 is_stmt 0 view .LVU372
 1547 0022 404B     		ldr	r3, .L133+4
 1548 0024 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 164:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 1549              		.loc 1 164 7 view .LVU373
 1550 0026 1BB9     		cbnz	r3, .L115
 164:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 1551              		.loc 1 164 49 discriminator 1 view .LVU374
 1552 0028 404B     		ldr	r3, .L133+12
 1553 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 164:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 1554              		.loc 1 164 33 discriminator 1 view .LVU375
 1555 002c 002B     		cmp	r3, #0
 1556 002e 39D1     		bne	.L127
 1557              	.L115:
 165:Src/core.c    ****     state.off_sw = HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET ? OFF_O
ARM GAS  /tmp/ccsSrQjn.s 			page 36


 1558              		.loc 1 165 5 is_stmt 1 view .LVU376
 165:Src/core.c    ****     state.off_sw = HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET ? OFF_O
 1559              		.loc 1 165 19 is_stmt 0 view .LVU377
 1560 0030 3D4F     		ldr	r7, .L133+8
 1561 0032 4FF48061 		mov	r1, #1024
 1562 0036 3846     		mov	r0, r7
 1563 0038 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1564              	.LVL122:
 165:Src/core.c    ****     state.off_sw = HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET ? OFF_O
 1565              		.loc 1 165 99 view .LVU378
 1566 003c 0038     		subs	r0, r0, #0
 1567 003e 18BF     		it	ne
 1568 0040 0120     		movne	r0, #1
 165:Src/core.c    ****     state.off_sw = HAL_GPIO_ReadPin(OFF_SWITCH_GPIO_Port, OFF_SWITCH_Pin) == GPIO_PIN_RESET ? OFF_O
 1569              		.loc 1 165 17 view .LVU379
 1570 0042 384C     		ldr	r4, .L133+4
 1571 0044 6070     		strb	r0, [r4, #1]
 166:Src/core.c    ****     state.temp = HAL_ADC_GetValue(&hadc1) * 0.0008056f * 100;
 1572              		.loc 1 166 5 is_stmt 1 view .LVU380
 166:Src/core.c    ****     state.temp = HAL_ADC_GetValue(&hadc1) * 0.0008056f * 100;
 1573              		.loc 1 166 20 is_stmt 0 view .LVU381
 1574 0046 4FF40061 		mov	r1, #2048
 1575 004a 3846     		mov	r0, r7
 1576 004c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1577              	.LVL123:
 166:Src/core.c    ****     state.temp = HAL_ADC_GetValue(&hadc1) * 0.0008056f * 100;
 1578              		.loc 1 166 103 view .LVU382
 1579 0050 0038     		subs	r0, r0, #0
 1580 0052 18BF     		it	ne
 1581 0054 0120     		movne	r0, #1
 166:Src/core.c    ****     state.temp = HAL_ADC_GetValue(&hadc1) * 0.0008056f * 100;
 1582              		.loc 1 166 18 view .LVU383
 1583 0056 A070     		strb	r0, [r4, #2]
 167:Src/core.c    ****     if(last != state.sw) {
 1584              		.loc 1 167 5 is_stmt 1 view .LVU384
 167:Src/core.c    ****     if(last != state.sw) {
 1585              		.loc 1 167 18 is_stmt 0 view .LVU385
 1586 0058 3548     		ldr	r0, .L133+16
 1587 005a FFF7FEFF 		bl	HAL_ADC_GetValue
 1588              	.LVL124:
 167:Src/core.c    ****     if(last != state.sw) {
 1589              		.loc 1 167 43 view .LVU386
 1590 005e FFF7FEFF 		bl	__aeabi_ui2f
 1591              	.LVL125:
 1592 0062 3449     		ldr	r1, .L133+20
 1593 0064 FFF7FEFF 		bl	__aeabi_fmul
 1594              	.LVL126:
 167:Src/core.c    ****     if(last != state.sw) {
 1595              		.loc 1 167 56 view .LVU387
 1596 0068 3349     		ldr	r1, .L133+24
 1597 006a FFF7FEFF 		bl	__aeabi_fmul
 1598              	.LVL127:
 167:Src/core.c    ****     if(last != state.sw) {
 1599              		.loc 1 167 16 view .LVU388
 1600 006e A061     		str	r0, [r4, #24]	@ float
 168:Src/core.c    ****         move(state.sw);
 1601              		.loc 1 168 5 is_stmt 1 view .LVU389
ARM GAS  /tmp/ccsSrQjn.s 			page 37


 168:Src/core.c    ****         move(state.sw);
 1602              		.loc 1 168 21 is_stmt 0 view .LVU390
 1603 0070 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 168:Src/core.c    ****         move(state.sw);
 1604              		.loc 1 168 7 view .LVU391
 1605 0072 A842     		cmp	r0, r5
 1606 0074 1AD1     		bne	.L128
 1607              	.LVL128:
 1608              	.L116:
 173:Src/core.c    ****         move(state.sw);
 1609              		.loc 1 173 5 is_stmt 1 view .LVU392
 173:Src/core.c    ****         move(state.sw);
 1610              		.loc 1 173 25 is_stmt 0 view .LVU393
 1611 0076 2B4B     		ldr	r3, .L133+4
 1612 0078 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 173:Src/core.c    ****         move(state.sw);
 1613              		.loc 1 173 7 view .LVU394
 1614 007a B342     		cmp	r3, r6
 1615 007c 2CD1     		bne	.L129
 1616              	.L118:
 180:Src/core.c    **** }
 1617              		.loc 1 180 5 is_stmt 1 view .LVU395
 180:Src/core.c    **** }
 1618              		.loc 1 180 11 is_stmt 0 view .LVU396
 1619 007e 284B     		ldr	r3, .L133
 1620 0080 1B68     		ldr	r3, [r3]
 180:Src/core.c    **** }
 1621              		.loc 1 180 7 view .LVU397
 1622 0082 302B     		cmp	r3, #48
 1623 0084 02D0     		beq	.L113
 180:Src/core.c    **** }
 1624              		.loc 1 180 23 is_stmt 1 discriminator 1 view .LVU398
 1625 0086 2648     		ldr	r0, .L133
 1626 0088 FFF7FEFF 		bl	printf
 1627              	.LVL129:
 1628              	.L113:
 181:Src/core.c    **** 
 1629              		.loc 1 181 1 is_stmt 0 view .LVU399
 1630 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1631              	.LVL130:
 1632              	.L126:
 161:Src/core.c    ****         state.mode = ONOFF_MODE;
 1633              		.loc 1 161 9 is_stmt 1 view .LVU400
 161:Src/core.c    ****         state.mode = ONOFF_MODE;
 1634              		.loc 1 161 20 is_stmt 0 view .LVU401
 1635 008e 0121     		movs	r1, #1
 1636 0090 2548     		ldr	r0, .L133+8
 1637 0092 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1638              	.LVL131:
 161:Src/core.c    ****         state.mode = ONOFF_MODE;
 1639              		.loc 1 161 104 view .LVU402
 1640 0096 B0FA80F0 		clz	r0, r0
 1641 009a 4009     		lsrs	r0, r0, #5
 161:Src/core.c    ****         state.mode = ONOFF_MODE;
 1642              		.loc 1 161 18 view .LVU403
 1643 009c 2070     		strb	r0, [r4]
 162:Src/core.c    ****     }
ARM GAS  /tmp/ccsSrQjn.s 			page 38


 1644              		.loc 1 162 9 is_stmt 1 view .LVU404
 162:Src/core.c    ****     }
 1645              		.loc 1 162 20 is_stmt 0 view .LVU405
 1646 009e 0022     		movs	r2, #0
 1647 00a0 2271     		strb	r2, [r4, #4]
 1648 00a2 BEE7     		b	.L114
 1649              	.L127:
 164:Src/core.c    ****     state.on_sw = HAL_GPIO_ReadPin(ON_SWITCH_GPIO_Port, ON_SWITCH_Pin) == GPIO_PIN_RESET ? ON_OFF :
 1650              		.loc 1 164 55 is_stmt 1 discriminator 2 view .LVU406
 1651 00a4 1E48     		ldr	r0, .L133
 1652 00a6 FFF7FEFF 		bl	bluetooth_decode
 1653              	.LVL132:
 1654 00aa C1E7     		b	.L115
 1655              	.L128:
 1656              	.LBB12:
 169:Src/core.c    ****         strcpy(msg, "Change the system to ");
 1657              		.loc 1 169 9 view .LVU407
 1658 00ac FFF7FEFF 		bl	move
 1659              	.LVL133:
 170:Src/core.c    ****         strcat(msg, state.sw == SYS_ON ? "ON\n" : "OFF\n");
 1660              		.loc 1 170 9 view .LVU408
 1661 00b0 1B4C     		ldr	r4, .L133
 1662 00b2 224D     		ldr	r5, .L133+28
 1663              	.LVL134:
 170:Src/core.c    ****         strcat(msg, state.sw == SYS_ON ? "ON\n" : "OFF\n");
 1664              		.loc 1 170 9 is_stmt 0 view .LVU409
 1665 00b4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1666 00b6 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1667 00b8 95E80300 		ldm	r5, {r0, r1}
 1668 00bc 44F8040B 		str	r0, [r4], #4
 1669 00c0 2180     		strh	r1, [r4]	@ movhi
 171:Src/core.c    ****     }
 1670              		.loc 1 171 9 is_stmt 1 view .LVU410
 171:Src/core.c    ****     }
 1671              		.loc 1 171 26 is_stmt 0 view .LVU411
 1672 00c2 184B     		ldr	r3, .L133+4
 1673 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 171:Src/core.c    ****     }
 1674              		.loc 1 171 9 view .LVU412
 1675 00c6 012B     		cmp	r3, #1
 1676 00c8 04D0     		beq	.L130
 1677 00ca 1D49     		ldr	r1, .L133+32
 1678              	.L117:
 171:Src/core.c    ****     }
 1679              		.loc 1 171 9 discriminator 4 view .LVU413
 1680 00cc 1448     		ldr	r0, .L133
 1681 00ce FFF7FEFF 		bl	strcat
 1682              	.LVL135:
 1683 00d2 D0E7     		b	.L116
 1684              	.L130:
 171:Src/core.c    ****     }
 1685              		.loc 1 171 9 view .LVU414
 1686 00d4 1B49     		ldr	r1, .L133+36
 1687 00d6 F9E7     		b	.L117
 1688              	.L129:
 1689              	.LBE12:
 1690              	.LBB13:
ARM GAS  /tmp/ccsSrQjn.s 			page 39


 174:Src/core.c    ****         strcpy(msg, "Change mode to ");
 1691              		.loc 1 174 9 is_stmt 1 view .LVU415
 174:Src/core.c    ****         strcpy(msg, "Change mode to ");
 1692              		.loc 1 174 19 is_stmt 0 view .LVU416
 1693 00d8 124D     		ldr	r5, .L133+4
 174:Src/core.c    ****         strcpy(msg, "Change mode to ");
 1694              		.loc 1 174 9 view .LVU417
 1695 00da 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1696 00dc FFF7FEFF 		bl	move
 1697              	.LVL136:
 175:Src/core.c    ****         strcat(msg, state.mode == ONOFF_MODE ? "ONOFF mode\n" : state.mode == TIME_MODE ? "TIME mod
 1698              		.loc 1 175 9 is_stmt 1 view .LVU418
 1699 00e0 0F4C     		ldr	r4, .L133
 1700 00e2 194B     		ldr	r3, .L133+40
 1701 00e4 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1702 00e6 84E80F00 		stm	r4, {r0, r1, r2, r3}
 176:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 1703              		.loc 1 176 9 view .LVU419
 176:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 1704              		.loc 1 176 26 is_stmt 0 view .LVU420
 1705 00ea 2C79     		ldrb	r4, [r5, #4]	@ zero_extendqisi2
 176:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 1706              		.loc 1 176 9 view .LVU421
 1707 00ec 2CB1     		cbz	r4, .L123
 176:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 1708              		.loc 1 176 9 discriminator 1 view .LVU422
 1709 00ee 012C     		cmp	r4, #1
 1710 00f0 01D0     		beq	.L131
 176:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 1711              		.loc 1 176 9 view .LVU423
 1712 00f2 1649     		ldr	r1, .L133+44
 1713 00f4 02E0     		b	.L119
 1714              	.L131:
 1715 00f6 1649     		ldr	r1, .L133+48
 1716 00f8 00E0     		b	.L119
 1717              	.L123:
 1718 00fa 1649     		ldr	r1, .L133+52
 1719              	.L119:
 176:Src/core.c    ****         if(state.mode == TIME_MODE) {state.startTime = runningTime; state.shutDownTime = runningTim
 1720              		.loc 1 176 9 discriminator 8 view .LVU424
 1721 00fc 0848     		ldr	r0, .L133
 1722 00fe FFF7FEFF 		bl	strcat
 1723              	.LVL137:
 177:Src/core.c    ****         changeLight(state.mode, state.lightOff);
 1724              		.loc 1 177 9 is_stmt 1 discriminator 8 view .LVU425
 177:Src/core.c    ****         changeLight(state.mode, state.lightOff);
 1725              		.loc 1 177 11 is_stmt 0 discriminator 8 view .LVU426
 1726 0102 012C     		cmp	r4, #1
 1727 0104 05D0     		beq	.L132
 1728              	.L120:
 178:Src/core.c    ****     }
 1729              		.loc 1 178 9 is_stmt 1 view .LVU427
 1730 0106 074B     		ldr	r3, .L133+4
 1731 0108 5969     		ldr	r1, [r3, #20]
 1732 010a 2046     		mov	r0, r4
 1733 010c FFF7FEFF 		bl	changeLight
 1734              	.LVL138:
ARM GAS  /tmp/ccsSrQjn.s 			page 40


 1735 0110 B5E7     		b	.L118
 1736              	.L132:
 177:Src/core.c    ****         changeLight(state.mode, state.lightOff);
 1737              		.loc 1 177 38 discriminator 1 view .LVU428
 177:Src/core.c    ****         changeLight(state.mode, state.lightOff);
 1738              		.loc 1 177 54 is_stmt 0 discriminator 1 view .LVU429
 1739 0112 114B     		ldr	r3, .L133+56
 1740 0114 1A68     		ldr	r2, [r3]
 1741 0116 034B     		ldr	r3, .L133+4
 1742 0118 DA61     		str	r2, [r3, #28]
 177:Src/core.c    ****         changeLight(state.mode, state.lightOff);
 1743              		.loc 1 177 69 is_stmt 1 discriminator 1 view .LVU430
 177:Src/core.c    ****         changeLight(state.mode, state.lightOff);
 1744              		.loc 1 177 88 is_stmt 0 discriminator 1 view .LVU431
 1745 011a 1A62     		str	r2, [r3, #32]
 1746 011c F3E7     		b	.L120
 1747              	.L134:
 1748 011e 00BF     		.align	2
 1749              	.L133:
 1750 0120 00000000 		.word	msg
 1751 0124 00000000 		.word	state
 1752 0128 000C0140 		.word	1073810432
 1753 012c 00000000 		.word	.LANCHOR4
 1754 0130 00000000 		.word	hadc1
 1755 0134 E72E533A 		.word	978530023
 1756 0138 0000C842 		.word	1120403456
 1757 013c 24000000 		.word	.LC27
 1758 0140 00000000 		.word	.LC2
 1759 0144 08000000 		.word	.LC3
 1760 0148 3C000000 		.word	.LC28
 1761 014c 00000000 		.word	.LC24
 1762 0150 18000000 		.word	.LC26
 1763 0154 0C000000 		.word	.LC25
 1764 0158 00000000 		.word	runningTime
 1765              	.LBE13:
 1766              		.cfi_endproc
 1767              	.LFE72:
 1769              		.global	__aeabi_dsub
 1770              		.global	__aeabi_dcmplt
 1771              		.global	__aeabi_dadd
 1772              		.global	__aeabi_dcmpgt
 1773              		.section	.text.tempCheck,"ax",%progbits
 1774              		.align	1
 1775              		.global	tempCheck
 1776              		.syntax unified
 1777              		.thumb
 1778              		.thumb_func
 1779              		.fpu softvfp
 1781              	tempCheck:
 1782              	.LFB75:
 257:Src/core.c    **** 
 258:Src/core.c    **** int checkounter = 0;
 259:Src/core.c    **** void tempCheck() {
 1783              		.loc 1 259 18 is_stmt 1 view -0
 1784              		.cfi_startproc
 1785              		@ args = 0, pretend = 0, frame = 0
 1786              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccsSrQjn.s 			page 41


 1787 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1788              	.LCFI13:
 1789              		.cfi_def_cfa_offset 24
 1790              		.cfi_offset 3, -24
 1791              		.cfi_offset 4, -20
 1792              		.cfi_offset 5, -16
 1793              		.cfi_offset 6, -12
 1794              		.cfi_offset 7, -8
 1795              		.cfi_offset 14, -4
 260:Src/core.c    ****     if(state.sw == SYS_ON)
 1796              		.loc 1 260 5 view .LVU433
 1797              		.loc 1 260 13 is_stmt 0 view .LVU434
 1798 0002 2B4B     		ldr	r3, .L150
 1799 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1800              		.loc 1 260 7 view .LVU435
 1801 0006 012C     		cmp	r4, #1
 1802 0008 31D0     		beq	.L148
 1803              	.L136:
 261:Src/core.c    ****         if(state.temp < state.tarTemp - 0.5)
 262:Src/core.c    ****             state.tempAchieveCounter++;
 263:Src/core.c    ****     if(state.sw == SYS_OFF)
 1804              		.loc 1 263 5 is_stmt 1 view .LVU436
 1805              		.loc 1 263 7 is_stmt 0 view .LVU437
 1806 000a B4B9     		cbnz	r4, .L138
 264:Src/core.c    ****         if(state.temp > state.tarTemp + 0.5)
 1807              		.loc 1 264 9 is_stmt 1 view .LVU438
 1808              		.loc 1 264 17 is_stmt 0 view .LVU439
 1809 000c 284D     		ldr	r5, .L150
 1810 000e A869     		ldr	r0, [r5, #24]	@ float
 1811 0010 FFF7FEFF 		bl	__aeabi_f2d
 1812              	.LVL139:
 1813 0014 0646     		mov	r6, r0
 1814 0016 0F46     		mov	r7, r1
 1815              		.loc 1 264 30 view .LVU440
 1816 0018 A868     		ldr	r0, [r5, #8]	@ float
 1817 001a FFF7FEFF 		bl	__aeabi_f2d
 1818              	.LVL140:
 1819              		.loc 1 264 39 view .LVU441
 1820 001e 0022     		movs	r2, #0
 1821 0020 244B     		ldr	r3, .L150+4
 1822 0022 FFF7FEFF 		bl	__aeabi_dadd
 1823              	.LVL141:
 1824 0026 0246     		mov	r2, r0
 1825 0028 0B46     		mov	r3, r1
 1826              		.loc 1 264 11 view .LVU442
 1827 002a 3046     		mov	r0, r6
 1828 002c 3946     		mov	r1, r7
 1829 002e FFF7FEFF 		bl	__aeabi_dcmpgt
 1830              	.LVL142:
 1831 0032 10B1     		cbz	r0, .L138
 265:Src/core.c    ****             state.tempAchieveCounter++;
 1832              		.loc 1 265 13 is_stmt 1 view .LVU443
 1833              		.loc 1 265 18 is_stmt 0 view .LVU444
 1834 0034 6B6A     		ldr	r3, [r5, #36]
 1835              		.loc 1 265 37 view .LVU445
 1836 0036 0133     		adds	r3, r3, #1
 1837 0038 6B62     		str	r3, [r5, #36]
ARM GAS  /tmp/ccsSrQjn.s 			page 42


 1838              	.L138:
 266:Src/core.c    ****     if(checkounter >= 60) {
 1839              		.loc 1 266 5 is_stmt 1 view .LVU446
 1840              		.loc 1 266 20 is_stmt 0 view .LVU447
 1841 003a 1F4B     		ldr	r3, .L150+8
 1842 003c 1B68     		ldr	r3, [r3]
 1843              		.loc 1 266 7 view .LVU448
 1844 003e 3B2B     		cmp	r3, #59
 1845 0040 32DD     		ble	.L140
 267:Src/core.c    ****         if(state.tempAchieveCounter >= 54) {
 1846              		.loc 1 267 9 is_stmt 1 view .LVU449
 1847              		.loc 1 267 17 is_stmt 0 view .LVU450
 1848 0042 1B4B     		ldr	r3, .L150
 1849 0044 5B6A     		ldr	r3, [r3, #36]
 1850              		.loc 1 267 11 view .LVU451
 1851 0046 352B     		cmp	r3, #53
 1852 0048 08DD     		ble	.L141
 268:Src/core.c    ****             if(state.sw == SYS_ON) state.sw = SYS_OFF;
 1853              		.loc 1 268 13 is_stmt 1 view .LVU452
 1854              		.loc 1 268 15 is_stmt 0 view .LVU453
 1855 004a 012C     		cmp	r4, #1
 1856 004c 28D0     		beq	.L149
 269:Src/core.c    ****             else state.sw = SYS_ON;
 1857              		.loc 1 269 18 is_stmt 1 view .LVU454
 1858              		.loc 1 269 27 is_stmt 0 view .LVU455
 1859 004e 184B     		ldr	r3, .L150
 1860 0050 0122     		movs	r2, #1
 1861 0052 1A70     		strb	r2, [r3]
 1862              	.L143:
 270:Src/core.c    ****             move(state.sw);
 1863              		.loc 1 270 13 is_stmt 1 view .LVU456
 1864 0054 164B     		ldr	r3, .L150
 1865 0056 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1866 0058 FFF7FEFF 		bl	move
 1867              	.LVL143:
 1868              	.L141:
 271:Src/core.c    ****         }
 272:Src/core.c    ****         checkounter = 0;
 1869              		.loc 1 272 9 view .LVU457
 1870              		.loc 1 272 21 is_stmt 0 view .LVU458
 1871 005c 0022     		movs	r2, #0
 1872 005e 164B     		ldr	r3, .L150+8
 1873 0060 1A60     		str	r2, [r3]
 273:Src/core.c    ****         lastAchievement = state.tempAchieveCounter;
 1874              		.loc 1 273 9 is_stmt 1 view .LVU459
 1875              		.loc 1 273 32 is_stmt 0 view .LVU460
 1876 0062 134B     		ldr	r3, .L150
 1877 0064 586A     		ldr	r0, [r3, #36]
 1878              		.loc 1 273 25 view .LVU461
 1879 0066 1549     		ldr	r1, .L150+12
 1880 0068 0860     		str	r0, [r1]
 274:Src/core.c    ****         state.tempAchieveCounter = 0;
 1881              		.loc 1 274 9 is_stmt 1 view .LVU462
 1882              		.loc 1 274 34 is_stmt 0 view .LVU463
 1883 006a 5A62     		str	r2, [r3, #36]
 1884              	.L135:
 275:Src/core.c    ****     }
ARM GAS  /tmp/ccsSrQjn.s 			page 43


 276:Src/core.c    ****     else checkounter++;
 277:Src/core.c    **** }
 1885              		.loc 1 277 1 view .LVU464
 1886 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1887              	.L148:
 261:Src/core.c    ****             state.tempAchieveCounter++;
 1888              		.loc 1 261 9 is_stmt 1 view .LVU465
 261:Src/core.c    ****             state.tempAchieveCounter++;
 1889              		.loc 1 261 17 is_stmt 0 view .LVU466
 1890 006e 1D46     		mov	r5, r3
 1891 0070 9869     		ldr	r0, [r3, #24]	@ float
 1892 0072 FFF7FEFF 		bl	__aeabi_f2d
 1893              	.LVL144:
 1894 0076 0646     		mov	r6, r0
 1895 0078 0F46     		mov	r7, r1
 261:Src/core.c    ****             state.tempAchieveCounter++;
 1896              		.loc 1 261 30 view .LVU467
 1897 007a A868     		ldr	r0, [r5, #8]	@ float
 1898 007c FFF7FEFF 		bl	__aeabi_f2d
 1899              	.LVL145:
 261:Src/core.c    ****             state.tempAchieveCounter++;
 1900              		.loc 1 261 39 view .LVU468
 1901 0080 0022     		movs	r2, #0
 1902 0082 0C4B     		ldr	r3, .L150+4
 1903 0084 FFF7FEFF 		bl	__aeabi_dsub
 1904              	.LVL146:
 1905 0088 0246     		mov	r2, r0
 1906 008a 0B46     		mov	r3, r1
 261:Src/core.c    ****             state.tempAchieveCounter++;
 1907              		.loc 1 261 11 view .LVU469
 1908 008c 3046     		mov	r0, r6
 1909 008e 3946     		mov	r1, r7
 1910 0090 FFF7FEFF 		bl	__aeabi_dcmplt
 1911              	.LVL147:
 1912 0094 0028     		cmp	r0, #0
 1913 0096 B8D0     		beq	.L136
 262:Src/core.c    ****     if(state.sw == SYS_OFF)
 1914              		.loc 1 262 13 is_stmt 1 view .LVU470
 262:Src/core.c    ****     if(state.sw == SYS_OFF)
 1915              		.loc 1 262 18 is_stmt 0 view .LVU471
 1916 0098 6B6A     		ldr	r3, [r5, #36]
 262:Src/core.c    ****     if(state.sw == SYS_OFF)
 1917              		.loc 1 262 37 view .LVU472
 1918 009a 0133     		adds	r3, r3, #1
 1919 009c 6B62     		str	r3, [r5, #36]
 1920 009e B4E7     		b	.L136
 1921              	.L149:
 268:Src/core.c    ****             else state.sw = SYS_ON;
 1922              		.loc 1 268 36 is_stmt 1 discriminator 1 view .LVU473
 268:Src/core.c    ****             else state.sw = SYS_ON;
 1923              		.loc 1 268 45 is_stmt 0 discriminator 1 view .LVU474
 1924 00a0 034B     		ldr	r3, .L150
 1925 00a2 0022     		movs	r2, #0
 1926 00a4 1A70     		strb	r2, [r3]
 1927 00a6 D5E7     		b	.L143
 1928              	.L140:
 276:Src/core.c    **** }
ARM GAS  /tmp/ccsSrQjn.s 			page 44


 1929              		.loc 1 276 10 is_stmt 1 view .LVU475
 276:Src/core.c    **** }
 1930              		.loc 1 276 21 is_stmt 0 view .LVU476
 1931 00a8 0133     		adds	r3, r3, #1
 1932 00aa 034A     		ldr	r2, .L150+8
 1933 00ac 1360     		str	r3, [r2]
 1934              		.loc 1 277 1 view .LVU477
 1935 00ae DDE7     		b	.L135
 1936              	.L151:
 1937              		.align	2
 1938              	.L150:
 1939 00b0 00000000 		.word	state
 1940 00b4 0000E03F 		.word	1071644672
 1941 00b8 00000000 		.word	.LANCHOR7
 1942 00bc 00000000 		.word	.LANCHOR5
 1943              		.cfi_endproc
 1944              	.LFE75:
 1946              		.section	.text.timeCheck,"ax",%progbits
 1947              		.align	1
 1948              		.global	timeCheck
 1949              		.syntax unified
 1950              		.thumb
 1951              		.thumb_func
 1952              		.fpu softvfp
 1954              	timeCheck:
 1955              	.LFB76:
 278:Src/core.c    **** 
 279:Src/core.c    **** void timeCheck() {
 1956              		.loc 1 279 18 is_stmt 1 view -0
 1957              		.cfi_startproc
 1958              		@ args = 0, pretend = 0, frame = 0
 1959              		@ frame_needed = 0, uses_anonymous_args = 0
 1960 0000 08B5     		push	{r3, lr}
 1961              	.LCFI14:
 1962              		.cfi_def_cfa_offset 8
 1963              		.cfi_offset 3, -8
 1964              		.cfi_offset 14, -4
 280:Src/core.c    ****     if(state.sw == SYS_ON){
 1965              		.loc 1 280 5 view .LVU479
 1966              		.loc 1 280 13 is_stmt 0 view .LVU480
 1967 0002 194B     		ldr	r3, .L158
 1968 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1969              		.loc 1 280 7 view .LVU481
 1970 0006 012B     		cmp	r3, #1
 1971 0008 11D0     		beq	.L156
 281:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 282:Src/core.c    ****             state.sw = SYS_OFF;
 283:Src/core.c    ****             move(state.sw);
 284:Src/core.c    ****         }
 285:Src/core.c    ****     }
 286:Src/core.c    ****     else {
 287:Src/core.c    ****         if(runningTime - state.shutDownTime >= state.tarTime[1]*60) {
 1972              		.loc 1 287 9 is_stmt 1 view .LVU482
 1973              		.loc 1 287 31 is_stmt 0 view .LVU483
 1974 000a 174B     		ldr	r3, .L158
 1975 000c 1A6A     		ldr	r2, [r3, #32]
 1976              		.loc 1 287 24 view .LVU484
ARM GAS  /tmp/ccsSrQjn.s 			page 45


 1977 000e 1749     		ldr	r1, .L158+4
 1978 0010 D1E90001 		ldrd	r0, [r1]
 1979 0014 801A     		subs	r0, r0, r2
 1980 0016 61EBE271 		sbc	r1, r1, r2, asr #31
 1981              		.loc 1 287 61 view .LVU485
 1982 001a 1B69     		ldr	r3, [r3, #16]
 1983              		.loc 1 287 64 view .LVU486
 1984 001c C3EB0313 		rsb	r3, r3, r3, lsl #4
 1985 0020 9A00     		lsls	r2, r3, #2
 1986 0022 D317     		asrs	r3, r2, #31
 1987              		.loc 1 287 11 view .LVU487
 1988 0024 9942     		cmp	r1, r3
 1989 0026 08BF     		it	eq
 1990 0028 9042     		cmpeq	r0, r2
 1991 002a 17D2     		bcs	.L157
 1992              	.L152:
 288:Src/core.c    ****             state.sw = SYS_ON;
 289:Src/core.c    ****             move(state.sw);
 290:Src/core.c    ****         }
 291:Src/core.c    ****     }
 292:Src/core.c    **** 
 293:Src/core.c    **** }
 1993              		.loc 1 293 1 view .LVU488
 1994 002c 08BD     		pop	{r3, pc}
 1995              	.L156:
 281:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 1996              		.loc 1 281 9 is_stmt 1 view .LVU489
 281:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 1997              		.loc 1 281 31 is_stmt 0 view .LVU490
 1998 002e 0E4B     		ldr	r3, .L158
 1999 0030 DA69     		ldr	r2, [r3, #28]
 281:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 2000              		.loc 1 281 24 view .LVU491
 2001 0032 0E49     		ldr	r1, .L158+4
 2002 0034 D1E90001 		ldrd	r0, [r1]
 2003 0038 801A     		subs	r0, r0, r2
 2004 003a 61EBE271 		sbc	r1, r1, r2, asr #31
 281:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 2005              		.loc 1 281 58 view .LVU492
 2006 003e DB68     		ldr	r3, [r3, #12]
 281:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 2007              		.loc 1 281 61 view .LVU493
 2008 0040 C3EB0313 		rsb	r3, r3, r3, lsl #4
 2009 0044 9A00     		lsls	r2, r3, #2
 2010 0046 D317     		asrs	r3, r2, #31
 281:Src/core.c    ****         if(runningTime - state.startTime >= state.tarTime[0]*60) {
 2011              		.loc 1 281 11 view .LVU494
 2012 0048 9942     		cmp	r1, r3
 2013 004a 08BF     		it	eq
 2014 004c 9042     		cmpeq	r0, r2
 2015 004e EDD3     		bcc	.L152
 282:Src/core.c    ****             move(state.sw);
 2016              		.loc 1 282 13 is_stmt 1 view .LVU495
 282:Src/core.c    ****             move(state.sw);
 2017              		.loc 1 282 22 is_stmt 0 view .LVU496
 2018 0050 0020     		movs	r0, #0
 2019 0052 054B     		ldr	r3, .L158
ARM GAS  /tmp/ccsSrQjn.s 			page 46


 2020 0054 1870     		strb	r0, [r3]
 283:Src/core.c    ****         }
 2021              		.loc 1 283 13 is_stmt 1 view .LVU497
 2022 0056 FFF7FEFF 		bl	move
 2023              	.LVL148:
 2024 005a E7E7     		b	.L152
 2025              	.L157:
 288:Src/core.c    ****             state.sw = SYS_ON;
 2026              		.loc 1 288 13 view .LVU498
 288:Src/core.c    ****             state.sw = SYS_ON;
 2027              		.loc 1 288 22 is_stmt 0 view .LVU499
 2028 005c 0120     		movs	r0, #1
 2029 005e 024B     		ldr	r3, .L158
 2030 0060 1870     		strb	r0, [r3]
 289:Src/core.c    ****         }
 2031              		.loc 1 289 13 is_stmt 1 view .LVU500
 2032 0062 FFF7FEFF 		bl	move
 2033              	.LVL149:
 2034              		.loc 1 293 1 is_stmt 0 view .LVU501
 2035 0066 E1E7     		b	.L152
 2036              	.L159:
 2037              		.align	2
 2038              	.L158:
 2039 0068 00000000 		.word	state
 2040 006c 00000000 		.word	runningTime
 2041              		.cfi_endproc
 2042              	.LFE76:
 2044              		.global	checkounter
 2045              		.global	initTemp
 2046              		.global	lastAchievement
 2047              		.comm	msg,120,4
 2048              		.global	Uart1_Rx_Cnt
 2049              		.comm	aRxBuffer,1,1
 2050              		.comm	RxBuffer,512,4
 2051              		.comm	state,40,4
 2052              		.global	servo2_down
 2053              		.global	servo2_up
 2054              		.global	servo1_down
 2055              		.global	servo1_up
 2056              		.section	.bss.Uart1_Rx_Cnt,"aw",%nobits
 2057              		.set	.LANCHOR4,. + 0
 2060              	Uart1_Rx_Cnt:
 2061 0000 00       		.space	1
 2062              		.section	.bss.checkounter,"aw",%nobits
 2063              		.align	2
 2064              		.set	.LANCHOR7,. + 0
 2067              	checkounter:
 2068 0000 00000000 		.space	4
 2069              		.section	.bss.initTemp,"aw",%nobits
 2070              		.align	2
 2071              		.set	.LANCHOR6,. + 0
 2074              	initTemp:
 2075 0000 00000000 		.space	4
 2076              		.section	.bss.lastAchievement,"aw",%nobits
 2077              		.align	2
 2078              		.set	.LANCHOR5,. + 0
 2081              	lastAchievement:
ARM GAS  /tmp/ccsSrQjn.s 			page 47


 2082 0000 00000000 		.space	4
 2083              		.section	.data.servo1_down,"aw"
 2084              		.align	2
 2085              		.set	.LANCHOR1,. + 0
 2088              	servo1_down:
 2089 0000 14050000 		.word	1300
 2090              		.section	.data.servo1_up,"aw"
 2091              		.align	2
 2092              		.set	.LANCHOR3,. + 0
 2095              	servo1_up:
 2096 0000 D0070000 		.word	2000
 2097              		.section	.data.servo2_down,"aw"
 2098              		.align	2
 2099              		.set	.LANCHOR0,. + 0
 2102              	servo2_down:
 2103 0000 4C040000 		.word	1100
 2104              		.section	.data.servo2_up,"aw"
 2105              		.align	2
 2106              		.set	.LANCHOR2,. + 0
 2109              	servo2_up:
 2110 0000 D6060000 		.word	1750
 2111              		.text
 2112              	.Letext0:
 2113              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2114              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
 2115              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2116              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2117              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2118              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2119              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2120              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2121              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2122              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 2123              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 2124              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2125              		.file 14 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 2126              		.file 15 "/usr/include/newlib/sys/_types.h"
 2127              		.file 16 "/usr/include/newlib/sys/reent.h"
 2128              		.file 17 "/usr/include/newlib/sys/lock.h"
 2129              		.file 18 "Inc/adc.h"
 2130              		.file 19 "Inc/tim.h"
 2131              		.file 20 "Inc/usart.h"
 2132              		.file 21 "Inc/core.h"
 2133              		.file 22 "Inc/timer.h"
 2134              		.file 23 "/usr/include/newlib/stdio.h"
 2135              		.file 24 "/usr/include/newlib/string.h"
 2136              		.file 25 "<built-in>"
 2137              		.file 26 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc_ex.h"
ARM GAS  /tmp/ccsSrQjn.s 			page 48


DEFINED SYMBOLS
                            *ABS*:0000000000000000 core.c
     /tmp/ccsSrQjn.s:16     .text.init_system:0000000000000000 $t
     /tmp/ccsSrQjn.s:24     .text.init_system:0000000000000000 init_system
     /tmp/ccsSrQjn.s:242    .text.init_system:0000000000000120 $d
                            *COM*:0000000000000028 state
                            *COM*:0000000000000001 aRxBuffer
     /tmp/ccsSrQjn.s:260    .text.string2int:0000000000000000 $t
     /tmp/ccsSrQjn.s:267    .text.string2int:0000000000000000 string2int
     /tmp/ccsSrQjn.s:386    .rodata.bluetooth_decode.str1.4:0000000000000000 $d
     /tmp/ccsSrQjn.s:395    .text.bluetooth_decode:0000000000000000 $t
     /tmp/ccsSrQjn.s:402    .text.bluetooth_decode:0000000000000000 bluetooth_decode
     /tmp/ccsSrQjn.s:508    .text.bluetooth_decode:0000000000000060 $d
     /tmp/ccsSrQjn.s:512    .text.bluetooth_decode:0000000000000064 $t
     /tmp/ccsSrQjn.s:766    .text.bluetooth_decode:0000000000000160 $d
                            *COM*:0000000000000200 RxBuffer
     /tmp/ccsSrQjn.s:775    .text.changeLight:0000000000000000 $t
     /tmp/ccsSrQjn.s:782    .text.changeLight:0000000000000000 changeLight
     /tmp/ccsSrQjn.s:861    .text.changeLight:0000000000000054 $d
     /tmp/ccsSrQjn.s:866    .rodata.send_state.str1.4:0000000000000000 $d
     /tmp/ccsSrQjn.s:933    .text.send_state:0000000000000000 $t
     /tmp/ccsSrQjn.s:940    .text.send_state:0000000000000000 send_state
     /tmp/ccsSrQjn.s:1277   .text.send_state:00000000000001bc $d
     /tmp/ccsSrQjn.s:1309   .text.move:0000000000000000 $t
     /tmp/ccsSrQjn.s:1316   .text.move:0000000000000000 move
     /tmp/ccsSrQjn.s:1458   .text.move:00000000000000b8 $d
     /tmp/ccsSrQjn.s:1473   .rodata.update_info.str1.4:0000000000000000 $d
     /tmp/ccsSrQjn.s:1491   .text.update_info:0000000000000000 $t
     /tmp/ccsSrQjn.s:1498   .text.update_info:0000000000000000 update_info
     /tmp/ccsSrQjn.s:1750   .text.update_info:0000000000000120 $d
                            *COM*:0000000000000078 msg
     /tmp/ccsSrQjn.s:1774   .text.tempCheck:0000000000000000 $t
     /tmp/ccsSrQjn.s:1781   .text.tempCheck:0000000000000000 tempCheck
     /tmp/ccsSrQjn.s:1939   .text.tempCheck:00000000000000b0 $d
     /tmp/ccsSrQjn.s:1947   .text.timeCheck:0000000000000000 $t
     /tmp/ccsSrQjn.s:1954   .text.timeCheck:0000000000000000 timeCheck
     /tmp/ccsSrQjn.s:2039   .text.timeCheck:0000000000000068 $d
     /tmp/ccsSrQjn.s:2067   .bss.checkounter:0000000000000000 checkounter
     /tmp/ccsSrQjn.s:2074   .bss.initTemp:0000000000000000 initTemp
     /tmp/ccsSrQjn.s:2081   .bss.lastAchievement:0000000000000000 lastAchievement
     /tmp/ccsSrQjn.s:2060   .bss.Uart1_Rx_Cnt:0000000000000000 Uart1_Rx_Cnt
     /tmp/ccsSrQjn.s:2102   .data.servo2_down:0000000000000000 servo2_down
     /tmp/ccsSrQjn.s:2109   .data.servo2_up:0000000000000000 servo2_up
     /tmp/ccsSrQjn.s:2088   .data.servo1_down:0000000000000000 servo1_down
     /tmp/ccsSrQjn.s:2095   .data.servo1_up:0000000000000000 servo1_up
     /tmp/ccsSrQjn.s:2061   .bss.Uart1_Rx_Cnt:0000000000000000 $d
     /tmp/ccsSrQjn.s:2063   .bss.checkounter:0000000000000000 $d
     /tmp/ccsSrQjn.s:2070   .bss.initTemp:0000000000000000 $d
     /tmp/ccsSrQjn.s:2077   .bss.lastAchievement:0000000000000000 $d
     /tmp/ccsSrQjn.s:2084   .data.servo1_down:0000000000000000 $d
     /tmp/ccsSrQjn.s:2091   .data.servo1_up:0000000000000000 $d
     /tmp/ccsSrQjn.s:2098   .data.servo2_down:0000000000000000 $d
     /tmp/ccsSrQjn.s:2105   .data.servo2_up:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
timerInit
ARM GAS  /tmp/ccsSrQjn.s 			page 49


HAL_ADCEx_Calibration_Start
HAL_Delay
HAL_ADC_Start
HAL_UART_Receive_IT
HAL_TIM_PWM_Start
HAL_GPIO_WritePin
hadc1
huart1
htim1
htim2
__aeabi_i2f
__aeabi_f2d
printf
memset
strcat
strlen
putchar
runningTime
__aeabi_f2iz
__aeabi_ui2f
__aeabi_fmul
HAL_ADC_GetValue
__aeabi_dsub
__aeabi_dcmplt
__aeabi_dadd
__aeabi_dcmpgt
